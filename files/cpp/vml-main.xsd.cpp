#include "vml-main_xsd.h"
#include <stdlib.h>
#include <sstream>
#include "vml-officeDrawing_xsd.h"
#include "wml_xsd.h"
#include "vml-wordprocessingDrawing_xsd.h"
#include "shared-relationshipReference_xsd.h"
#include "vml-spreadsheetDrawing_xsd.h"
#include "vml-presentationDrawing_xsd.h"
#include "shared-commonSimpleTypes_xsd.h"
namespace ns_v{
    class Element : public XSD::Element{
    public:

    private:

    }

    class Attribute : public XSD::Attribute{
    public:

    private:

    }

    class ST_Ext : public XSD::SimpleType{
    public:
        ST_Ext(){
            m_has_type = false

        }
        ST_Ext(const Type _type ){
            m_has_type = true
            m_type = _type

        }
        bool has_type(){

            return m_has_type;
        
        }
        void set_type(const Type& _type ){

            m_has_type = true;
            m_type = _type;
        
        }
        const Type& type(){

            return m_type;
        
        }
        string toString(){

        return ST_Ext::TypeStrList[m_type];
    
        }
        void clear(){

            m_has_type = false;
        
        }
        void toXml(const string _attrName , ostream _outStream ){

            if (m_has_type)
            {
                '_outStream << _attrName << \=\\ << toString() << \\\;';
            }
        
        }
        const ST_Ext& default_instance(){

    if (!ST_Ext::default_instance_)
    {
        ST_Ext::default_instance_ = new ST_Ext();
    }
    return *ST_Ext::default_instance_;

        }
        enum Type{
            _view_ = 1,
            _edit_,
            _backwardCompatible_
        }

    private:
        static const string TypeStrList [];
        static ST_Ext* default_instance_ ;
        bool m_has_type ;
        Type m_type ;

    }

    class ST_FillType : public XSD::SimpleType{
    public:
        ST_FillType(){
            m_has_type = false

        }
        ST_FillType(const Type _type ){
            m_has_type = true
            m_type = _type

        }
        bool has_type(){

            return m_has_type;
        
        }
        void set_type(const Type& _type ){

            m_has_type = true;
            m_type = _type;
        
        }
        const Type& type(){

            return m_type;
        
        }
        string toString(){

        return ST_FillType::TypeStrList[m_type];
    
        }
        void clear(){

            m_has_type = false;
        
        }
        void toXml(const string _attrName , ostream _outStream ){

            if (m_has_type)
            {
                '_outStream << _attrName << \=\\ << toString() << \\\;';
            }
        
        }
        const ST_FillType& default_instance(){

    if (!ST_FillType::default_instance_)
    {
        ST_FillType::default_instance_ = new ST_FillType();
    }
    return *ST_FillType::default_instance_;

        }
        enum Type{
            _solid_ = 1,
            _gradient_,
            _gradientRadial_,
            _tile_,
            _pattern_,
            _frame_
        }

    private:
        static const string TypeStrList [];
        static ST_FillType* default_instance_ ;
        bool m_has_type ;
        Type m_type ;

    }

    class ST_FillMethod : public XSD::SimpleType{
    public:
        ST_FillMethod(){
            m_has_type = false

        }
        ST_FillMethod(const Type _type ){
            m_has_type = true
            m_type = _type

        }
        bool has_type(){

            return m_has_type;
        
        }
        void set_type(const Type& _type ){

            m_has_type = true;
            m_type = _type;
        
        }
        const Type& type(){

            return m_type;
        
        }
        string toString(){

        return ST_FillMethod::TypeStrList[m_type];
    
        }
        void clear(){

            m_has_type = false;
        
        }
        void toXml(const string _attrName , ostream _outStream ){

            if (m_has_type)
            {
                '_outStream << _attrName << \=\\ << toString() << \\\;';
            }
        
        }
        const ST_FillMethod& default_instance(){

    if (!ST_FillMethod::default_instance_)
    {
        ST_FillMethod::default_instance_ = new ST_FillMethod();
    }
    return *ST_FillMethod::default_instance_;

        }
        enum Type{
            _none_ = 1,
            _linear_,
            _sigma_,
            _any_,
            _linear sigma_
        }

    private:
        static const string TypeStrList [];
        static ST_FillMethod* default_instance_ ;
        bool m_has_type ;
        Type m_type ;

    }

    class ST_ShadowType : public XSD::SimpleType{
    public:
        ST_ShadowType(){
            m_has_type = false

        }
        ST_ShadowType(const Type _type ){
            m_has_type = true
            m_type = _type

        }
        bool has_type(){

            return m_has_type;
        
        }
        void set_type(const Type& _type ){

            m_has_type = true;
            m_type = _type;
        
        }
        const Type& type(){

            return m_type;
        
        }
        string toString(){

        return ST_ShadowType::TypeStrList[m_type];
    
        }
        void clear(){

            m_has_type = false;
        
        }
        void toXml(const string _attrName , ostream _outStream ){

            if (m_has_type)
            {
                '_outStream << _attrName << \=\\ << toString() << \\\;';
            }
        
        }
        const ST_ShadowType& default_instance(){

    if (!ST_ShadowType::default_instance_)
    {
        ST_ShadowType::default_instance_ = new ST_ShadowType();
    }
    return *ST_ShadowType::default_instance_;

        }
        enum Type{
            _single_ = 1,
            _double_,
            _emboss_,
            _perspective_
        }

    private:
        static const string TypeStrList [];
        static ST_ShadowType* default_instance_ ;
        bool m_has_type ;
        Type m_type ;

    }

    class ST_StrokeLineStyle : public XSD::SimpleType{
    public:
        ST_StrokeLineStyle(){
            m_has_type = false

        }
        ST_StrokeLineStyle(const Type _type ){
            m_has_type = true
            m_type = _type

        }
        bool has_type(){

            return m_has_type;
        
        }
        void set_type(const Type& _type ){

            m_has_type = true;
            m_type = _type;
        
        }
        const Type& type(){

            return m_type;
        
        }
        string toString(){

        return ST_StrokeLineStyle::TypeStrList[m_type];
    
        }
        void clear(){

            m_has_type = false;
        
        }
        void toXml(const string _attrName , ostream _outStream ){

            if (m_has_type)
            {
                '_outStream << _attrName << \=\\ << toString() << \\\;';
            }
        
        }
        const ST_StrokeLineStyle& default_instance(){

    if (!ST_StrokeLineStyle::default_instance_)
    {
        ST_StrokeLineStyle::default_instance_ = new ST_StrokeLineStyle();
    }
    return *ST_StrokeLineStyle::default_instance_;

        }
        enum Type{
            _single_ = 1,
            _thinThin_,
            _thinThick_,
            _thickThin_,
            _thickBetweenThin_
        }

    private:
        static const string TypeStrList [];
        static ST_StrokeLineStyle* default_instance_ ;
        bool m_has_type ;
        Type m_type ;

    }

    class ST_StrokeJoinStyle : public XSD::SimpleType{
    public:
        ST_StrokeJoinStyle(){
            m_has_type = false

        }
        ST_StrokeJoinStyle(const Type _type ){
            m_has_type = true
            m_type = _type

        }
        bool has_type(){

            return m_has_type;
        
        }
        void set_type(const Type& _type ){

            m_has_type = true;
            m_type = _type;
        
        }
        const Type& type(){

            return m_type;
        
        }
        string toString(){

        return ST_StrokeJoinStyle::TypeStrList[m_type];
    
        }
        void clear(){

            m_has_type = false;
        
        }
        void toXml(const string _attrName , ostream _outStream ){

            if (m_has_type)
            {
                '_outStream << _attrName << \=\\ << toString() << \\\;';
            }
        
        }
        const ST_StrokeJoinStyle& default_instance(){

    if (!ST_StrokeJoinStyle::default_instance_)
    {
        ST_StrokeJoinStyle::default_instance_ = new ST_StrokeJoinStyle();
    }
    return *ST_StrokeJoinStyle::default_instance_;

        }
        enum Type{
            _round_ = 1,
            _bevel_,
            _miter_
        }

    private:
        static const string TypeStrList [];
        static ST_StrokeJoinStyle* default_instance_ ;
        bool m_has_type ;
        Type m_type ;

    }

    class ST_StrokeEndCap : public XSD::SimpleType{
    public:
        ST_StrokeEndCap(){
            m_has_type = false

        }
        ST_StrokeEndCap(const Type _type ){
            m_has_type = true
            m_type = _type

        }
        bool has_type(){

            return m_has_type;
        
        }
        void set_type(const Type& _type ){

            m_has_type = true;
            m_type = _type;
        
        }
        const Type& type(){

            return m_type;
        
        }
        string toString(){

        return ST_StrokeEndCap::TypeStrList[m_type];
    
        }
        void clear(){

            m_has_type = false;
        
        }
        void toXml(const string _attrName , ostream _outStream ){

            if (m_has_type)
            {
                '_outStream << _attrName << \=\\ << toString() << \\\;';
            }
        
        }
        const ST_StrokeEndCap& default_instance(){

    if (!ST_StrokeEndCap::default_instance_)
    {
        ST_StrokeEndCap::default_instance_ = new ST_StrokeEndCap();
    }
    return *ST_StrokeEndCap::default_instance_;

        }
        enum Type{
            _flat_ = 1,
            _square_,
            _round_
        }

    private:
        static const string TypeStrList [];
        static ST_StrokeEndCap* default_instance_ ;
        bool m_has_type ;
        Type m_type ;

    }

    class ST_StrokeArrowLength : public XSD::SimpleType{
    public:
        ST_StrokeArrowLength(){
            m_has_type = false

        }
        ST_StrokeArrowLength(const Type _type ){
            m_has_type = true
            m_type = _type

        }
        bool has_type(){

            return m_has_type;
        
        }
        void set_type(const Type& _type ){

            m_has_type = true;
            m_type = _type;
        
        }
        const Type& type(){

            return m_type;
        
        }
        string toString(){

        return ST_StrokeArrowLength::TypeStrList[m_type];
    
        }
        void clear(){

            m_has_type = false;
        
        }
        void toXml(const string _attrName , ostream _outStream ){

            if (m_has_type)
            {
                '_outStream << _attrName << \=\\ << toString() << \\\;';
            }
        
        }
        const ST_StrokeArrowLength& default_instance(){

    if (!ST_StrokeArrowLength::default_instance_)
    {
        ST_StrokeArrowLength::default_instance_ = new ST_StrokeArrowLength();
    }
    return *ST_StrokeArrowLength::default_instance_;

        }
        enum Type{
            _short_ = 1,
            _medium_,
            _long_
        }

    private:
        static const string TypeStrList [];
        static ST_StrokeArrowLength* default_instance_ ;
        bool m_has_type ;
        Type m_type ;

    }

    class ST_StrokeArrowWidth : public XSD::SimpleType{
    public:
        ST_StrokeArrowWidth(){
            m_has_type = false

        }
        ST_StrokeArrowWidth(const Type _type ){
            m_has_type = true
            m_type = _type

        }
        bool has_type(){

            return m_has_type;
        
        }
        void set_type(const Type& _type ){

            m_has_type = true;
            m_type = _type;
        
        }
        const Type& type(){

            return m_type;
        
        }
        string toString(){

        return ST_StrokeArrowWidth::TypeStrList[m_type];
    
        }
        void clear(){

            m_has_type = false;
        
        }
        void toXml(const string _attrName , ostream _outStream ){

            if (m_has_type)
            {
                '_outStream << _attrName << \=\\ << toString() << \\\;';
            }
        
        }
        const ST_StrokeArrowWidth& default_instance(){

    if (!ST_StrokeArrowWidth::default_instance_)
    {
        ST_StrokeArrowWidth::default_instance_ = new ST_StrokeArrowWidth();
    }
    return *ST_StrokeArrowWidth::default_instance_;

        }
        enum Type{
            _narrow_ = 1,
            _medium_,
            _wide_
        }

    private:
        static const string TypeStrList [];
        static ST_StrokeArrowWidth* default_instance_ ;
        bool m_has_type ;
        Type m_type ;

    }

    class ST_StrokeArrowType : public XSD::SimpleType{
    public:
        ST_StrokeArrowType(){
            m_has_type = false

        }
        ST_StrokeArrowType(const Type _type ){
            m_has_type = true
            m_type = _type

        }
        bool has_type(){

            return m_has_type;
        
        }
        void set_type(const Type& _type ){

            m_has_type = true;
            m_type = _type;
        
        }
        const Type& type(){

            return m_type;
        
        }
        string toString(){

        return ST_StrokeArrowType::TypeStrList[m_type];
    
        }
        void clear(){

            m_has_type = false;
        
        }
        void toXml(const string _attrName , ostream _outStream ){

            if (m_has_type)
            {
                '_outStream << _attrName << \=\\ << toString() << \\\;';
            }
        
        }
        const ST_StrokeArrowType& default_instance(){

    if (!ST_StrokeArrowType::default_instance_)
    {
        ST_StrokeArrowType::default_instance_ = new ST_StrokeArrowType();
    }
    return *ST_StrokeArrowType::default_instance_;

        }
        enum Type{
            _none_ = 1,
            _block_,
            _classic_,
            _oval_,
            _diamond_,
            _open_
        }

    private:
        static const string TypeStrList [];
        static ST_StrokeArrowType* default_instance_ ;
        bool m_has_type ;
        Type m_type ;

    }

    class ST_ImageAspect : public XSD::SimpleType{
    public:
        ST_ImageAspect(){
            m_has_type = false

        }
        ST_ImageAspect(const Type _type ){
            m_has_type = true
            m_type = _type

        }
        bool has_type(){

            return m_has_type;
        
        }
        void set_type(const Type& _type ){

            m_has_type = true;
            m_type = _type;
        
        }
        const Type& type(){

            return m_type;
        
        }
        string toString(){

        return ST_ImageAspect::TypeStrList[m_type];
    
        }
        void clear(){

            m_has_type = false;
        
        }
        void toXml(const string _attrName , ostream _outStream ){

            if (m_has_type)
            {
                '_outStream << _attrName << \=\\ << toString() << \\\;';
            }
        
        }
        const ST_ImageAspect& default_instance(){

    if (!ST_ImageAspect::default_instance_)
    {
        ST_ImageAspect::default_instance_ = new ST_ImageAspect();
    }
    return *ST_ImageAspect::default_instance_;

        }
        enum Type{
            _ignore_ = 1,
            _atMost_,
            _atLeast_
        }

    private:
        static const string TypeStrList [];
        static ST_ImageAspect* default_instance_ ;
        bool m_has_type ;
        Type m_type ;

    }

    class ST_EditAs : public XSD::SimpleType{
    public:
        ST_EditAs(){
            m_has_type = false

        }
        ST_EditAs(const Type _type ){
            m_has_type = true
            m_type = _type

        }
        bool has_type(){

            return m_has_type;
        
        }
        void set_type(const Type& _type ){

            m_has_type = true;
            m_type = _type;
        
        }
        const Type& type(){

            return m_type;
        
        }
        string toString(){

        return ST_EditAs::TypeStrList[m_type];
    
        }
        void clear(){

            m_has_type = false;
        
        }
        void toXml(const string _attrName , ostream _outStream ){

            if (m_has_type)
            {
                '_outStream << _attrName << \=\\ << toString() << \\\;';
            }
        
        }
        const ST_EditAs& default_instance(){

    if (!ST_EditAs::default_instance_)
    {
        ST_EditAs::default_instance_ = new ST_EditAs();
    }
    return *ST_EditAs::default_instance_;

        }
        enum Type{
            _canvas_ = 1,
            _orgchart_,
            _radial_,
            _cycle_,
            _stacked_,
            _venn_,
            _bullseye_
        }

    private:
        static const string TypeStrList [];
        static ST_EditAs* default_instance_ ;
        bool m_has_type ;
        Type m_type ;

    }

    class CT_Shape : public XSD::ComplexType{
    public:
        CT_Path* add_path(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Path* pNewChild = pChildGroup->mutable_path();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Formulas* add_formulas(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Formulas* pNewChild = pChildGroup->mutable_formulas();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Handles* add_handles(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Handles* pNewChild = pChildGroup->mutable_handles();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Fill* add_fill(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Fill* pNewChild = pChildGroup->mutable_fill();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Stroke* add_stroke(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Stroke* pNewChild = pChildGroup->mutable_stroke();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Shadow* add_shadow(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Shadow* pNewChild = pChildGroup->mutable_shadow();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Textbox* add_textbox(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Textbox* pNewChild = pChildGroup->mutable_textbox();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_TextPath* add_textpath(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_TextPath* pNewChild = pChildGroup->mutable_textpath();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ImageData* add_imagedata(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ImageData* pNewChild = pChildGroup->mutable_imagedata();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Skew* add_skew(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Skew* pNewChild = pChildGroup->mutable_skew();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Extrusion* add_extrusion(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Extrusion* pNewChild = pChildGroup->mutable_extrusion();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Callout* add_callout(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Callout* pNewChild = pChildGroup->mutable_callout();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Lock* add_lock(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Lock* pNewChild = pChildGroup->mutable_lock();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ClipPath* add_clippath(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ClipPath* pNewChild = pChildGroup->mutable_clippath();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SignatureLine* add_signatureline(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SignatureLine* pNewChild = pChildGroup->mutable_signatureline();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Wrap* add_wrap(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Wrap* pNewChild = pChildGroup->mutable_wrap();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_AnchorLock* add_anchorlock(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_AnchorLock* pNewChild = pChildGroup->mutable_anchorlock();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_bordertop(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_bordertop();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderbottom(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderbottom();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderleft(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderleft();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderright(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderright();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ClientData* add_ClientData(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ClientData* pNewChild = pChildGroup->mutable_ClientData();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Rel* add_textdata(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Rel* pNewChild = pChildGroup->mutable_textdata();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Ink* add_ink(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Ink* pNewChild = pChildGroup->mutable_ink();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Empty* add_iscomment(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Empty* pNewChild = pChildGroup->mutable_iscomment();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_EquationXml* add_equationxml(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_EquationXml* pNewChild = pChildGroup->mutable_equationxml();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        void clear(){

                m_has_type_attr = false;
                m_type_attr.clear();
            
                m_has_adj_attr = false;
                m_adj_attr.clear();
            
                m_has_path_attr = false;
                m_path_attr.clear();
            
                m_has_gfxdata_attr = false;
                m_gfxdata_attr.clear();
            
                m_has_equationxml_attr = false;
                m_equationxml_attr.clear();
            
            vector<ChildGroup_1*>::iterator iter;
            for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
            {
                delete *iter;
            }
            m_childGroupList_1.clear();
        
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    _outStream << _attrName << \=\\ << m_type_attr << \\\;
_outStream << _attrName << \=\\ << m_adj_attr << \\\;
_outStream << _attrName << \=\\ << m_path_attr << \\\;
_outStream << _attrName << \=\\ << m_gfxdata_attr << \\\;
_outStream << _attrName << \=\\ << m_equationxml_attr << \\\;
        _outStream << \>\;
    
        vector<ChildGroup_1*>::const_iterator iter;
        for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
        {
            if ((*iter)->has_path())
            {
                (*iter)->toXml(path, _outStream);
            }
            else if ((*iter)->has_formulas())
            {
                (*iter)->toXml(formulas, _outStream);
            }
            else if ((*iter)->has_handles())
            {
                (*iter)->toXml(handles, _outStream);
            }
            else if ((*iter)->has_fill())
            {
                (*iter)->toXml(fill, _outStream);
            }
            else if ((*iter)->has_stroke())
            {
                (*iter)->toXml(stroke, _outStream);
            }
            else if ((*iter)->has_shadow())
            {
                (*iter)->toXml(shadow, _outStream);
            }
            else if ((*iter)->has_textbox())
            {
                (*iter)->toXml(textbox, _outStream);
            }
            else if ((*iter)->has_textpath())
            {
                (*iter)->toXml(textpath, _outStream);
            }
            else if ((*iter)->has_imagedata())
            {
                (*iter)->toXml(imagedata, _outStream);
            }
            else if ((*iter)->has_skew())
            {
                (*iter)->toXml(skew, _outStream);
            }
            else if ((*iter)->has_extrusion())
            {
                (*iter)->toXml(extrusion, _outStream);
            }
            else if ((*iter)->has_callout())
            {
                (*iter)->toXml(callout, _outStream);
            }
            else if ((*iter)->has_lock())
            {
                (*iter)->toXml(lock, _outStream);
            }
            else if ((*iter)->has_clippath())
            {
                (*iter)->toXml(clippath, _outStream);
            }
            else if ((*iter)->has_signatureline())
            {
                (*iter)->toXml(signatureline, _outStream);
            }
            else if ((*iter)->has_wrap())
            {
                (*iter)->toXml(wrap, _outStream);
            }
            else if ((*iter)->has_anchorlock())
            {
                (*iter)->toXml(anchorlock, _outStream);
            }
            else if ((*iter)->has_bordertop())
            {
                (*iter)->toXml(bordertop, _outStream);
            }
            else if ((*iter)->has_borderbottom())
            {
                (*iter)->toXml(borderbottom, _outStream);
            }
            else if ((*iter)->has_borderleft())
            {
                (*iter)->toXml(borderleft, _outStream);
            }
            else if ((*iter)->has_borderright())
            {
                (*iter)->toXml(borderright, _outStream);
            }
            else if ((*iter)->has_ClientData())
            {
                (*iter)->toXml(ClientData, _outStream);
            }
            else if ((*iter)->has_textdata())
            {
                (*iter)->toXml(textdata, _outStream);
            }
            else if ((*iter)->has_ink())
            {
                (*iter)->toXml(ink, _outStream);
            }
            else if ((*iter)->has_iscomment())
            {
                (*iter)->toXml(iscomment, _outStream);
            }
            else if ((*iter)->has_equationxml())
            {
                (*iter)->toXml(equationxml, _outStream);
            }
        }
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Shape& default_instance(){

    if (!CT_Shape::default_instance_)
    {
        CT_Shape::default_instance_ = new CT_Shape();
    }
    return *CT_Shape::default_instance_;

        }
        bool has_type_attr(){

            return m_has_type_attr;
        
        }
        void set_type_attr(const string& _type_attr ){

        m_has_type_attr = true;
        m_type_attr = _type_attr;
        
        }
        const string& type_attr(){

            return type: \string\nname: \m_type_attr\n;
        
        }
        bool has_adj_attr(){

            return m_has_adj_attr;
        
        }
        void set_adj_attr(const string& _adj_attr ){

        m_has_adj_attr = true;
        m_adj_attr = _adj_attr;
        
        }
        const string& adj_attr(){

            return type: \string\nname: \m_adj_attr\n;
        
        }
        bool has_path_attr(){

            return m_has_path_attr;
        
        }
        void set_path_attr(const string& _path_attr ){

        m_has_path_attr = true;
        m_path_attr = _path_attr;
        
        }
        const string& path_attr(){

            return type: \string\nname: \m_path_attr\n;
        
        }
        bool has_gfxdata_attr(){

            return m_has_gfxdata_attr;
        
        }
        void set_gfxdata_attr(const base64Binary& _gfxdata_attr ){

        m_has_gfxdata_attr = true;
        m_gfxdata_attr = _gfxdata_attr;
        
        }
        const base64Binary& gfxdata_attr(){

            return type: ase64Binary\nname: \m_gfxdata_attr\n;
        
        }
        bool has_equationxml_attr(){

            return m_has_equationxml_attr;
        
        }
        void set_equationxml_attr(const string& _equationxml_attr ){

        m_has_equationxml_attr = true;
        m_equationxml_attr = _equationxml_attr;
        
        }
        const string& equationxml_attr(){

            return type: \string\nname: \m_equationxml_attr\n;
        
        }

    private:
        vector<ChildGroup_1*> m_childGroupList_1 ;
        static CT_Shape* default_instance_ ;
        bool m_has_type_attr ;
        string m_type_attr ;
        bool m_has_adj_attr ;
        string m_adj_attr ;
        bool m_has_path_attr ;
        string m_path_attr ;
        bool m_has_gfxdata_attr ;
        base64Binary m_gfxdata_attr ;
        bool m_has_equationxml_attr ;
        string m_equationxml_attr ;
        class ChildGroup_1{
        public:
            bool has_path(){

            return m_has_path;
        
            }
            CT_Path* mutable_path(){

                
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_path = true;
                if (!m_path)
                {
                    m_path = new CT_Path();
                }
                return m_path;
            
            }
            const CT_Path& path(){

            if (m_path)
            {
                return *m_path;
            }
            return CT_Path::default_instance();
        
            }
            bool has_formulas(){

            return m_has_formulas;
        
            }
            CT_Formulas* mutable_formulas(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_formulas = true;
                if (!m_formulas)
                {
                    m_formulas = new CT_Formulas();
                }
                return m_formulas;
            
            }
            const CT_Formulas& formulas(){

            if (m_formulas)
            {
                return *m_formulas;
            }
            return CT_Formulas::default_instance();
        
            }
            bool has_handles(){

            return m_has_handles;
        
            }
            CT_Handles* mutable_handles(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_handles = true;
                if (!m_handles)
                {
                    m_handles = new CT_Handles();
                }
                return m_handles;
            
            }
            const CT_Handles& handles(){

            if (m_handles)
            {
                return *m_handles;
            }
            return CT_Handles::default_instance();
        
            }
            bool has_fill(){

            return m_has_fill;
        
            }
            CT_Fill* mutable_fill(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_fill = true;
                if (!m_fill)
                {
                    m_fill = new CT_Fill();
                }
                return m_fill;
            
            }
            const CT_Fill& fill(){

            if (m_fill)
            {
                return *m_fill;
            }
            return CT_Fill::default_instance();
        
            }
            bool has_stroke(){

            return m_has_stroke;
        
            }
            CT_Stroke* mutable_stroke(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_stroke = true;
                if (!m_stroke)
                {
                    m_stroke = new CT_Stroke();
                }
                return m_stroke;
            
            }
            const CT_Stroke& stroke(){

            if (m_stroke)
            {
                return *m_stroke;
            }
            return CT_Stroke::default_instance();
        
            }
            bool has_shadow(){

            return m_has_shadow;
        
            }
            CT_Shadow* mutable_shadow(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_shadow = true;
                if (!m_shadow)
                {
                    m_shadow = new CT_Shadow();
                }
                return m_shadow;
            
            }
            const CT_Shadow& shadow(){

            if (m_shadow)
            {
                return *m_shadow;
            }
            return CT_Shadow::default_instance();
        
            }
            bool has_textbox(){

            return m_has_textbox;
        
            }
            CT_Textbox* mutable_textbox(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_textbox = true;
                if (!m_textbox)
                {
                    m_textbox = new CT_Textbox();
                }
                return m_textbox;
            
            }
            const CT_Textbox& textbox(){

            if (m_textbox)
            {
                return *m_textbox;
            }
            return CT_Textbox::default_instance();
        
            }
            bool has_textpath(){

            return m_has_textpath;
        
            }
            CT_TextPath* mutable_textpath(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_textpath = true;
                if (!m_textpath)
                {
                    m_textpath = new CT_TextPath();
                }
                return m_textpath;
            
            }
            const CT_TextPath& textpath(){

            if (m_textpath)
            {
                return *m_textpath;
            }
            return CT_TextPath::default_instance();
        
            }
            bool has_imagedata(){

            return m_has_imagedata;
        
            }
            CT_ImageData* mutable_imagedata(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_imagedata = true;
                if (!m_imagedata)
                {
                    m_imagedata = new CT_ImageData();
                }
                return m_imagedata;
            
            }
            const CT_ImageData& imagedata(){

            if (m_imagedata)
            {
                return *m_imagedata;
            }
            return CT_ImageData::default_instance();
        
            }
            bool has_skew(){

            return m_has_skew;
        
            }
            CT_Skew* mutable_skew(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_skew = true;
                if (!m_skew)
                {
                    m_skew = new CT_Skew();
                }
                return m_skew;
            
            }
            const CT_Skew& skew(){

            if (m_skew)
            {
                return *m_skew;
            }
            return CT_Skew::default_instance();
        
            }
            bool has_extrusion(){

            return m_has_extrusion;
        
            }
            CT_Extrusion* mutable_extrusion(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_extrusion = true;
                if (!m_extrusion)
                {
                    m_extrusion = new CT_Extrusion();
                }
                return m_extrusion;
            
            }
            const CT_Extrusion& extrusion(){

            if (m_extrusion)
            {
                return *m_extrusion;
            }
            return CT_Extrusion::default_instance();
        
            }
            bool has_callout(){

            return m_has_callout;
        
            }
            CT_Callout* mutable_callout(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_callout = true;
                if (!m_callout)
                {
                    m_callout = new CT_Callout();
                }
                return m_callout;
            
            }
            const CT_Callout& callout(){

            if (m_callout)
            {
                return *m_callout;
            }
            return CT_Callout::default_instance();
        
            }
            bool has_lock(){

            return m_has_lock;
        
            }
            CT_Lock* mutable_lock(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_lock = true;
                if (!m_lock)
                {
                    m_lock = new CT_Lock();
                }
                return m_lock;
            
            }
            const CT_Lock& lock(){

            if (m_lock)
            {
                return *m_lock;
            }
            return CT_Lock::default_instance();
        
            }
            bool has_clippath(){

            return m_has_clippath;
        
            }
            CT_ClipPath* mutable_clippath(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_clippath = true;
                if (!m_clippath)
                {
                    m_clippath = new CT_ClipPath();
                }
                return m_clippath;
            
            }
            const CT_ClipPath& clippath(){

            if (m_clippath)
            {
                return *m_clippath;
            }
            return CT_ClipPath::default_instance();
        
            }
            bool has_signatureline(){

            return m_has_signatureline;
        
            }
            CT_SignatureLine* mutable_signatureline(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_signatureline = true;
                if (!m_signatureline)
                {
                    m_signatureline = new CT_SignatureLine();
                }
                return m_signatureline;
            
            }
            const CT_SignatureLine& signatureline(){

            if (m_signatureline)
            {
                return *m_signatureline;
            }
            return CT_SignatureLine::default_instance();
        
            }
            bool has_wrap(){

            return m_has_wrap;
        
            }
            CT_Wrap* mutable_wrap(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_wrap = true;
                if (!m_wrap)
                {
                    m_wrap = new CT_Wrap();
                }
                return m_wrap;
            
            }
            const CT_Wrap& wrap(){

            if (m_wrap)
            {
                return *m_wrap;
            }
            return CT_Wrap::default_instance();
        
            }
            bool has_anchorlock(){

            return m_has_anchorlock;
        
            }
            CT_AnchorLock* mutable_anchorlock(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_anchorlock = true;
                if (!m_anchorlock)
                {
                    m_anchorlock = new CT_AnchorLock();
                }
                return m_anchorlock;
            
            }
            const CT_AnchorLock& anchorlock(){

            if (m_anchorlock)
            {
                return *m_anchorlock;
            }
            return CT_AnchorLock::default_instance();
        
            }
            bool has_bordertop(){

            return m_has_bordertop;
        
            }
            CT_Border* mutable_bordertop(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_bordertop = true;
                if (!m_bordertop)
                {
                    m_bordertop = new CT_Border();
                }
                return m_bordertop;
            
            }
            const CT_Border& bordertop(){

            if (m_bordertop)
            {
                return *m_bordertop;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderbottom(){

            return m_has_borderbottom;
        
            }
            CT_Border* mutable_borderbottom(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_borderbottom = true;
                if (!m_borderbottom)
                {
                    m_borderbottom = new CT_Border();
                }
                return m_borderbottom;
            
            }
            const CT_Border& borderbottom(){

            if (m_borderbottom)
            {
                return *m_borderbottom;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderleft(){

            return m_has_borderleft;
        
            }
            CT_Border* mutable_borderleft(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_borderleft = true;
                if (!m_borderleft)
                {
                    m_borderleft = new CT_Border();
                }
                return m_borderleft;
            
            }
            const CT_Border& borderleft(){

            if (m_borderleft)
            {
                return *m_borderleft;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderright(){

            return m_has_borderright;
        
            }
            CT_Border* mutable_borderright(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_borderright = true;
                if (!m_borderright)
                {
                    m_borderright = new CT_Border();
                }
                return m_borderright;
            
            }
            const CT_Border& borderright(){

            if (m_borderright)
            {
                return *m_borderright;
            }
            return CT_Border::default_instance();
        
            }
            bool has_ClientData(){

            return m_has_ClientData;
        
            }
            CT_ClientData* mutable_ClientData(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_ClientData = true;
                if (!m_ClientData)
                {
                    m_ClientData = new CT_ClientData();
                }
                return m_ClientData;
            
            }
            const CT_ClientData& ClientData(){

            if (m_ClientData)
            {
                return *m_ClientData;
            }
            return CT_ClientData::default_instance();
        
            }
            bool has_textdata(){

            return m_has_textdata;
        
            }
            CT_Rel* mutable_textdata(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_textdata = true;
                if (!m_textdata)
                {
                    m_textdata = new CT_Rel();
                }
                return m_textdata;
            
            }
            const CT_Rel& textdata(){

            if (m_textdata)
            {
                return *m_textdata;
            }
            return CT_Rel::default_instance();
        
            }
            bool has_ink(){

            return m_has_ink;
        
            }
            CT_Ink* mutable_ink(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_ink = true;
                if (!m_ink)
                {
                    m_ink = new CT_Ink();
                }
                return m_ink;
            
            }
            const CT_Ink& ink(){

            if (m_ink)
            {
                return *m_ink;
            }
            return CT_Ink::default_instance();
        
            }
            bool has_iscomment(){

            return m_has_iscomment;
        
            }
            CT_Empty* mutable_iscomment(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_equationxml = false;
                
        if (m_equationxml)
        {
            delete m_equationxml;
            m_equationxml = NULL;
        }
    ;
            
                m_has_iscomment = true;
                if (!m_iscomment)
                {
                    m_iscomment = new CT_Empty();
                }
                return m_iscomment;
            
            }
            const CT_Empty& iscomment(){

            if (m_iscomment)
            {
                return *m_iscomment;
            }
            return CT_Empty::default_instance();
        
            }
            bool has_equationxml(){

            return m_has_equationxml;
        
            }
            CT_EquationXml* mutable_equationxml(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_iscomment = false;
                
        if (m_iscomment)
        {
            delete m_iscomment;
            m_iscomment = NULL;
        }
    ;
            
                m_has_equationxml = true;
                if (!m_equationxml)
                {
                    m_equationxml = new CT_EquationXml();
                }
                return m_equationxml;
            
            }
            const CT_EquationXml& equationxml(){

            if (m_equationxml)
            {
                return *m_equationxml;
            }
            return CT_EquationXml::default_instance();
        
            }

        private:
            bool m_has_path ;
            CT_Path* m_path ;
            bool m_has_formulas ;
            CT_Formulas* m_formulas ;
            bool m_has_handles ;
            CT_Handles* m_handles ;
            bool m_has_fill ;
            CT_Fill* m_fill ;
            bool m_has_stroke ;
            CT_Stroke* m_stroke ;
            bool m_has_shadow ;
            CT_Shadow* m_shadow ;
            bool m_has_textbox ;
            CT_Textbox* m_textbox ;
            bool m_has_textpath ;
            CT_TextPath* m_textpath ;
            bool m_has_imagedata ;
            CT_ImageData* m_imagedata ;
            bool m_has_skew ;
            CT_Skew* m_skew ;
            bool m_has_extrusion ;
            CT_Extrusion* m_extrusion ;
            bool m_has_callout ;
            CT_Callout* m_callout ;
            bool m_has_lock ;
            CT_Lock* m_lock ;
            bool m_has_clippath ;
            CT_ClipPath* m_clippath ;
            bool m_has_signatureline ;
            CT_SignatureLine* m_signatureline ;
            bool m_has_wrap ;
            CT_Wrap* m_wrap ;
            bool m_has_anchorlock ;
            CT_AnchorLock* m_anchorlock ;
            bool m_has_bordertop ;
            CT_Border* m_bordertop ;
            bool m_has_borderbottom ;
            CT_Border* m_borderbottom ;
            bool m_has_borderleft ;
            CT_Border* m_borderleft ;
            bool m_has_borderright ;
            CT_Border* m_borderright ;
            bool m_has_ClientData ;
            CT_ClientData* m_ClientData ;
            bool m_has_textdata ;
            CT_Rel* m_textdata ;
            bool m_has_ink ;
            CT_Ink* m_ink ;
            bool m_has_iscomment ;
            CT_Empty* m_iscomment ;
            bool m_has_equationxml ;
            CT_EquationXml* m_equationxml ;

        }


    }

    class CT_Shapetype : public XSD::ComplexType{
    public:
        CT_Path* add_path(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Path* pNewChild = pChildGroup->mutable_path();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Formulas* add_formulas(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Formulas* pNewChild = pChildGroup->mutable_formulas();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Handles* add_handles(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Handles* pNewChild = pChildGroup->mutable_handles();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Fill* add_fill(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Fill* pNewChild = pChildGroup->mutable_fill();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Stroke* add_stroke(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Stroke* pNewChild = pChildGroup->mutable_stroke();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Shadow* add_shadow(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Shadow* pNewChild = pChildGroup->mutable_shadow();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Textbox* add_textbox(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Textbox* pNewChild = pChildGroup->mutable_textbox();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_TextPath* add_textpath(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_TextPath* pNewChild = pChildGroup->mutable_textpath();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ImageData* add_imagedata(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ImageData* pNewChild = pChildGroup->mutable_imagedata();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Skew* add_skew(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Skew* pNewChild = pChildGroup->mutable_skew();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Extrusion* add_extrusion(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Extrusion* pNewChild = pChildGroup->mutable_extrusion();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Callout* add_callout(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Callout* pNewChild = pChildGroup->mutable_callout();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Lock* add_lock(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Lock* pNewChild = pChildGroup->mutable_lock();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ClipPath* add_clippath(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ClipPath* pNewChild = pChildGroup->mutable_clippath();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SignatureLine* add_signatureline(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SignatureLine* pNewChild = pChildGroup->mutable_signatureline();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Wrap* add_wrap(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Wrap* pNewChild = pChildGroup->mutable_wrap();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_AnchorLock* add_anchorlock(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_AnchorLock* pNewChild = pChildGroup->mutable_anchorlock();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_bordertop(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_bordertop();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderbottom(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderbottom();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderleft(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderleft();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderright(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderright();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ClientData* add_ClientData(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ClientData* pNewChild = pChildGroup->mutable_ClientData();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Rel* add_textdata(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Rel* pNewChild = pChildGroup->mutable_textdata();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        bool has_complex(){

            return m_has_complex;
        
        }
        CT_Complex* mutable_complex(){

                m_has_complex = true;
                if (!m_complex)
                {
                    m_complex = new CT_Complex();
                }
                return m_complex;
            
        }
        const CT_Complex& complex(){

            if (m_complex)
            {
                return *m_complex;
            }
            return CT_Complex::default_instance();
        
        }
        void clear(){

                m_has_adj_attr = false;
                m_adj_attr.clear();
            
                m_has_path_attr = false;
                m_path_attr.clear();
            
                m_has_master_attr = false;
                m_master_attr.clear();
            
            vector<ChildGroup_1*>::iterator iter;
            for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
            {
                delete *iter;
            }
            m_childGroupList_1.clear();
         
                m_has_complex = false;
                
        if (m_complex)
        {
            delete m_complex;
            m_complex = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    _outStream << _attrName << \=\\ << m_adj_attr << \\\;
_outStream << _attrName << \=\\ << m_path_attr << \\\;
_outStream << _attrName << \=\\ << m_master_attr << \\\;
        _outStream << \>\;
    
        vector<ChildGroup_1*>::const_iterator iter;
        for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
        {
            if ((*iter)->has_path())
            {
                (*iter)->toXml(path, _outStream);
            }
            else if ((*iter)->has_formulas())
            {
                (*iter)->toXml(formulas, _outStream);
            }
            else if ((*iter)->has_handles())
            {
                (*iter)->toXml(handles, _outStream);
            }
            else if ((*iter)->has_fill())
            {
                (*iter)->toXml(fill, _outStream);
            }
            else if ((*iter)->has_stroke())
            {
                (*iter)->toXml(stroke, _outStream);
            }
            else if ((*iter)->has_shadow())
            {
                (*iter)->toXml(shadow, _outStream);
            }
            else if ((*iter)->has_textbox())
            {
                (*iter)->toXml(textbox, _outStream);
            }
            else if ((*iter)->has_textpath())
            {
                (*iter)->toXml(textpath, _outStream);
            }
            else if ((*iter)->has_imagedata())
            {
                (*iter)->toXml(imagedata, _outStream);
            }
            else if ((*iter)->has_skew())
            {
                (*iter)->toXml(skew, _outStream);
            }
            else if ((*iter)->has_extrusion())
            {
                (*iter)->toXml(extrusion, _outStream);
            }
            else if ((*iter)->has_callout())
            {
                (*iter)->toXml(callout, _outStream);
            }
            else if ((*iter)->has_lock())
            {
                (*iter)->toXml(lock, _outStream);
            }
            else if ((*iter)->has_clippath())
            {
                (*iter)->toXml(clippath, _outStream);
            }
            else if ((*iter)->has_signatureline())
            {
                (*iter)->toXml(signatureline, _outStream);
            }
            else if ((*iter)->has_wrap())
            {
                (*iter)->toXml(wrap, _outStream);
            }
            else if ((*iter)->has_anchorlock())
            {
                (*iter)->toXml(anchorlock, _outStream);
            }
            else if ((*iter)->has_bordertop())
            {
                (*iter)->toXml(bordertop, _outStream);
            }
            else if ((*iter)->has_borderbottom())
            {
                (*iter)->toXml(borderbottom, _outStream);
            }
            else if ((*iter)->has_borderleft())
            {
                (*iter)->toXml(borderleft, _outStream);
            }
            else if ((*iter)->has_borderright())
            {
                (*iter)->toXml(borderright, _outStream);
            }
            else if ((*iter)->has_ClientData())
            {
                (*iter)->toXml(ClientData, _outStream);
            }
            else if ((*iter)->has_textdata())
            {
                (*iter)->toXml(textdata, _outStream);
            }
        } 
                if (m_has_complex)
                {
                    m_complex->toXml(complex, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Shapetype& default_instance(){

    if (!CT_Shapetype::default_instance_)
    {
        CT_Shapetype::default_instance_ = new CT_Shapetype();
    }
    return *CT_Shapetype::default_instance_;

        }
        bool has_adj_attr(){

            return m_has_adj_attr;
        
        }
        void set_adj_attr(const string& _adj_attr ){

        m_has_adj_attr = true;
        m_adj_attr = _adj_attr;
        
        }
        const string& adj_attr(){

            return type: \string\nname: \m_adj_attr\n;
        
        }
        bool has_path_attr(){

            return m_has_path_attr;
        
        }
        void set_path_attr(const string& _path_attr ){

        m_has_path_attr = true;
        m_path_attr = _path_attr;
        
        }
        const string& path_attr(){

            return type: \string\nname: \m_path_attr\n;
        
        }
        bool has_master_attr(){

            return m_has_master_attr;
        
        }
        void set_master_attr(const string& _master_attr ){

        m_has_master_attr = true;
        m_master_attr = _master_attr;
        
        }
        const string& master_attr(){

            return type: \string\nname: \m_master_attr\n;
        
        }

    private:
        vector<ChildGroup_1*> m_childGroupList_1 ;
        bool m_has_complex ;
        CT_Complex* m_complex ;
        static CT_Shapetype* default_instance_ ;
        bool m_has_adj_attr ;
        string m_adj_attr ;
        bool m_has_path_attr ;
        string m_path_attr ;
        bool m_has_master_attr ;
        string m_master_attr ;
        class ChildGroup_1{
        public:
            bool has_path(){

            return m_has_path;
        
            }
            CT_Path* mutable_path(){

                
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_path = true;
                if (!m_path)
                {
                    m_path = new CT_Path();
                }
                return m_path;
            
            }
            const CT_Path& path(){

            if (m_path)
            {
                return *m_path;
            }
            return CT_Path::default_instance();
        
            }
            bool has_formulas(){

            return m_has_formulas;
        
            }
            CT_Formulas* mutable_formulas(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_formulas = true;
                if (!m_formulas)
                {
                    m_formulas = new CT_Formulas();
                }
                return m_formulas;
            
            }
            const CT_Formulas& formulas(){

            if (m_formulas)
            {
                return *m_formulas;
            }
            return CT_Formulas::default_instance();
        
            }
            bool has_handles(){

            return m_has_handles;
        
            }
            CT_Handles* mutable_handles(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_handles = true;
                if (!m_handles)
                {
                    m_handles = new CT_Handles();
                }
                return m_handles;
            
            }
            const CT_Handles& handles(){

            if (m_handles)
            {
                return *m_handles;
            }
            return CT_Handles::default_instance();
        
            }
            bool has_fill(){

            return m_has_fill;
        
            }
            CT_Fill* mutable_fill(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_fill = true;
                if (!m_fill)
                {
                    m_fill = new CT_Fill();
                }
                return m_fill;
            
            }
            const CT_Fill& fill(){

            if (m_fill)
            {
                return *m_fill;
            }
            return CT_Fill::default_instance();
        
            }
            bool has_stroke(){

            return m_has_stroke;
        
            }
            CT_Stroke* mutable_stroke(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_stroke = true;
                if (!m_stroke)
                {
                    m_stroke = new CT_Stroke();
                }
                return m_stroke;
            
            }
            const CT_Stroke& stroke(){

            if (m_stroke)
            {
                return *m_stroke;
            }
            return CT_Stroke::default_instance();
        
            }
            bool has_shadow(){

            return m_has_shadow;
        
            }
            CT_Shadow* mutable_shadow(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_shadow = true;
                if (!m_shadow)
                {
                    m_shadow = new CT_Shadow();
                }
                return m_shadow;
            
            }
            const CT_Shadow& shadow(){

            if (m_shadow)
            {
                return *m_shadow;
            }
            return CT_Shadow::default_instance();
        
            }
            bool has_textbox(){

            return m_has_textbox;
        
            }
            CT_Textbox* mutable_textbox(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_textbox = true;
                if (!m_textbox)
                {
                    m_textbox = new CT_Textbox();
                }
                return m_textbox;
            
            }
            const CT_Textbox& textbox(){

            if (m_textbox)
            {
                return *m_textbox;
            }
            return CT_Textbox::default_instance();
        
            }
            bool has_textpath(){

            return m_has_textpath;
        
            }
            CT_TextPath* mutable_textpath(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_textpath = true;
                if (!m_textpath)
                {
                    m_textpath = new CT_TextPath();
                }
                return m_textpath;
            
            }
            const CT_TextPath& textpath(){

            if (m_textpath)
            {
                return *m_textpath;
            }
            return CT_TextPath::default_instance();
        
            }
            bool has_imagedata(){

            return m_has_imagedata;
        
            }
            CT_ImageData* mutable_imagedata(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_imagedata = true;
                if (!m_imagedata)
                {
                    m_imagedata = new CT_ImageData();
                }
                return m_imagedata;
            
            }
            const CT_ImageData& imagedata(){

            if (m_imagedata)
            {
                return *m_imagedata;
            }
            return CT_ImageData::default_instance();
        
            }
            bool has_skew(){

            return m_has_skew;
        
            }
            CT_Skew* mutable_skew(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_skew = true;
                if (!m_skew)
                {
                    m_skew = new CT_Skew();
                }
                return m_skew;
            
            }
            const CT_Skew& skew(){

            if (m_skew)
            {
                return *m_skew;
            }
            return CT_Skew::default_instance();
        
            }
            bool has_extrusion(){

            return m_has_extrusion;
        
            }
            CT_Extrusion* mutable_extrusion(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_extrusion = true;
                if (!m_extrusion)
                {
                    m_extrusion = new CT_Extrusion();
                }
                return m_extrusion;
            
            }
            const CT_Extrusion& extrusion(){

            if (m_extrusion)
            {
                return *m_extrusion;
            }
            return CT_Extrusion::default_instance();
        
            }
            bool has_callout(){

            return m_has_callout;
        
            }
            CT_Callout* mutable_callout(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_callout = true;
                if (!m_callout)
                {
                    m_callout = new CT_Callout();
                }
                return m_callout;
            
            }
            const CT_Callout& callout(){

            if (m_callout)
            {
                return *m_callout;
            }
            return CT_Callout::default_instance();
        
            }
            bool has_lock(){

            return m_has_lock;
        
            }
            CT_Lock* mutable_lock(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_lock = true;
                if (!m_lock)
                {
                    m_lock = new CT_Lock();
                }
                return m_lock;
            
            }
            const CT_Lock& lock(){

            if (m_lock)
            {
                return *m_lock;
            }
            return CT_Lock::default_instance();
        
            }
            bool has_clippath(){

            return m_has_clippath;
        
            }
            CT_ClipPath* mutable_clippath(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_clippath = true;
                if (!m_clippath)
                {
                    m_clippath = new CT_ClipPath();
                }
                return m_clippath;
            
            }
            const CT_ClipPath& clippath(){

            if (m_clippath)
            {
                return *m_clippath;
            }
            return CT_ClipPath::default_instance();
        
            }
            bool has_signatureline(){

            return m_has_signatureline;
        
            }
            CT_SignatureLine* mutable_signatureline(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_signatureline = true;
                if (!m_signatureline)
                {
                    m_signatureline = new CT_SignatureLine();
                }
                return m_signatureline;
            
            }
            const CT_SignatureLine& signatureline(){

            if (m_signatureline)
            {
                return *m_signatureline;
            }
            return CT_SignatureLine::default_instance();
        
            }
            bool has_wrap(){

            return m_has_wrap;
        
            }
            CT_Wrap* mutable_wrap(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_wrap = true;
                if (!m_wrap)
                {
                    m_wrap = new CT_Wrap();
                }
                return m_wrap;
            
            }
            const CT_Wrap& wrap(){

            if (m_wrap)
            {
                return *m_wrap;
            }
            return CT_Wrap::default_instance();
        
            }
            bool has_anchorlock(){

            return m_has_anchorlock;
        
            }
            CT_AnchorLock* mutable_anchorlock(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_anchorlock = true;
                if (!m_anchorlock)
                {
                    m_anchorlock = new CT_AnchorLock();
                }
                return m_anchorlock;
            
            }
            const CT_AnchorLock& anchorlock(){

            if (m_anchorlock)
            {
                return *m_anchorlock;
            }
            return CT_AnchorLock::default_instance();
        
            }
            bool has_bordertop(){

            return m_has_bordertop;
        
            }
            CT_Border* mutable_bordertop(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_bordertop = true;
                if (!m_bordertop)
                {
                    m_bordertop = new CT_Border();
                }
                return m_bordertop;
            
            }
            const CT_Border& bordertop(){

            if (m_bordertop)
            {
                return *m_bordertop;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderbottom(){

            return m_has_borderbottom;
        
            }
            CT_Border* mutable_borderbottom(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_borderbottom = true;
                if (!m_borderbottom)
                {
                    m_borderbottom = new CT_Border();
                }
                return m_borderbottom;
            
            }
            const CT_Border& borderbottom(){

            if (m_borderbottom)
            {
                return *m_borderbottom;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderleft(){

            return m_has_borderleft;
        
            }
            CT_Border* mutable_borderleft(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_borderleft = true;
                if (!m_borderleft)
                {
                    m_borderleft = new CT_Border();
                }
                return m_borderleft;
            
            }
            const CT_Border& borderleft(){

            if (m_borderleft)
            {
                return *m_borderleft;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderright(){

            return m_has_borderright;
        
            }
            CT_Border* mutable_borderright(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_borderright = true;
                if (!m_borderright)
                {
                    m_borderright = new CT_Border();
                }
                return m_borderright;
            
            }
            const CT_Border& borderright(){

            if (m_borderright)
            {
                return *m_borderright;
            }
            return CT_Border::default_instance();
        
            }
            bool has_ClientData(){

            return m_has_ClientData;
        
            }
            CT_ClientData* mutable_ClientData(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ClientData = true;
                if (!m_ClientData)
                {
                    m_ClientData = new CT_ClientData();
                }
                return m_ClientData;
            
            }
            const CT_ClientData& ClientData(){

            if (m_ClientData)
            {
                return *m_ClientData;
            }
            return CT_ClientData::default_instance();
        
            }
            bool has_textdata(){

            return m_has_textdata;
        
            }
            CT_Rel* mutable_textdata(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = true;
                if (!m_textdata)
                {
                    m_textdata = new CT_Rel();
                }
                return m_textdata;
            
            }
            const CT_Rel& textdata(){

            if (m_textdata)
            {
                return *m_textdata;
            }
            return CT_Rel::default_instance();
        
            }

        private:
            bool m_has_path ;
            CT_Path* m_path ;
            bool m_has_formulas ;
            CT_Formulas* m_formulas ;
            bool m_has_handles ;
            CT_Handles* m_handles ;
            bool m_has_fill ;
            CT_Fill* m_fill ;
            bool m_has_stroke ;
            CT_Stroke* m_stroke ;
            bool m_has_shadow ;
            CT_Shadow* m_shadow ;
            bool m_has_textbox ;
            CT_Textbox* m_textbox ;
            bool m_has_textpath ;
            CT_TextPath* m_textpath ;
            bool m_has_imagedata ;
            CT_ImageData* m_imagedata ;
            bool m_has_skew ;
            CT_Skew* m_skew ;
            bool m_has_extrusion ;
            CT_Extrusion* m_extrusion ;
            bool m_has_callout ;
            CT_Callout* m_callout ;
            bool m_has_lock ;
            CT_Lock* m_lock ;
            bool m_has_clippath ;
            CT_ClipPath* m_clippath ;
            bool m_has_signatureline ;
            CT_SignatureLine* m_signatureline ;
            bool m_has_wrap ;
            CT_Wrap* m_wrap ;
            bool m_has_anchorlock ;
            CT_AnchorLock* m_anchorlock ;
            bool m_has_bordertop ;
            CT_Border* m_bordertop ;
            bool m_has_borderbottom ;
            CT_Border* m_borderbottom ;
            bool m_has_borderleft ;
            CT_Border* m_borderleft ;
            bool m_has_borderright ;
            CT_Border* m_borderright ;
            bool m_has_ClientData ;
            CT_ClientData* m_ClientData ;
            bool m_has_textdata ;
            CT_Rel* m_textdata ;

        }


    }

    class CT_Group : public XSD::ComplexType{
    public:
        CT_Path* add_path(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Path* pNewChild = pChildGroup->mutable_path();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Formulas* add_formulas(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Formulas* pNewChild = pChildGroup->mutable_formulas();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Handles* add_handles(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Handles* pNewChild = pChildGroup->mutable_handles();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Fill* add_fill(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Fill* pNewChild = pChildGroup->mutable_fill();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Stroke* add_stroke(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Stroke* pNewChild = pChildGroup->mutable_stroke();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Shadow* add_shadow(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Shadow* pNewChild = pChildGroup->mutable_shadow();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Textbox* add_textbox(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Textbox* pNewChild = pChildGroup->mutable_textbox();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_TextPath* add_textpath(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_TextPath* pNewChild = pChildGroup->mutable_textpath();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ImageData* add_imagedata(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ImageData* pNewChild = pChildGroup->mutable_imagedata();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Skew* add_skew(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Skew* pNewChild = pChildGroup->mutable_skew();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Extrusion* add_extrusion(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Extrusion* pNewChild = pChildGroup->mutable_extrusion();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Callout* add_callout(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Callout* pNewChild = pChildGroup->mutable_callout();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Lock* add_lock(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Lock* pNewChild = pChildGroup->mutable_lock();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ClipPath* add_clippath(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ClipPath* pNewChild = pChildGroup->mutable_clippath();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SignatureLine* add_signatureline(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SignatureLine* pNewChild = pChildGroup->mutable_signatureline();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Wrap* add_wrap(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Wrap* pNewChild = pChildGroup->mutable_wrap();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_AnchorLock* add_anchorlock(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_AnchorLock* pNewChild = pChildGroup->mutable_anchorlock();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_bordertop(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_bordertop();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderbottom(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderbottom();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderleft(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderleft();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderright(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderright();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ClientData* add_ClientData(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ClientData* pNewChild = pChildGroup->mutable_ClientData();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Rel* add_textdata(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Rel* pNewChild = pChildGroup->mutable_textdata();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Group* add_group(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Group* pNewChild = pChildGroup->mutable_group();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Shape* add_shape(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Shape* pNewChild = pChildGroup->mutable_shape();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Shapetype* add_shapetype(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Shapetype* pNewChild = pChildGroup->mutable_shapetype();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Arc* add_arc(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Arc* pNewChild = pChildGroup->mutable_arc();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Curve* add_curve(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Curve* pNewChild = pChildGroup->mutable_curve();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Image* add_image(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Image* pNewChild = pChildGroup->mutable_image();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Line* add_line(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Line* pNewChild = pChildGroup->mutable_line();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Oval* add_oval(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Oval* pNewChild = pChildGroup->mutable_oval();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_PolyLine* add_polyline(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_PolyLine* pNewChild = pChildGroup->mutable_polyline();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Rect* add_rect(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Rect* pNewChild = pChildGroup->mutable_rect();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_RoundRect* add_roundrect(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_RoundRect* pNewChild = pChildGroup->mutable_roundrect();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Diagram* add_diagram(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Diagram* pNewChild = pChildGroup->mutable_diagram();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        void clear(){

                m_has_filled_attr = false;
                
        if (m_filled_attr)
        {
            delete m_filled_attr;
            m_filled_attr = NULL;
        }
    
            
                m_has_fillcolor_attr = false;
                
        if (m_fillcolor_attr)
        {
            delete m_fillcolor_attr;
            m_fillcolor_attr = NULL;
        }
    
            
                m_has_editas_attr = false;
                
        if (m_editas_attr)
        {
            delete m_editas_attr;
            m_editas_attr = NULL;
        }
    
            
                m_has_tableproperties_attr = false;
                m_tableproperties_attr.clear();
            
                m_has_tablelimits_attr = false;
                m_tablelimits_attr.clear();
            
            vector<ChildGroup_1*>::iterator iter;
            for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
            {
                delete *iter;
            }
            m_childGroupList_1.clear();
        
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    m_filled_attr->toXml(_attrName, _outStream);
m_fillcolor_attr->toXml(_attrName, _outStream);
m_editas_attr->toXml(_attrName, _outStream);
_outStream << _attrName << \=\\ << m_tableproperties_attr << \\\;
_outStream << _attrName << \=\\ << m_tablelimits_attr << \\\;
        _outStream << \>\;
    
        vector<ChildGroup_1*>::const_iterator iter;
        for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
        {
            if ((*iter)->has_path())
            {
                (*iter)->toXml(path, _outStream);
            }
            else if ((*iter)->has_formulas())
            {
                (*iter)->toXml(formulas, _outStream);
            }
            else if ((*iter)->has_handles())
            {
                (*iter)->toXml(handles, _outStream);
            }
            else if ((*iter)->has_fill())
            {
                (*iter)->toXml(fill, _outStream);
            }
            else if ((*iter)->has_stroke())
            {
                (*iter)->toXml(stroke, _outStream);
            }
            else if ((*iter)->has_shadow())
            {
                (*iter)->toXml(shadow, _outStream);
            }
            else if ((*iter)->has_textbox())
            {
                (*iter)->toXml(textbox, _outStream);
            }
            else if ((*iter)->has_textpath())
            {
                (*iter)->toXml(textpath, _outStream);
            }
            else if ((*iter)->has_imagedata())
            {
                (*iter)->toXml(imagedata, _outStream);
            }
            else if ((*iter)->has_skew())
            {
                (*iter)->toXml(skew, _outStream);
            }
            else if ((*iter)->has_extrusion())
            {
                (*iter)->toXml(extrusion, _outStream);
            }
            else if ((*iter)->has_callout())
            {
                (*iter)->toXml(callout, _outStream);
            }
            else if ((*iter)->has_lock())
            {
                (*iter)->toXml(lock, _outStream);
            }
            else if ((*iter)->has_clippath())
            {
                (*iter)->toXml(clippath, _outStream);
            }
            else if ((*iter)->has_signatureline())
            {
                (*iter)->toXml(signatureline, _outStream);
            }
            else if ((*iter)->has_wrap())
            {
                (*iter)->toXml(wrap, _outStream);
            }
            else if ((*iter)->has_anchorlock())
            {
                (*iter)->toXml(anchorlock, _outStream);
            }
            else if ((*iter)->has_bordertop())
            {
                (*iter)->toXml(bordertop, _outStream);
            }
            else if ((*iter)->has_borderbottom())
            {
                (*iter)->toXml(borderbottom, _outStream);
            }
            else if ((*iter)->has_borderleft())
            {
                (*iter)->toXml(borderleft, _outStream);
            }
            else if ((*iter)->has_borderright())
            {
                (*iter)->toXml(borderright, _outStream);
            }
            else if ((*iter)->has_ClientData())
            {
                (*iter)->toXml(ClientData, _outStream);
            }
            else if ((*iter)->has_textdata())
            {
                (*iter)->toXml(textdata, _outStream);
            }
            else if ((*iter)->has_group())
            {
                (*iter)->toXml(group, _outStream);
            }
            else if ((*iter)->has_shape())
            {
                (*iter)->toXml(shape, _outStream);
            }
            else if ((*iter)->has_shapetype())
            {
                (*iter)->toXml(shapetype, _outStream);
            }
            else if ((*iter)->has_arc())
            {
                (*iter)->toXml(arc, _outStream);
            }
            else if ((*iter)->has_curve())
            {
                (*iter)->toXml(curve, _outStream);
            }
            else if ((*iter)->has_image())
            {
                (*iter)->toXml(image, _outStream);
            }
            else if ((*iter)->has_line())
            {
                (*iter)->toXml(line, _outStream);
            }
            else if ((*iter)->has_oval())
            {
                (*iter)->toXml(oval, _outStream);
            }
            else if ((*iter)->has_polyline())
            {
                (*iter)->toXml(polyline, _outStream);
            }
            else if ((*iter)->has_rect())
            {
                (*iter)->toXml(rect, _outStream);
            }
            else if ((*iter)->has_roundrect())
            {
                (*iter)->toXml(roundrect, _outStream);
            }
            else if ((*iter)->has_diagram())
            {
                (*iter)->toXml(diagram, _outStream);
            }
        }
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Group& default_instance(){

    if (!CT_Group::default_instance_)
    {
        CT_Group::default_instance_ = new CT_Group();
    }
    return *CT_Group::default_instance_;

        }
        bool has_filled_attr(){

            return m_has_filled_attr;
        
        }
        void set_filled_attr(const ns_s::ST_TrueFalse& _filled_attr ){

            m_has_filled_attr = true;
            m_filled_attr = new ns_s::ST_TrueFalse(_filled_attr);
        
        }
        const ns_s::ST_TrueFalse& filled_attr(){

            if (m_filled_attr)
            {
                return *m_filled_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_fillcolor_attr(){

            return m_has_fillcolor_attr;
        
        }
        void set_fillcolor_attr(const ns_s::ST_ColorType& _fillcolor_attr ){

            m_has_fillcolor_attr = true;
            m_fillcolor_attr = new ns_s::ST_ColorType(_fillcolor_attr);
        
        }
        const ns_s::ST_ColorType& fillcolor_attr(){

            if (m_fillcolor_attr)
            {
                return *m_fillcolor_attr;
            }
            return ns_s::ST_ColorType::default_instance();
        
        }
        bool has_editas_attr(){

            return m_has_editas_attr;
        
        }
        void set_editas_attr(const ST_EditAs& _editas_attr ){

            m_has_editas_attr = true;
            m_editas_attr = new ST_EditAs(_editas_attr);
        
        }
        const ST_EditAs& editas_attr(){

            if (m_editas_attr)
            {
                return *m_editas_attr;
            }
            return ST_EditAs::default_instance();
        
        }
        bool has_tableproperties_attr(){

            return m_has_tableproperties_attr;
        
        }
        void set_tableproperties_attr(const string& _tableproperties_attr ){

        m_has_tableproperties_attr = true;
        m_tableproperties_attr = _tableproperties_attr;
        
        }
        const string& tableproperties_attr(){

            return type: \string\nname: \m_tableproperties_attr\n;
        
        }
        bool has_tablelimits_attr(){

            return m_has_tablelimits_attr;
        
        }
        void set_tablelimits_attr(const string& _tablelimits_attr ){

        m_has_tablelimits_attr = true;
        m_tablelimits_attr = _tablelimits_attr;
        
        }
        const string& tablelimits_attr(){

            return type: \string\nname: \m_tablelimits_attr\n;
        
        }

    private:
        vector<ChildGroup_1*> m_childGroupList_1 ;
        static CT_Group* default_instance_ ;
        bool m_has_filled_attr ;
        ns_s::ST_TrueFalse* m_filled_attr ;
        bool m_has_fillcolor_attr ;
        ns_s::ST_ColorType* m_fillcolor_attr ;
        bool m_has_editas_attr ;
        ST_EditAs* m_editas_attr ;
        bool m_has_tableproperties_attr ;
        string m_tableproperties_attr ;
        bool m_has_tablelimits_attr ;
        string m_tablelimits_attr ;
        class ChildGroup_1{
        public:
            bool has_path(){

            return m_has_path;
        
            }
            CT_Path* mutable_path(){

                
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_path = true;
                if (!m_path)
                {
                    m_path = new CT_Path();
                }
                return m_path;
            
            }
            const CT_Path& path(){

            if (m_path)
            {
                return *m_path;
            }
            return CT_Path::default_instance();
        
            }
            bool has_formulas(){

            return m_has_formulas;
        
            }
            CT_Formulas* mutable_formulas(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_formulas = true;
                if (!m_formulas)
                {
                    m_formulas = new CT_Formulas();
                }
                return m_formulas;
            
            }
            const CT_Formulas& formulas(){

            if (m_formulas)
            {
                return *m_formulas;
            }
            return CT_Formulas::default_instance();
        
            }
            bool has_handles(){

            return m_has_handles;
        
            }
            CT_Handles* mutable_handles(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_handles = true;
                if (!m_handles)
                {
                    m_handles = new CT_Handles();
                }
                return m_handles;
            
            }
            const CT_Handles& handles(){

            if (m_handles)
            {
                return *m_handles;
            }
            return CT_Handles::default_instance();
        
            }
            bool has_fill(){

            return m_has_fill;
        
            }
            CT_Fill* mutable_fill(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_fill = true;
                if (!m_fill)
                {
                    m_fill = new CT_Fill();
                }
                return m_fill;
            
            }
            const CT_Fill& fill(){

            if (m_fill)
            {
                return *m_fill;
            }
            return CT_Fill::default_instance();
        
            }
            bool has_stroke(){

            return m_has_stroke;
        
            }
            CT_Stroke* mutable_stroke(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_stroke = true;
                if (!m_stroke)
                {
                    m_stroke = new CT_Stroke();
                }
                return m_stroke;
            
            }
            const CT_Stroke& stroke(){

            if (m_stroke)
            {
                return *m_stroke;
            }
            return CT_Stroke::default_instance();
        
            }
            bool has_shadow(){

            return m_has_shadow;
        
            }
            CT_Shadow* mutable_shadow(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_shadow = true;
                if (!m_shadow)
                {
                    m_shadow = new CT_Shadow();
                }
                return m_shadow;
            
            }
            const CT_Shadow& shadow(){

            if (m_shadow)
            {
                return *m_shadow;
            }
            return CT_Shadow::default_instance();
        
            }
            bool has_textbox(){

            return m_has_textbox;
        
            }
            CT_Textbox* mutable_textbox(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_textbox = true;
                if (!m_textbox)
                {
                    m_textbox = new CT_Textbox();
                }
                return m_textbox;
            
            }
            const CT_Textbox& textbox(){

            if (m_textbox)
            {
                return *m_textbox;
            }
            return CT_Textbox::default_instance();
        
            }
            bool has_textpath(){

            return m_has_textpath;
        
            }
            CT_TextPath* mutable_textpath(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_textpath = true;
                if (!m_textpath)
                {
                    m_textpath = new CT_TextPath();
                }
                return m_textpath;
            
            }
            const CT_TextPath& textpath(){

            if (m_textpath)
            {
                return *m_textpath;
            }
            return CT_TextPath::default_instance();
        
            }
            bool has_imagedata(){

            return m_has_imagedata;
        
            }
            CT_ImageData* mutable_imagedata(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_imagedata = true;
                if (!m_imagedata)
                {
                    m_imagedata = new CT_ImageData();
                }
                return m_imagedata;
            
            }
            const CT_ImageData& imagedata(){

            if (m_imagedata)
            {
                return *m_imagedata;
            }
            return CT_ImageData::default_instance();
        
            }
            bool has_skew(){

            return m_has_skew;
        
            }
            CT_Skew* mutable_skew(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_skew = true;
                if (!m_skew)
                {
                    m_skew = new CT_Skew();
                }
                return m_skew;
            
            }
            const CT_Skew& skew(){

            if (m_skew)
            {
                return *m_skew;
            }
            return CT_Skew::default_instance();
        
            }
            bool has_extrusion(){

            return m_has_extrusion;
        
            }
            CT_Extrusion* mutable_extrusion(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_extrusion = true;
                if (!m_extrusion)
                {
                    m_extrusion = new CT_Extrusion();
                }
                return m_extrusion;
            
            }
            const CT_Extrusion& extrusion(){

            if (m_extrusion)
            {
                return *m_extrusion;
            }
            return CT_Extrusion::default_instance();
        
            }
            bool has_callout(){

            return m_has_callout;
        
            }
            CT_Callout* mutable_callout(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_callout = true;
                if (!m_callout)
                {
                    m_callout = new CT_Callout();
                }
                return m_callout;
            
            }
            const CT_Callout& callout(){

            if (m_callout)
            {
                return *m_callout;
            }
            return CT_Callout::default_instance();
        
            }
            bool has_lock(){

            return m_has_lock;
        
            }
            CT_Lock* mutable_lock(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_lock = true;
                if (!m_lock)
                {
                    m_lock = new CT_Lock();
                }
                return m_lock;
            
            }
            const CT_Lock& lock(){

            if (m_lock)
            {
                return *m_lock;
            }
            return CT_Lock::default_instance();
        
            }
            bool has_clippath(){

            return m_has_clippath;
        
            }
            CT_ClipPath* mutable_clippath(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_clippath = true;
                if (!m_clippath)
                {
                    m_clippath = new CT_ClipPath();
                }
                return m_clippath;
            
            }
            const CT_ClipPath& clippath(){

            if (m_clippath)
            {
                return *m_clippath;
            }
            return CT_ClipPath::default_instance();
        
            }
            bool has_signatureline(){

            return m_has_signatureline;
        
            }
            CT_SignatureLine* mutable_signatureline(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_signatureline = true;
                if (!m_signatureline)
                {
                    m_signatureline = new CT_SignatureLine();
                }
                return m_signatureline;
            
            }
            const CT_SignatureLine& signatureline(){

            if (m_signatureline)
            {
                return *m_signatureline;
            }
            return CT_SignatureLine::default_instance();
        
            }
            bool has_wrap(){

            return m_has_wrap;
        
            }
            CT_Wrap* mutable_wrap(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_wrap = true;
                if (!m_wrap)
                {
                    m_wrap = new CT_Wrap();
                }
                return m_wrap;
            
            }
            const CT_Wrap& wrap(){

            if (m_wrap)
            {
                return *m_wrap;
            }
            return CT_Wrap::default_instance();
        
            }
            bool has_anchorlock(){

            return m_has_anchorlock;
        
            }
            CT_AnchorLock* mutable_anchorlock(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_anchorlock = true;
                if (!m_anchorlock)
                {
                    m_anchorlock = new CT_AnchorLock();
                }
                return m_anchorlock;
            
            }
            const CT_AnchorLock& anchorlock(){

            if (m_anchorlock)
            {
                return *m_anchorlock;
            }
            return CT_AnchorLock::default_instance();
        
            }
            bool has_bordertop(){

            return m_has_bordertop;
        
            }
            CT_Border* mutable_bordertop(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_bordertop = true;
                if (!m_bordertop)
                {
                    m_bordertop = new CT_Border();
                }
                return m_bordertop;
            
            }
            const CT_Border& bordertop(){

            if (m_bordertop)
            {
                return *m_bordertop;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderbottom(){

            return m_has_borderbottom;
        
            }
            CT_Border* mutable_borderbottom(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_borderbottom = true;
                if (!m_borderbottom)
                {
                    m_borderbottom = new CT_Border();
                }
                return m_borderbottom;
            
            }
            const CT_Border& borderbottom(){

            if (m_borderbottom)
            {
                return *m_borderbottom;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderleft(){

            return m_has_borderleft;
        
            }
            CT_Border* mutable_borderleft(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_borderleft = true;
                if (!m_borderleft)
                {
                    m_borderleft = new CT_Border();
                }
                return m_borderleft;
            
            }
            const CT_Border& borderleft(){

            if (m_borderleft)
            {
                return *m_borderleft;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderright(){

            return m_has_borderright;
        
            }
            CT_Border* mutable_borderright(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_borderright = true;
                if (!m_borderright)
                {
                    m_borderright = new CT_Border();
                }
                return m_borderright;
            
            }
            const CT_Border& borderright(){

            if (m_borderright)
            {
                return *m_borderright;
            }
            return CT_Border::default_instance();
        
            }
            bool has_ClientData(){

            return m_has_ClientData;
        
            }
            CT_ClientData* mutable_ClientData(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_ClientData = true;
                if (!m_ClientData)
                {
                    m_ClientData = new CT_ClientData();
                }
                return m_ClientData;
            
            }
            const CT_ClientData& ClientData(){

            if (m_ClientData)
            {
                return *m_ClientData;
            }
            return CT_ClientData::default_instance();
        
            }
            bool has_textdata(){

            return m_has_textdata;
        
            }
            CT_Rel* mutable_textdata(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_textdata = true;
                if (!m_textdata)
                {
                    m_textdata = new CT_Rel();
                }
                return m_textdata;
            
            }
            const CT_Rel& textdata(){

            if (m_textdata)
            {
                return *m_textdata;
            }
            return CT_Rel::default_instance();
        
            }
            bool has_group(){

            return m_has_group;
        
            }
            CT_Group* mutable_group(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_group = true;
                if (!m_group)
                {
                    m_group = new CT_Group();
                }
                return m_group;
            
            }
            const CT_Group& group(){

            if (m_group)
            {
                return *m_group;
            }
            return CT_Group::default_instance();
        
            }
            bool has_shape(){

            return m_has_shape;
        
            }
            CT_Shape* mutable_shape(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_shape = true;
                if (!m_shape)
                {
                    m_shape = new CT_Shape();
                }
                return m_shape;
            
            }
            const CT_Shape& shape(){

            if (m_shape)
            {
                return *m_shape;
            }
            return CT_Shape::default_instance();
        
            }
            bool has_shapetype(){

            return m_has_shapetype;
        
            }
            CT_Shapetype* mutable_shapetype(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_shapetype = true;
                if (!m_shapetype)
                {
                    m_shapetype = new CT_Shapetype();
                }
                return m_shapetype;
            
            }
            const CT_Shapetype& shapetype(){

            if (m_shapetype)
            {
                return *m_shapetype;
            }
            return CT_Shapetype::default_instance();
        
            }
            bool has_arc(){

            return m_has_arc;
        
            }
            CT_Arc* mutable_arc(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_arc = true;
                if (!m_arc)
                {
                    m_arc = new CT_Arc();
                }
                return m_arc;
            
            }
            const CT_Arc& arc(){

            if (m_arc)
            {
                return *m_arc;
            }
            return CT_Arc::default_instance();
        
            }
            bool has_curve(){

            return m_has_curve;
        
            }
            CT_Curve* mutable_curve(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_curve = true;
                if (!m_curve)
                {
                    m_curve = new CT_Curve();
                }
                return m_curve;
            
            }
            const CT_Curve& curve(){

            if (m_curve)
            {
                return *m_curve;
            }
            return CT_Curve::default_instance();
        
            }
            bool has_image(){

            return m_has_image;
        
            }
            CT_Image* mutable_image(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_image = true;
                if (!m_image)
                {
                    m_image = new CT_Image();
                }
                return m_image;
            
            }
            const CT_Image& image(){

            if (m_image)
            {
                return *m_image;
            }
            return CT_Image::default_instance();
        
            }
            bool has_line(){

            return m_has_line;
        
            }
            CT_Line* mutable_line(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_line = true;
                if (!m_line)
                {
                    m_line = new CT_Line();
                }
                return m_line;
            
            }
            const CT_Line& line(){

            if (m_line)
            {
                return *m_line;
            }
            return CT_Line::default_instance();
        
            }
            bool has_oval(){

            return m_has_oval;
        
            }
            CT_Oval* mutable_oval(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_oval = true;
                if (!m_oval)
                {
                    m_oval = new CT_Oval();
                }
                return m_oval;
            
            }
            const CT_Oval& oval(){

            if (m_oval)
            {
                return *m_oval;
            }
            return CT_Oval::default_instance();
        
            }
            bool has_polyline(){

            return m_has_polyline;
        
            }
            CT_PolyLine* mutable_polyline(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_polyline = true;
                if (!m_polyline)
                {
                    m_polyline = new CT_PolyLine();
                }
                return m_polyline;
            
            }
            const CT_PolyLine& polyline(){

            if (m_polyline)
            {
                return *m_polyline;
            }
            return CT_PolyLine::default_instance();
        
            }
            bool has_rect(){

            return m_has_rect;
        
            }
            CT_Rect* mutable_rect(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_rect = true;
                if (!m_rect)
                {
                    m_rect = new CT_Rect();
                }
                return m_rect;
            
            }
            const CT_Rect& rect(){

            if (m_rect)
            {
                return *m_rect;
            }
            return CT_Rect::default_instance();
        
            }
            bool has_roundrect(){

            return m_has_roundrect;
        
            }
            CT_RoundRect* mutable_roundrect(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_diagram = false;
                
        if (m_diagram)
        {
            delete m_diagram;
            m_diagram = NULL;
        }
    ;
            
                m_has_roundrect = true;
                if (!m_roundrect)
                {
                    m_roundrect = new CT_RoundRect();
                }
                return m_roundrect;
            
            }
            const CT_RoundRect& roundrect(){

            if (m_roundrect)
            {
                return *m_roundrect;
            }
            return CT_RoundRect::default_instance();
        
            }
            bool has_diagram(){

            return m_has_diagram;
        
            }
            CT_Diagram* mutable_diagram(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_group = false;
                
        if (m_group)
        {
            delete m_group;
            m_group = NULL;
        }
    ;
            
                m_has_shape = false;
                
        if (m_shape)
        {
            delete m_shape;
            m_shape = NULL;
        }
    ;
            
                m_has_shapetype = false;
                
        if (m_shapetype)
        {
            delete m_shapetype;
            m_shapetype = NULL;
        }
    ;
            
                m_has_arc = false;
                
        if (m_arc)
        {
            delete m_arc;
            m_arc = NULL;
        }
    ;
            
                m_has_curve = false;
                
        if (m_curve)
        {
            delete m_curve;
            m_curve = NULL;
        }
    ;
            
                m_has_image = false;
                
        if (m_image)
        {
            delete m_image;
            m_image = NULL;
        }
    ;
            
                m_has_line = false;
                
        if (m_line)
        {
            delete m_line;
            m_line = NULL;
        }
    ;
            
                m_has_oval = false;
                
        if (m_oval)
        {
            delete m_oval;
            m_oval = NULL;
        }
    ;
            
                m_has_polyline = false;
                
        if (m_polyline)
        {
            delete m_polyline;
            m_polyline = NULL;
        }
    ;
            
                m_has_rect = false;
                
        if (m_rect)
        {
            delete m_rect;
            m_rect = NULL;
        }
    ;
            
                m_has_roundrect = false;
                
        if (m_roundrect)
        {
            delete m_roundrect;
            m_roundrect = NULL;
        }
    ;
            
                m_has_diagram = true;
                if (!m_diagram)
                {
                    m_diagram = new CT_Diagram();
                }
                return m_diagram;
            
            }
            const CT_Diagram& diagram(){

            if (m_diagram)
            {
                return *m_diagram;
            }
            return CT_Diagram::default_instance();
        
            }

        private:
            bool m_has_path ;
            CT_Path* m_path ;
            bool m_has_formulas ;
            CT_Formulas* m_formulas ;
            bool m_has_handles ;
            CT_Handles* m_handles ;
            bool m_has_fill ;
            CT_Fill* m_fill ;
            bool m_has_stroke ;
            CT_Stroke* m_stroke ;
            bool m_has_shadow ;
            CT_Shadow* m_shadow ;
            bool m_has_textbox ;
            CT_Textbox* m_textbox ;
            bool m_has_textpath ;
            CT_TextPath* m_textpath ;
            bool m_has_imagedata ;
            CT_ImageData* m_imagedata ;
            bool m_has_skew ;
            CT_Skew* m_skew ;
            bool m_has_extrusion ;
            CT_Extrusion* m_extrusion ;
            bool m_has_callout ;
            CT_Callout* m_callout ;
            bool m_has_lock ;
            CT_Lock* m_lock ;
            bool m_has_clippath ;
            CT_ClipPath* m_clippath ;
            bool m_has_signatureline ;
            CT_SignatureLine* m_signatureline ;
            bool m_has_wrap ;
            CT_Wrap* m_wrap ;
            bool m_has_anchorlock ;
            CT_AnchorLock* m_anchorlock ;
            bool m_has_bordertop ;
            CT_Border* m_bordertop ;
            bool m_has_borderbottom ;
            CT_Border* m_borderbottom ;
            bool m_has_borderleft ;
            CT_Border* m_borderleft ;
            bool m_has_borderright ;
            CT_Border* m_borderright ;
            bool m_has_ClientData ;
            CT_ClientData* m_ClientData ;
            bool m_has_textdata ;
            CT_Rel* m_textdata ;
            bool m_has_group ;
            CT_Group* m_group ;
            bool m_has_shape ;
            CT_Shape* m_shape ;
            bool m_has_shapetype ;
            CT_Shapetype* m_shapetype ;
            bool m_has_arc ;
            CT_Arc* m_arc ;
            bool m_has_curve ;
            CT_Curve* m_curve ;
            bool m_has_image ;
            CT_Image* m_image ;
            bool m_has_line ;
            CT_Line* m_line ;
            bool m_has_oval ;
            CT_Oval* m_oval ;
            bool m_has_polyline ;
            CT_PolyLine* m_polyline ;
            bool m_has_rect ;
            CT_Rect* m_rect ;
            bool m_has_roundrect ;
            CT_RoundRect* m_roundrect ;
            bool m_has_diagram ;
            CT_Diagram* m_diagram ;

        }


    }

    class CT_Background : public XSD::ComplexType{
    public:
        bool has_fill(){

            return m_has_fill;
        
        }
        CT_Fill* mutable_fill(){

                m_has_fill = true;
                if (!m_fill)
                {
                    m_fill = new CT_Fill();
                }
                return m_fill;
            
        }
        const CT_Fill& fill(){

            if (m_fill)
            {
                return *m_fill;
            }
            return CT_Fill::default_instance();
        
        }
        void clear(){

                m_has_id_attr = false;
                m_id_attr.clear();
            
                m_has_filled_attr = false;
                
        if (m_filled_attr)
        {
            delete m_filled_attr;
            m_filled_attr = NULL;
        }
    
            
                m_has_fillcolor_attr = false;
                
        if (m_fillcolor_attr)
        {
            delete m_fillcolor_attr;
            m_fillcolor_attr = NULL;
        }
    
            
                m_has_bwmode_attr = false;
                
        if (m_bwmode_attr)
        {
            delete m_bwmode_attr;
            m_bwmode_attr = NULL;
        }
    
            
                m_has_bwpure_attr = false;
                
        if (m_bwpure_attr)
        {
            delete m_bwpure_attr;
            m_bwpure_attr = NULL;
        }
    
            
                m_has_bwnormal_attr = false;
                
        if (m_bwnormal_attr)
        {
            delete m_bwnormal_attr;
            m_bwnormal_attr = NULL;
        }
    
            
                m_has_targetscreensize_attr = false;
                
        if (m_targetscreensize_attr)
        {
            delete m_targetscreensize_attr;
            m_targetscreensize_attr = NULL;
        }
    
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    _outStream << _attrName << \=\\ << m_id_attr << \\\;
m_filled_attr->toXml(_attrName, _outStream);
m_fillcolor_attr->toXml(_attrName, _outStream);
m_bwmode_attr->toXml(_attrName, _outStream);
m_bwpure_attr->toXml(_attrName, _outStream);
m_bwnormal_attr->toXml(_attrName, _outStream);
m_targetscreensize_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
                if (m_has_fill)
                {
                    m_fill->toXml(fill, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Background& default_instance(){

    if (!CT_Background::default_instance_)
    {
        CT_Background::default_instance_ = new CT_Background();
    }
    return *CT_Background::default_instance_;

        }
        bool has_id_attr(){

            return m_has_id_attr;
        
        }
        void set_id_attr(const string& _id_attr ){

        m_has_id_attr = true;
        m_id_attr = _id_attr;
        
        }
        const string& id_attr(){

            return type: \string\nname: \m_id_attr\n;
        
        }
        bool has_filled_attr(){

            return m_has_filled_attr;
        
        }
        void set_filled_attr(const ns_s::ST_TrueFalse& _filled_attr ){

            m_has_filled_attr = true;
            m_filled_attr = new ns_s::ST_TrueFalse(_filled_attr);
        
        }
        const ns_s::ST_TrueFalse& filled_attr(){

            if (m_filled_attr)
            {
                return *m_filled_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_fillcolor_attr(){

            return m_has_fillcolor_attr;
        
        }
        void set_fillcolor_attr(const ns_s::ST_ColorType& _fillcolor_attr ){

            m_has_fillcolor_attr = true;
            m_fillcolor_attr = new ns_s::ST_ColorType(_fillcolor_attr);
        
        }
        const ns_s::ST_ColorType& fillcolor_attr(){

            if (m_fillcolor_attr)
            {
                return *m_fillcolor_attr;
            }
            return ns_s::ST_ColorType::default_instance();
        
        }
        bool has_bwmode_attr(){

            return m_has_bwmode_attr;
        
        }
        void set_bwmode_attr(const ST_BWMode& _bwmode_attr ){

            m_has_bwmode_attr = true;
            m_bwmode_attr = new ST_BWMode(_bwmode_attr);
        
        }
        const ST_BWMode& bwmode_attr(){

            if (m_bwmode_attr)
            {
                return *m_bwmode_attr;
            }
            return ST_BWMode::default_instance();
        
        }
        bool has_bwpure_attr(){

            return m_has_bwpure_attr;
        
        }
        void set_bwpure_attr(const ST_BWMode& _bwpure_attr ){

            m_has_bwpure_attr = true;
            m_bwpure_attr = new ST_BWMode(_bwpure_attr);
        
        }
        const ST_BWMode& bwpure_attr(){

            if (m_bwpure_attr)
            {
                return *m_bwpure_attr;
            }
            return ST_BWMode::default_instance();
        
        }
        bool has_bwnormal_attr(){

            return m_has_bwnormal_attr;
        
        }
        void set_bwnormal_attr(const ST_BWMode& _bwnormal_attr ){

            m_has_bwnormal_attr = true;
            m_bwnormal_attr = new ST_BWMode(_bwnormal_attr);
        
        }
        const ST_BWMode& bwnormal_attr(){

            if (m_bwnormal_attr)
            {
                return *m_bwnormal_attr;
            }
            return ST_BWMode::default_instance();
        
        }
        bool has_targetscreensize_attr(){

            return m_has_targetscreensize_attr;
        
        }
        void set_targetscreensize_attr(const ST_ScreenSize& _targetscreensize_attr ){

            m_has_targetscreensize_attr = true;
            m_targetscreensize_attr = new ST_ScreenSize(_targetscreensize_attr);
        
        }
        const ST_ScreenSize& targetscreensize_attr(){

            if (m_targetscreensize_attr)
            {
                return *m_targetscreensize_attr;
            }
            return ST_ScreenSize::default_instance();
        
        }

    private:
        bool m_has_fill ;
        CT_Fill* m_fill ;
        static CT_Background* default_instance_ ;
        bool m_has_id_attr ;
        string m_id_attr ;
        bool m_has_filled_attr ;
        ns_s::ST_TrueFalse* m_filled_attr ;
        bool m_has_fillcolor_attr ;
        ns_s::ST_ColorType* m_fillcolor_attr ;
        bool m_has_bwmode_attr ;
        ST_BWMode* m_bwmode_attr ;
        bool m_has_bwpure_attr ;
        ST_BWMode* m_bwpure_attr ;
        bool m_has_bwnormal_attr ;
        ST_BWMode* m_bwnormal_attr ;
        bool m_has_targetscreensize_attr ;
        ST_ScreenSize* m_targetscreensize_attr ;

    }

    class CT_Fill : public XSD::ComplexType{
    public:
        bool has_fill(){

            return m_has_fill;
        
        }
        CT_Fill* mutable_fill(){

                m_has_fill = true;
                if (!m_fill)
                {
                    m_fill = new CT_Fill();
                }
                return m_fill;
            
        }
        const CT_Fill& fill(){

            if (m_fill)
            {
                return *m_fill;
            }
            return CT_Fill::default_instance();
        
        }
        void clear(){

                m_has_id_attr = false;
                m_id_attr.clear();
            
                m_has_type_attr = false;
                
        if (m_type_attr)
        {
            delete m_type_attr;
            m_type_attr = NULL;
        }
    
            
                m_has_on_attr = false;
                
        if (m_on_attr)
        {
            delete m_on_attr;
            m_on_attr = NULL;
        }
    
            
                m_has_color_attr = false;
                
        if (m_color_attr)
        {
            delete m_color_attr;
            m_color_attr = NULL;
        }
    
            
                m_has_opacity_attr = false;
                m_opacity_attr.clear();
            
                m_has_color2_attr = false;
                
        if (m_color2_attr)
        {
            delete m_color2_attr;
            m_color2_attr = NULL;
        }
    
            
                m_has_src_attr = false;
                m_src_attr.clear();
            
                m_has_href_attr = false;
                m_href_attr.clear();
            
                m_has_althref_attr = false;
                m_althref_attr.clear();
            
                m_has_size_attr = false;
                m_size_attr.clear();
            
                m_has_origin_attr = false;
                m_origin_attr.clear();
            
                m_has_position_attr = false;
                m_position_attr.clear();
            
                m_has_aspect_attr = false;
                
        if (m_aspect_attr)
        {
            delete m_aspect_attr;
            m_aspect_attr = NULL;
        }
    
            
                m_has_colors_attr = false;
                m_colors_attr.clear();
            
                m_has_angle_attr = false;
                m_angle_attr = 0;
            
                m_has_alignshape_attr = false;
                
        if (m_alignshape_attr)
        {
            delete m_alignshape_attr;
            m_alignshape_attr = NULL;
        }
    
            
                m_has_focus_attr = false;
                m_focus_attr.clear();
            
                m_has_focussize_attr = false;
                m_focussize_attr.clear();
            
                m_has_focusposition_attr = false;
                m_focusposition_attr.clear();
            
                m_has_method_attr = false;
                
        if (m_method_attr)
        {
            delete m_method_attr;
            m_method_attr = NULL;
        }
    
            
                m_has_detectmouseclick_attr = false;
                
        if (m_detectmouseclick_attr)
        {
            delete m_detectmouseclick_attr;
            m_detectmouseclick_attr = NULL;
        }
    
            
                m_has_title_attr = false;
                m_title_attr.clear();
            
                m_has_opacity2_attr = false;
                m_opacity2_attr.clear();
            
                m_has_recolor_attr = false;
                
        if (m_recolor_attr)
        {
            delete m_recolor_attr;
            m_recolor_attr = NULL;
        }
    
            
                m_has_rotate_attr = false;
                
        if (m_rotate_attr)
        {
            delete m_rotate_attr;
            m_rotate_attr = NULL;
        }
    
            
                m_has_id_attr = false;
                
        if (m_id_attr)
        {
            delete m_id_attr;
            m_id_attr = NULL;
        }
    
            
                m_has_relid_attr = false;
                
        if (m_relid_attr)
        {
            delete m_relid_attr;
            m_relid_attr = NULL;
        }
    
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    _outStream << _attrName << \=\\ << m_id_attr << \\\;
m_type_attr->toXml(_attrName, _outStream);
m_on_attr->toXml(_attrName, _outStream);
m_color_attr->toXml(_attrName, _outStream);
_outStream << _attrName << \=\\ << m_opacity_attr << \\\;
m_color2_attr->toXml(_attrName, _outStream);
_outStream << _attrName << \=\\ << m_src_attr << \\\;
_outStream << _attrName << \=\\ << m_href_attr << \\\;
_outStream << _attrName << \=\\ << m_althref_attr << \\\;
_outStream << _attrName << \=\\ << m_size_attr << \\\;
_outStream << _attrName << \=\\ << m_origin_attr << \\\;
_outStream << _attrName << \=\\ << m_position_attr << \\\;
m_aspect_attr->toXml(_attrName, _outStream);
_outStream << _attrName << \=\\ << m_colors_attr << \\\;
_outStream << _attrName << \=\\ << m_angle_attr << \\\;
m_alignshape_attr->toXml(_attrName, _outStream);
_outStream << _attrName << \=\\ << m_focus_attr << \\\;
_outStream << _attrName << \=\\ << m_focussize_attr << \\\;
_outStream << _attrName << \=\\ << m_focusposition_attr << \\\;
m_method_attr->toXml(_attrName, _outStream);
m_detectmouseclick_attr->toXml(_attrName, _outStream);
_outStream << _attrName << \=\\ << m_title_attr << \\\;
_outStream << _attrName << \=\\ << m_opacity2_attr << \\\;
m_recolor_attr->toXml(_attrName, _outStream);
m_rotate_attr->toXml(_attrName, _outStream);
m_id_attr->toXml(_attrName, _outStream);
m_relid_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
                if (m_has_fill)
                {
                    m_fill->toXml(fill, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Fill& default_instance(){

    if (!CT_Fill::default_instance_)
    {
        CT_Fill::default_instance_ = new CT_Fill();
    }
    return *CT_Fill::default_instance_;

        }
        bool has_id_attr(){

            return m_has_id_attr;
        
        }
        void set_id_attr(const string& _id_attr ){

        m_has_id_attr = true;
        m_id_attr = _id_attr;
        
        }
        const string& id_attr(){

            return type: \string\nname: \m_id_attr\n;
        
        }
        bool has_type_attr(){

            return m_has_type_attr;
        
        }
        void set_type_attr(const ST_FillType& _type_attr ){

            m_has_type_attr = true;
            m_type_attr = new ST_FillType(_type_attr);
        
        }
        const ST_FillType& type_attr(){

            if (m_type_attr)
            {
                return *m_type_attr;
            }
            return ST_FillType::default_instance();
        
        }
        bool has_on_attr(){

            return m_has_on_attr;
        
        }
        void set_on_attr(const ns_s::ST_TrueFalse& _on_attr ){

            m_has_on_attr = true;
            m_on_attr = new ns_s::ST_TrueFalse(_on_attr);
        
        }
        const ns_s::ST_TrueFalse& on_attr(){

            if (m_on_attr)
            {
                return *m_on_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_color_attr(){

            return m_has_color_attr;
        
        }
        void set_color_attr(const ns_s::ST_ColorType& _color_attr ){

            m_has_color_attr = true;
            m_color_attr = new ns_s::ST_ColorType(_color_attr);
        
        }
        const ns_s::ST_ColorType& color_attr(){

            if (m_color_attr)
            {
                return *m_color_attr;
            }
            return ns_s::ST_ColorType::default_instance();
        
        }
        bool has_opacity_attr(){

            return m_has_opacity_attr;
        
        }
        void set_opacity_attr(const string& _opacity_attr ){

        m_has_opacity_attr = true;
        m_opacity_attr = _opacity_attr;
        
        }
        const string& opacity_attr(){

            return type: \string\nname: \m_opacity_attr\n;
        
        }
        bool has_color2_attr(){

            return m_has_color2_attr;
        
        }
        void set_color2_attr(const ns_s::ST_ColorType& _color2_attr ){

            m_has_color2_attr = true;
            m_color2_attr = new ns_s::ST_ColorType(_color2_attr);
        
        }
        const ns_s::ST_ColorType& color2_attr(){

            if (m_color2_attr)
            {
                return *m_color2_attr;
            }
            return ns_s::ST_ColorType::default_instance();
        
        }
        bool has_src_attr(){

            return m_has_src_attr;
        
        }
        void set_src_attr(const string& _src_attr ){

        m_has_src_attr = true;
        m_src_attr = _src_attr;
        
        }
        const string& src_attr(){

            return type: \string\nname: \m_src_attr\n;
        
        }
        bool has_href_attr(){

            return m_has_href_attr;
        
        }
        void set_href_attr(const string& _href_attr ){

        m_has_href_attr = true;
        m_href_attr = _href_attr;
        
        }
        const string& href_attr(){

            return type: \string\nname: \m_href_attr\n;
        
        }
        bool has_althref_attr(){

            return m_has_althref_attr;
        
        }
        void set_althref_attr(const string& _althref_attr ){

        m_has_althref_attr = true;
        m_althref_attr = _althref_attr;
        
        }
        const string& althref_attr(){

            return type: \string\nname: \m_althref_attr\n;
        
        }
        bool has_size_attr(){

            return m_has_size_attr;
        
        }
        void set_size_attr(const string& _size_attr ){

        m_has_size_attr = true;
        m_size_attr = _size_attr;
        
        }
        const string& size_attr(){

            return type: \string\nname: \m_size_attr\n;
        
        }
        bool has_origin_attr(){

            return m_has_origin_attr;
        
        }
        void set_origin_attr(const string& _origin_attr ){

        m_has_origin_attr = true;
        m_origin_attr = _origin_attr;
        
        }
        const string& origin_attr(){

            return type: \string\nname: \m_origin_attr\n;
        
        }
        bool has_position_attr(){

            return m_has_position_attr;
        
        }
        void set_position_attr(const string& _position_attr ){

        m_has_position_attr = true;
        m_position_attr = _position_attr;
        
        }
        const string& position_attr(){

            return type: \string\nname: \m_position_attr\n;
        
        }
        bool has_aspect_attr(){

            return m_has_aspect_attr;
        
        }
        void set_aspect_attr(const ST_ImageAspect& _aspect_attr ){

            m_has_aspect_attr = true;
            m_aspect_attr = new ST_ImageAspect(_aspect_attr);
        
        }
        const ST_ImageAspect& aspect_attr(){

            if (m_aspect_attr)
            {
                return *m_aspect_attr;
            }
            return ST_ImageAspect::default_instance();
        
        }
        bool has_colors_attr(){

            return m_has_colors_attr;
        
        }
        void set_colors_attr(const string& _colors_attr ){

        m_has_colors_attr = true;
        m_colors_attr = _colors_attr;
        
        }
        const string& colors_attr(){

            return type: \string\nname: \m_colors_attr\n;
        
        }
        bool has_angle_attr(){

            return m_has_angle_attr;
        
        }
        void set_angle_attr(const decimal& _angle_attr ){

        m_has_angle_attr = true;
        m_angle_attr = _angle_attr;
        
        }
        const decimal& angle_attr(){

            return type: \decimal\nname: \m_angle_attr\n;
        
        }
        bool has_alignshape_attr(){

            return m_has_alignshape_attr;
        
        }
        void set_alignshape_attr(const ns_s::ST_TrueFalse& _alignshape_attr ){

            m_has_alignshape_attr = true;
            m_alignshape_attr = new ns_s::ST_TrueFalse(_alignshape_attr);
        
        }
        const ns_s::ST_TrueFalse& alignshape_attr(){

            if (m_alignshape_attr)
            {
                return *m_alignshape_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_focus_attr(){

            return m_has_focus_attr;
        
        }
        void set_focus_attr(const string& _focus_attr ){

        m_has_focus_attr = true;
        m_focus_attr = _focus_attr;
        
        }
        const string& focus_attr(){

            return type: \string\nname: \m_focus_attr\n;
        
        }
        bool has_focussize_attr(){

            return m_has_focussize_attr;
        
        }
        void set_focussize_attr(const string& _focussize_attr ){

        m_has_focussize_attr = true;
        m_focussize_attr = _focussize_attr;
        
        }
        const string& focussize_attr(){

            return type: \string\nname: \m_focussize_attr\n;
        
        }
        bool has_focusposition_attr(){

            return m_has_focusposition_attr;
        
        }
        void set_focusposition_attr(const string& _focusposition_attr ){

        m_has_focusposition_attr = true;
        m_focusposition_attr = _focusposition_attr;
        
        }
        const string& focusposition_attr(){

            return type: \string\nname: \m_focusposition_attr\n;
        
        }
        bool has_method_attr(){

            return m_has_method_attr;
        
        }
        void set_method_attr(const ST_FillMethod& _method_attr ){

            m_has_method_attr = true;
            m_method_attr = new ST_FillMethod(_method_attr);
        
        }
        const ST_FillMethod& method_attr(){

            if (m_method_attr)
            {
                return *m_method_attr;
            }
            return ST_FillMethod::default_instance();
        
        }
        bool has_detectmouseclick_attr(){

            return m_has_detectmouseclick_attr;
        
        }
        void set_detectmouseclick_attr(const ns_s::ST_TrueFalse& _detectmouseclick_attr ){

            m_has_detectmouseclick_attr = true;
            m_detectmouseclick_attr = new ns_s::ST_TrueFalse(_detectmouseclick_attr);
        
        }
        const ns_s::ST_TrueFalse& detectmouseclick_attr(){

            if (m_detectmouseclick_attr)
            {
                return *m_detectmouseclick_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_title_attr(){

            return m_has_title_attr;
        
        }
        void set_title_attr(const string& _title_attr ){

        m_has_title_attr = true;
        m_title_attr = _title_attr;
        
        }
        const string& title_attr(){

            return type: \string\nname: \m_title_attr\n;
        
        }
        bool has_opacity2_attr(){

            return m_has_opacity2_attr;
        
        }
        void set_opacity2_attr(const string& _opacity2_attr ){

        m_has_opacity2_attr = true;
        m_opacity2_attr = _opacity2_attr;
        
        }
        const string& opacity2_attr(){

            return type: \string\nname: \m_opacity2_attr\n;
        
        }
        bool has_recolor_attr(){

            return m_has_recolor_attr;
        
        }
        void set_recolor_attr(const ns_s::ST_TrueFalse& _recolor_attr ){

            m_has_recolor_attr = true;
            m_recolor_attr = new ns_s::ST_TrueFalse(_recolor_attr);
        
        }
        const ns_s::ST_TrueFalse& recolor_attr(){

            if (m_recolor_attr)
            {
                return *m_recolor_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_rotate_attr(){

            return m_has_rotate_attr;
        
        }
        void set_rotate_attr(const ns_s::ST_TrueFalse& _rotate_attr ){

            m_has_rotate_attr = true;
            m_rotate_attr = new ns_s::ST_TrueFalse(_rotate_attr);
        
        }
        const ns_s::ST_TrueFalse& rotate_attr(){

            if (m_rotate_attr)
            {
                return *m_rotate_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_id_attr(){

            return m_has_id_attr;
        
        }
        void set_id_attr(const ST_RelationshipId& _id_attr ){

            m_has_id_attr = true;
            m_id_attr = new ST_RelationshipId(_id_attr);
        
        }
        const ST_RelationshipId& id_attr(){

            if (m_id_attr)
            {
                return *m_id_attr;
            }
            return ST_RelationshipId::default_instance();
        
        }
        bool has_relid_attr(){

            return m_has_relid_attr;
        
        }
        void set_relid_attr(const ns_r::ST_RelationshipId& _relid_attr ){

            m_has_relid_attr = true;
            m_relid_attr = new ns_r::ST_RelationshipId(_relid_attr);
        
        }
        const ns_r::ST_RelationshipId& relid_attr(){

            if (m_relid_attr)
            {
                return *m_relid_attr;
            }
            return ns_r::ST_RelationshipId::default_instance();
        
        }

    private:
        bool m_has_fill ;
        CT_Fill* m_fill ;
        static CT_Fill* default_instance_ ;
        bool m_has_id_attr ;
        string m_id_attr ;
        bool m_has_type_attr ;
        ST_FillType* m_type_attr ;
        bool m_has_on_attr ;
        ns_s::ST_TrueFalse* m_on_attr ;
        bool m_has_color_attr ;
        ns_s::ST_ColorType* m_color_attr ;
        bool m_has_opacity_attr ;
        string m_opacity_attr ;
        bool m_has_color2_attr ;
        ns_s::ST_ColorType* m_color2_attr ;
        bool m_has_src_attr ;
        string m_src_attr ;
        bool m_has_href_attr ;
        string m_href_attr ;
        bool m_has_althref_attr ;
        string m_althref_attr ;
        bool m_has_size_attr ;
        string m_size_attr ;
        bool m_has_origin_attr ;
        string m_origin_attr ;
        bool m_has_position_attr ;
        string m_position_attr ;
        bool m_has_aspect_attr ;
        ST_ImageAspect* m_aspect_attr ;
        bool m_has_colors_attr ;
        string m_colors_attr ;
        bool m_has_angle_attr ;
        decimal m_angle_attr ;
        bool m_has_alignshape_attr ;
        ns_s::ST_TrueFalse* m_alignshape_attr ;
        bool m_has_focus_attr ;
        string m_focus_attr ;
        bool m_has_focussize_attr ;
        string m_focussize_attr ;
        bool m_has_focusposition_attr ;
        string m_focusposition_attr ;
        bool m_has_method_attr ;
        ST_FillMethod* m_method_attr ;
        bool m_has_detectmouseclick_attr ;
        ns_s::ST_TrueFalse* m_detectmouseclick_attr ;
        bool m_has_title_attr ;
        string m_title_attr ;
        bool m_has_opacity2_attr ;
        string m_opacity2_attr ;
        bool m_has_recolor_attr ;
        ns_s::ST_TrueFalse* m_recolor_attr ;
        bool m_has_rotate_attr ;
        ns_s::ST_TrueFalse* m_rotate_attr ;
        bool m_has_id_attr ;
        ST_RelationshipId* m_id_attr ;
        bool m_has_relid_attr ;
        ns_r::ST_RelationshipId* m_relid_attr ;

    }

    class CT_Formulas : public XSD::ComplexType{
    public:
        bool has_f(){

            return m_has_f;
        
        }
        CT_F* mutable_f(){

                m_has_f = true;
                if (!m_f)
                {
                    m_f = new CT_F();
                }
                return m_f;
            
        }
        const CT_F& f(){

            if (m_f)
            {
                return *m_f;
            }
            return CT_F::default_instance();
        
        }
        void clear(){

                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_f)
                {
                    m_f->toXml(f, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Formulas& default_instance(){

    if (!CT_Formulas::default_instance_)
    {
        CT_Formulas::default_instance_ = new CT_Formulas();
    }
    return *CT_Formulas::default_instance_;

        }

    private:
        bool m_has_f ;
        CT_F* m_f ;
        static CT_Formulas* default_instance_ ;

    }

    class CT_F : public XSD::ComplexType{
    public:
        void clear(){

                m_has_eqn_attr = false;
                m_eqn_attr.clear();
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    _outStream << _attrName << \=\\ << m_eqn_attr << \\\;
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_F& default_instance(){

    if (!CT_F::default_instance_)
    {
        CT_F::default_instance_ = new CT_F();
    }
    return *CT_F::default_instance_;

        }
        bool has_eqn_attr(){

            return m_has_eqn_attr;
        
        }
        void set_eqn_attr(const string& _eqn_attr ){

        m_has_eqn_attr = true;
        m_eqn_attr = _eqn_attr;
        
        }
        const string& eqn_attr(){

            return type: \string\nname: \m_eqn_attr\n;
        
        }

    private:
        static CT_F* default_instance_ ;
        bool m_has_eqn_attr ;
        string m_eqn_attr ;

    }

    class CT_Handles : public XSD::ComplexType{
    public:
        bool has_h(){

            return m_has_h;
        
        }
        CT_H* mutable_h(){

                m_has_h = true;
                if (!m_h)
                {
                    m_h = new CT_H();
                }
                return m_h;
            
        }
        const CT_H& h(){

            if (m_h)
            {
                return *m_h;
            }
            return CT_H::default_instance();
        
        }
        void clear(){

                m_has_h = false;
                
        if (m_h)
        {
            delete m_h;
            m_h = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_h)
                {
                    m_h->toXml(h, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Handles& default_instance(){

    if (!CT_Handles::default_instance_)
    {
        CT_Handles::default_instance_ = new CT_Handles();
    }
    return *CT_Handles::default_instance_;

        }

    private:
        bool m_has_h ;
        CT_H* m_h ;
        static CT_Handles* default_instance_ ;

    }

    class CT_H : public XSD::ComplexType{
    public:
        void clear(){

                m_has_position_attr = false;
                m_position_attr.clear();
            
                m_has_polar_attr = false;
                m_polar_attr.clear();
            
                m_has_map_attr = false;
                m_map_attr.clear();
            
                m_has_invx_attr = false;
                
        if (m_invx_attr)
        {
            delete m_invx_attr;
            m_invx_attr = NULL;
        }
    
            
                m_has_invy_attr = false;
                
        if (m_invy_attr)
        {
            delete m_invy_attr;
            m_invy_attr = NULL;
        }
    
            
                m_has_switch_attr = false;
                
        if (m_switch_attr)
        {
            delete m_switch_attr;
            m_switch_attr = NULL;
        }
    
            
                m_has_xrange_attr = false;
                m_xrange_attr.clear();
            
                m_has_yrange_attr = false;
                m_yrange_attr.clear();
            
                m_has_radiusrange_attr = false;
                m_radiusrange_attr.clear();
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    _outStream << _attrName << \=\\ << m_position_attr << \\\;
_outStream << _attrName << \=\\ << m_polar_attr << \\\;
_outStream << _attrName << \=\\ << m_map_attr << \\\;
m_invx_attr->toXml(_attrName, _outStream);
m_invy_attr->toXml(_attrName, _outStream);
m_switch_attr->toXml(_attrName, _outStream);
_outStream << _attrName << \=\\ << m_xrange_attr << \\\;
_outStream << _attrName << \=\\ << m_yrange_attr << \\\;
_outStream << _attrName << \=\\ << m_radiusrange_attr << \\\;
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_H& default_instance(){

    if (!CT_H::default_instance_)
    {
        CT_H::default_instance_ = new CT_H();
    }
    return *CT_H::default_instance_;

        }
        bool has_position_attr(){

            return m_has_position_attr;
        
        }
        void set_position_attr(const string& _position_attr ){

        m_has_position_attr = true;
        m_position_attr = _position_attr;
        
        }
        const string& position_attr(){

            return type: \string\nname: \m_position_attr\n;
        
        }
        bool has_polar_attr(){

            return m_has_polar_attr;
        
        }
        void set_polar_attr(const string& _polar_attr ){

        m_has_polar_attr = true;
        m_polar_attr = _polar_attr;
        
        }
        const string& polar_attr(){

            return type: \string\nname: \m_polar_attr\n;
        
        }
        bool has_map_attr(){

            return m_has_map_attr;
        
        }
        void set_map_attr(const string& _map_attr ){

        m_has_map_attr = true;
        m_map_attr = _map_attr;
        
        }
        const string& map_attr(){

            return type: \string\nname: \m_map_attr\n;
        
        }
        bool has_invx_attr(){

            return m_has_invx_attr;
        
        }
        void set_invx_attr(const ns_s::ST_TrueFalse& _invx_attr ){

            m_has_invx_attr = true;
            m_invx_attr = new ns_s::ST_TrueFalse(_invx_attr);
        
        }
        const ns_s::ST_TrueFalse& invx_attr(){

            if (m_invx_attr)
            {
                return *m_invx_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_invy_attr(){

            return m_has_invy_attr;
        
        }
        void set_invy_attr(const ns_s::ST_TrueFalse& _invy_attr ){

            m_has_invy_attr = true;
            m_invy_attr = new ns_s::ST_TrueFalse(_invy_attr);
        
        }
        const ns_s::ST_TrueFalse& invy_attr(){

            if (m_invy_attr)
            {
                return *m_invy_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_switch_attr(){

            return m_has_switch_attr;
        
        }
        void set_switch_attr(const ns_s::ST_TrueFalseBlank& _switch_attr ){

            m_has_switch_attr = true;
            m_switch_attr = new ns_s::ST_TrueFalseBlank(_switch_attr);
        
        }
        const ns_s::ST_TrueFalseBlank& switch_attr(){

            if (m_switch_attr)
            {
                return *m_switch_attr;
            }
            return ns_s::ST_TrueFalseBlank::default_instance();
        
        }
        bool has_xrange_attr(){

            return m_has_xrange_attr;
        
        }
        void set_xrange_attr(const string& _xrange_attr ){

        m_has_xrange_attr = true;
        m_xrange_attr = _xrange_attr;
        
        }
        const string& xrange_attr(){

            return type: \string\nname: \m_xrange_attr\n;
        
        }
        bool has_yrange_attr(){

            return m_has_yrange_attr;
        
        }
        void set_yrange_attr(const string& _yrange_attr ){

        m_has_yrange_attr = true;
        m_yrange_attr = _yrange_attr;
        
        }
        const string& yrange_attr(){

            return type: \string\nname: \m_yrange_attr\n;
        
        }
        bool has_radiusrange_attr(){

            return m_has_radiusrange_attr;
        
        }
        void set_radiusrange_attr(const string& _radiusrange_attr ){

        m_has_radiusrange_attr = true;
        m_radiusrange_attr = _radiusrange_attr;
        
        }
        const string& radiusrange_attr(){

            return type: \string\nname: \m_radiusrange_attr\n;
        
        }

    private:
        static CT_H* default_instance_ ;
        bool m_has_position_attr ;
        string m_position_attr ;
        bool m_has_polar_attr ;
        string m_polar_attr ;
        bool m_has_map_attr ;
        string m_map_attr ;
        bool m_has_invx_attr ;
        ns_s::ST_TrueFalse* m_invx_attr ;
        bool m_has_invy_attr ;
        ns_s::ST_TrueFalse* m_invy_attr ;
        bool m_has_switch_attr ;
        ns_s::ST_TrueFalseBlank* m_switch_attr ;
        bool m_has_xrange_attr ;
        string m_xrange_attr ;
        bool m_has_yrange_attr ;
        string m_yrange_attr ;
        bool m_has_radiusrange_attr ;
        string m_radiusrange_attr ;

    }

    class CT_ImageData : public XSD::ComplexType{
    public:
        void clear(){

                m_has_id_attr = false;
                m_id_attr.clear();
            
                m_has_src_attr = false;
                m_src_attr.clear();
            
                m_has_cropleft_attr = false;
                m_cropleft_attr.clear();
            
                m_has_croptop_attr = false;
                m_croptop_attr.clear();
            
                m_has_cropright_attr = false;
                m_cropright_attr.clear();
            
                m_has_cropbottom_attr = false;
                m_cropbottom_attr.clear();
            
                m_has_gain_attr = false;
                m_gain_attr.clear();
            
                m_has_blacklevel_attr = false;
                m_blacklevel_attr.clear();
            
                m_has_gamma_attr = false;
                m_gamma_attr.clear();
            
                m_has_grayscale_attr = false;
                
        if (m_grayscale_attr)
        {
            delete m_grayscale_attr;
            m_grayscale_attr = NULL;
        }
    
            
                m_has_bilevel_attr = false;
                
        if (m_bilevel_attr)
        {
            delete m_bilevel_attr;
            m_bilevel_attr = NULL;
        }
    
            
                m_has_chromakey_attr = false;
                
        if (m_chromakey_attr)
        {
            delete m_chromakey_attr;
            m_chromakey_attr = NULL;
        }
    
            
                m_has_embosscolor_attr = false;
                
        if (m_embosscolor_attr)
        {
            delete m_embosscolor_attr;
            m_embosscolor_attr = NULL;
        }
    
            
                m_has_recolortarget_attr = false;
                
        if (m_recolortarget_attr)
        {
            delete m_recolortarget_attr;
            m_recolortarget_attr = NULL;
        }
    
            
                m_has_href_attr = false;
                m_href_attr.clear();
            
                m_has_althref_attr = false;
                m_althref_attr.clear();
            
                m_has_title_attr = false;
                m_title_attr.clear();
            
                m_has_oleid_attr = false;
                m_oleid_attr = 0;
            
                m_has_detectmouseclick_attr = false;
                
        if (m_detectmouseclick_attr)
        {
            delete m_detectmouseclick_attr;
            m_detectmouseclick_attr = NULL;
        }
    
            
                m_has_movie_attr = false;
                m_movie_attr = 0;
            
                m_has_relid_attr = false;
                
        if (m_relid_attr)
        {
            delete m_relid_attr;
            m_relid_attr = NULL;
        }
    
            
                m_has_id_attr = false;
                
        if (m_id_attr)
        {
            delete m_id_attr;
            m_id_attr = NULL;
        }
    
            
                m_has_pict_attr = false;
                
        if (m_pict_attr)
        {
            delete m_pict_attr;
            m_pict_attr = NULL;
        }
    
            
                m_has_href_attr = false;
                
        if (m_href_attr)
        {
            delete m_href_attr;
            m_href_attr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    _outStream << _attrName << \=\\ << m_id_attr << \\\;
_outStream << _attrName << \=\\ << m_src_attr << \\\;
_outStream << _attrName << \=\\ << m_cropleft_attr << \\\;
_outStream << _attrName << \=\\ << m_croptop_attr << \\\;
_outStream << _attrName << \=\\ << m_cropright_attr << \\\;
_outStream << _attrName << \=\\ << m_cropbottom_attr << \\\;
_outStream << _attrName << \=\\ << m_gain_attr << \\\;
_outStream << _attrName << \=\\ << m_blacklevel_attr << \\\;
_outStream << _attrName << \=\\ << m_gamma_attr << \\\;
m_grayscale_attr->toXml(_attrName, _outStream);
m_bilevel_attr->toXml(_attrName, _outStream);
m_chromakey_attr->toXml(_attrName, _outStream);
m_embosscolor_attr->toXml(_attrName, _outStream);
m_recolortarget_attr->toXml(_attrName, _outStream);
_outStream << _attrName << \=\\ << m_href_attr << \\\;
_outStream << _attrName << \=\\ << m_althref_attr << \\\;
_outStream << _attrName << \=\\ << m_title_attr << \\\;
_outStream << _attrName << \=\\ << m_oleid_attr << \\\;
m_detectmouseclick_attr->toXml(_attrName, _outStream);
_outStream << _attrName << \=\\ << m_movie_attr << \\\;
m_relid_attr->toXml(_attrName, _outStream);
m_id_attr->toXml(_attrName, _outStream);
m_pict_attr->toXml(_attrName, _outStream);
m_href_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_ImageData& default_instance(){

    if (!CT_ImageData::default_instance_)
    {
        CT_ImageData::default_instance_ = new CT_ImageData();
    }
    return *CT_ImageData::default_instance_;

        }
        bool has_id_attr(){

            return m_has_id_attr;
        
        }
        void set_id_attr(const string& _id_attr ){

        m_has_id_attr = true;
        m_id_attr = _id_attr;
        
        }
        const string& id_attr(){

            return type: \string\nname: \m_id_attr\n;
        
        }
        bool has_src_attr(){

            return m_has_src_attr;
        
        }
        void set_src_attr(const string& _src_attr ){

        m_has_src_attr = true;
        m_src_attr = _src_attr;
        
        }
        const string& src_attr(){

            return type: \string\nname: \m_src_attr\n;
        
        }
        bool has_cropleft_attr(){

            return m_has_cropleft_attr;
        
        }
        void set_cropleft_attr(const string& _cropleft_attr ){

        m_has_cropleft_attr = true;
        m_cropleft_attr = _cropleft_attr;
        
        }
        const string& cropleft_attr(){

            return type: \string\nname: \m_cropleft_attr\n;
        
        }
        bool has_croptop_attr(){

            return m_has_croptop_attr;
        
        }
        void set_croptop_attr(const string& _croptop_attr ){

        m_has_croptop_attr = true;
        m_croptop_attr = _croptop_attr;
        
        }
        const string& croptop_attr(){

            return type: \string\nname: \m_croptop_attr\n;
        
        }
        bool has_cropright_attr(){

            return m_has_cropright_attr;
        
        }
        void set_cropright_attr(const string& _cropright_attr ){

        m_has_cropright_attr = true;
        m_cropright_attr = _cropright_attr;
        
        }
        const string& cropright_attr(){

            return type: \string\nname: \m_cropright_attr\n;
        
        }
        bool has_cropbottom_attr(){

            return m_has_cropbottom_attr;
        
        }
        void set_cropbottom_attr(const string& _cropbottom_attr ){

        m_has_cropbottom_attr = true;
        m_cropbottom_attr = _cropbottom_attr;
        
        }
        const string& cropbottom_attr(){

            return type: \string\nname: \m_cropbottom_attr\n;
        
        }
        bool has_gain_attr(){

            return m_has_gain_attr;
        
        }
        void set_gain_attr(const string& _gain_attr ){

        m_has_gain_attr = true;
        m_gain_attr = _gain_attr;
        
        }
        const string& gain_attr(){

            return type: \string\nname: \m_gain_attr\n;
        
        }
        bool has_blacklevel_attr(){

            return m_has_blacklevel_attr;
        
        }
        void set_blacklevel_attr(const string& _blacklevel_attr ){

        m_has_blacklevel_attr = true;
        m_blacklevel_attr = _blacklevel_attr;
        
        }
        const string& blacklevel_attr(){

            return type: \string\nname: \m_blacklevel_attr\n;
        
        }
        bool has_gamma_attr(){

            return m_has_gamma_attr;
        
        }
        void set_gamma_attr(const string& _gamma_attr ){

        m_has_gamma_attr = true;
        m_gamma_attr = _gamma_attr;
        
        }
        const string& gamma_attr(){

            return type: \string\nname: \m_gamma_attr\n;
        
        }
        bool has_grayscale_attr(){

            return m_has_grayscale_attr;
        
        }
        void set_grayscale_attr(const ns_s::ST_TrueFalse& _grayscale_attr ){

            m_has_grayscale_attr = true;
            m_grayscale_attr = new ns_s::ST_TrueFalse(_grayscale_attr);
        
        }
        const ns_s::ST_TrueFalse& grayscale_attr(){

            if (m_grayscale_attr)
            {
                return *m_grayscale_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_bilevel_attr(){

            return m_has_bilevel_attr;
        
        }
        void set_bilevel_attr(const ns_s::ST_TrueFalse& _bilevel_attr ){

            m_has_bilevel_attr = true;
            m_bilevel_attr = new ns_s::ST_TrueFalse(_bilevel_attr);
        
        }
        const ns_s::ST_TrueFalse& bilevel_attr(){

            if (m_bilevel_attr)
            {
                return *m_bilevel_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_chromakey_attr(){

            return m_has_chromakey_attr;
        
        }
        void set_chromakey_attr(const ns_s::ST_ColorType& _chromakey_attr ){

            m_has_chromakey_attr = true;
            m_chromakey_attr = new ns_s::ST_ColorType(_chromakey_attr);
        
        }
        const ns_s::ST_ColorType& chromakey_attr(){

            if (m_chromakey_attr)
            {
                return *m_chromakey_attr;
            }
            return ns_s::ST_ColorType::default_instance();
        
        }
        bool has_embosscolor_attr(){

            return m_has_embosscolor_attr;
        
        }
        void set_embosscolor_attr(const ns_s::ST_ColorType& _embosscolor_attr ){

            m_has_embosscolor_attr = true;
            m_embosscolor_attr = new ns_s::ST_ColorType(_embosscolor_attr);
        
        }
        const ns_s::ST_ColorType& embosscolor_attr(){

            if (m_embosscolor_attr)
            {
                return *m_embosscolor_attr;
            }
            return ns_s::ST_ColorType::default_instance();
        
        }
        bool has_recolortarget_attr(){

            return m_has_recolortarget_attr;
        
        }
        void set_recolortarget_attr(const ns_s::ST_ColorType& _recolortarget_attr ){

            m_has_recolortarget_attr = true;
            m_recolortarget_attr = new ns_s::ST_ColorType(_recolortarget_attr);
        
        }
        const ns_s::ST_ColorType& recolortarget_attr(){

            if (m_recolortarget_attr)
            {
                return *m_recolortarget_attr;
            }
            return ns_s::ST_ColorType::default_instance();
        
        }
        bool has_href_attr(){

            return m_has_href_attr;
        
        }
        void set_href_attr(const string& _href_attr ){

        m_has_href_attr = true;
        m_href_attr = _href_attr;
        
        }
        const string& href_attr(){

            return type: \string\nname: \m_href_attr\n;
        
        }
        bool has_althref_attr(){

            return m_has_althref_attr;
        
        }
        void set_althref_attr(const string& _althref_attr ){

        m_has_althref_attr = true;
        m_althref_attr = _althref_attr;
        
        }
        const string& althref_attr(){

            return type: \string\nname: \m_althref_attr\n;
        
        }
        bool has_title_attr(){

            return m_has_title_attr;
        
        }
        void set_title_attr(const string& _title_attr ){

        m_has_title_attr = true;
        m_title_attr = _title_attr;
        
        }
        const string& title_attr(){

            return type: \string\nname: \m_title_attr\n;
        
        }
        bool has_oleid_attr(){

            return m_has_oleid_attr;
        
        }
        void set_oleid_attr(const float& _oleid_attr ){

        m_has_oleid_attr = true;
        m_oleid_attr = _oleid_attr;
        
        }
        const float& oleid_attr(){

            return type: loat\nname: \m_oleid_attr\n;
        
        }
        bool has_detectmouseclick_attr(){

            return m_has_detectmouseclick_attr;
        
        }
        void set_detectmouseclick_attr(const ns_s::ST_TrueFalse& _detectmouseclick_attr ){

            m_has_detectmouseclick_attr = true;
            m_detectmouseclick_attr = new ns_s::ST_TrueFalse(_detectmouseclick_attr);
        
        }
        const ns_s::ST_TrueFalse& detectmouseclick_attr(){

            if (m_detectmouseclick_attr)
            {
                return *m_detectmouseclick_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_movie_attr(){

            return m_has_movie_attr;
        
        }
        void set_movie_attr(const float& _movie_attr ){

        m_has_movie_attr = true;
        m_movie_attr = _movie_attr;
        
        }
        const float& movie_attr(){

            return type: loat\nname: \m_movie_attr\n;
        
        }
        bool has_relid_attr(){

            return m_has_relid_attr;
        
        }
        void set_relid_attr(const ns_r::ST_RelationshipId& _relid_attr ){

            m_has_relid_attr = true;
            m_relid_attr = new ns_r::ST_RelationshipId(_relid_attr);
        
        }
        const ns_r::ST_RelationshipId& relid_attr(){

            if (m_relid_attr)
            {
                return *m_relid_attr;
            }
            return ns_r::ST_RelationshipId::default_instance();
        
        }
        bool has_id_attr(){

            return m_has_id_attr;
        
        }
        void set_id_attr(const ST_RelationshipId& _id_attr ){

            m_has_id_attr = true;
            m_id_attr = new ST_RelationshipId(_id_attr);
        
        }
        const ST_RelationshipId& id_attr(){

            if (m_id_attr)
            {
                return *m_id_attr;
            }
            return ST_RelationshipId::default_instance();
        
        }
        bool has_pict_attr(){

            return m_has_pict_attr;
        
        }
        void set_pict_attr(const ST_RelationshipId& _pict_attr ){

            m_has_pict_attr = true;
            m_pict_attr = new ST_RelationshipId(_pict_attr);
        
        }
        const ST_RelationshipId& pict_attr(){

            if (m_pict_attr)
            {
                return *m_pict_attr;
            }
            return ST_RelationshipId::default_instance();
        
        }
        bool has_href_attr(){

            return m_has_href_attr;
        
        }
        void set_href_attr(const ST_RelationshipId& _href_attr ){

            m_has_href_attr = true;
            m_href_attr = new ST_RelationshipId(_href_attr);
        
        }
        const ST_RelationshipId& href_attr(){

            if (m_href_attr)
            {
                return *m_href_attr;
            }
            return ST_RelationshipId::default_instance();
        
        }

    private:
        static CT_ImageData* default_instance_ ;
        bool m_has_id_attr ;
        string m_id_attr ;
        bool m_has_src_attr ;
        string m_src_attr ;
        bool m_has_cropleft_attr ;
        string m_cropleft_attr ;
        bool m_has_croptop_attr ;
        string m_croptop_attr ;
        bool m_has_cropright_attr ;
        string m_cropright_attr ;
        bool m_has_cropbottom_attr ;
        string m_cropbottom_attr ;
        bool m_has_gain_attr ;
        string m_gain_attr ;
        bool m_has_blacklevel_attr ;
        string m_blacklevel_attr ;
        bool m_has_gamma_attr ;
        string m_gamma_attr ;
        bool m_has_grayscale_attr ;
        ns_s::ST_TrueFalse* m_grayscale_attr ;
        bool m_has_bilevel_attr ;
        ns_s::ST_TrueFalse* m_bilevel_attr ;
        bool m_has_chromakey_attr ;
        ns_s::ST_ColorType* m_chromakey_attr ;
        bool m_has_embosscolor_attr ;
        ns_s::ST_ColorType* m_embosscolor_attr ;
        bool m_has_recolortarget_attr ;
        ns_s::ST_ColorType* m_recolortarget_attr ;
        bool m_has_href_attr ;
        string m_href_attr ;
        bool m_has_althref_attr ;
        string m_althref_attr ;
        bool m_has_title_attr ;
        string m_title_attr ;
        bool m_has_oleid_attr ;
        float m_oleid_attr ;
        bool m_has_detectmouseclick_attr ;
        ns_s::ST_TrueFalse* m_detectmouseclick_attr ;
        bool m_has_movie_attr ;
        float m_movie_attr ;
        bool m_has_relid_attr ;
        ns_r::ST_RelationshipId* m_relid_attr ;
        bool m_has_id_attr ;
        ST_RelationshipId* m_id_attr ;
        bool m_has_pict_attr ;
        ST_RelationshipId* m_pict_attr ;
        bool m_has_href_attr ;
        ST_RelationshipId* m_href_attr ;

    }

    class CT_Path : public XSD::ComplexType{
    public:
        void clear(){

                m_has_id_attr = false;
                m_id_attr.clear();
            
                m_has_v_attr = false;
                m_v_attr.clear();
            
                m_has_limo_attr = false;
                m_limo_attr.clear();
            
                m_has_textboxrect_attr = false;
                m_textboxrect_attr.clear();
            
                m_has_fillok_attr = false;
                
        if (m_fillok_attr)
        {
            delete m_fillok_attr;
            m_fillok_attr = NULL;
        }
    
            
                m_has_strokeok_attr = false;
                
        if (m_strokeok_attr)
        {
            delete m_strokeok_attr;
            m_strokeok_attr = NULL;
        }
    
            
                m_has_shadowok_attr = false;
                
        if (m_shadowok_attr)
        {
            delete m_shadowok_attr;
            m_shadowok_attr = NULL;
        }
    
            
                m_has_arrowok_attr = false;
                
        if (m_arrowok_attr)
        {
            delete m_arrowok_attr;
            m_arrowok_attr = NULL;
        }
    
            
                m_has_gradientshapeok_attr = false;
                
        if (m_gradientshapeok_attr)
        {
            delete m_gradientshapeok_attr;
            m_gradientshapeok_attr = NULL;
        }
    
            
                m_has_textpathok_attr = false;
                
        if (m_textpathok_attr)
        {
            delete m_textpathok_attr;
            m_textpathok_attr = NULL;
        }
    
            
                m_has_insetpenok_attr = false;
                
        if (m_insetpenok_attr)
        {
            delete m_insetpenok_attr;
            m_insetpenok_attr = NULL;
        }
    
            
                m_has_connecttype_attr = false;
                
        if (m_connecttype_attr)
        {
            delete m_connecttype_attr;
            m_connecttype_attr = NULL;
        }
    
            
                m_has_connectlocs_attr = false;
                m_connectlocs_attr.clear();
            
                m_has_connectangles_attr = false;
                m_connectangles_attr.clear();
            
                m_has_extrusionok_attr = false;
                
        if (m_extrusionok_attr)
        {
            delete m_extrusionok_attr;
            m_extrusionok_attr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    _outStream << _attrName << \=\\ << m_id_attr << \\\;
_outStream << _attrName << \=\\ << m_v_attr << \\\;
_outStream << _attrName << \=\\ << m_limo_attr << \\\;
_outStream << _attrName << \=\\ << m_textboxrect_attr << \\\;
m_fillok_attr->toXml(_attrName, _outStream);
m_strokeok_attr->toXml(_attrName, _outStream);
m_shadowok_attr->toXml(_attrName, _outStream);
m_arrowok_attr->toXml(_attrName, _outStream);
m_gradientshapeok_attr->toXml(_attrName, _outStream);
m_textpathok_attr->toXml(_attrName, _outStream);
m_insetpenok_attr->toXml(_attrName, _outStream);
m_connecttype_attr->toXml(_attrName, _outStream);
_outStream << _attrName << \=\\ << m_connectlocs_attr << \\\;
_outStream << _attrName << \=\\ << m_connectangles_attr << \\\;
m_extrusionok_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Path& default_instance(){

    if (!CT_Path::default_instance_)
    {
        CT_Path::default_instance_ = new CT_Path();
    }
    return *CT_Path::default_instance_;

        }
        bool has_id_attr(){

            return m_has_id_attr;
        
        }
        void set_id_attr(const string& _id_attr ){

        m_has_id_attr = true;
        m_id_attr = _id_attr;
        
        }
        const string& id_attr(){

            return type: \string\nname: \m_id_attr\n;
        
        }
        bool has_v_attr(){

            return m_has_v_attr;
        
        }
        void set_v_attr(const string& _v_attr ){

        m_has_v_attr = true;
        m_v_attr = _v_attr;
        
        }
        const string& v_attr(){

            return type: \string\nname: \m_v_attr\n;
        
        }
        bool has_limo_attr(){

            return m_has_limo_attr;
        
        }
        void set_limo_attr(const string& _limo_attr ){

        m_has_limo_attr = true;
        m_limo_attr = _limo_attr;
        
        }
        const string& limo_attr(){

            return type: \string\nname: \m_limo_attr\n;
        
        }
        bool has_textboxrect_attr(){

            return m_has_textboxrect_attr;
        
        }
        void set_textboxrect_attr(const string& _textboxrect_attr ){

        m_has_textboxrect_attr = true;
        m_textboxrect_attr = _textboxrect_attr;
        
        }
        const string& textboxrect_attr(){

            return type: \string\nname: \m_textboxrect_attr\n;
        
        }
        bool has_fillok_attr(){

            return m_has_fillok_attr;
        
        }
        void set_fillok_attr(const ns_s::ST_TrueFalse& _fillok_attr ){

            m_has_fillok_attr = true;
            m_fillok_attr = new ns_s::ST_TrueFalse(_fillok_attr);
        
        }
        const ns_s::ST_TrueFalse& fillok_attr(){

            if (m_fillok_attr)
            {
                return *m_fillok_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_strokeok_attr(){

            return m_has_strokeok_attr;
        
        }
        void set_strokeok_attr(const ns_s::ST_TrueFalse& _strokeok_attr ){

            m_has_strokeok_attr = true;
            m_strokeok_attr = new ns_s::ST_TrueFalse(_strokeok_attr);
        
        }
        const ns_s::ST_TrueFalse& strokeok_attr(){

            if (m_strokeok_attr)
            {
                return *m_strokeok_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_shadowok_attr(){

            return m_has_shadowok_attr;
        
        }
        void set_shadowok_attr(const ns_s::ST_TrueFalse& _shadowok_attr ){

            m_has_shadowok_attr = true;
            m_shadowok_attr = new ns_s::ST_TrueFalse(_shadowok_attr);
        
        }
        const ns_s::ST_TrueFalse& shadowok_attr(){

            if (m_shadowok_attr)
            {
                return *m_shadowok_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_arrowok_attr(){

            return m_has_arrowok_attr;
        
        }
        void set_arrowok_attr(const ns_s::ST_TrueFalse& _arrowok_attr ){

            m_has_arrowok_attr = true;
            m_arrowok_attr = new ns_s::ST_TrueFalse(_arrowok_attr);
        
        }
        const ns_s::ST_TrueFalse& arrowok_attr(){

            if (m_arrowok_attr)
            {
                return *m_arrowok_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_gradientshapeok_attr(){

            return m_has_gradientshapeok_attr;
        
        }
        void set_gradientshapeok_attr(const ns_s::ST_TrueFalse& _gradientshapeok_attr ){

            m_has_gradientshapeok_attr = true;
            m_gradientshapeok_attr = new ns_s::ST_TrueFalse(_gradientshapeok_attr);
        
        }
        const ns_s::ST_TrueFalse& gradientshapeok_attr(){

            if (m_gradientshapeok_attr)
            {
                return *m_gradientshapeok_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_textpathok_attr(){

            return m_has_textpathok_attr;
        
        }
        void set_textpathok_attr(const ns_s::ST_TrueFalse& _textpathok_attr ){

            m_has_textpathok_attr = true;
            m_textpathok_attr = new ns_s::ST_TrueFalse(_textpathok_attr);
        
        }
        const ns_s::ST_TrueFalse& textpathok_attr(){

            if (m_textpathok_attr)
            {
                return *m_textpathok_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_insetpenok_attr(){

            return m_has_insetpenok_attr;
        
        }
        void set_insetpenok_attr(const ns_s::ST_TrueFalse& _insetpenok_attr ){

            m_has_insetpenok_attr = true;
            m_insetpenok_attr = new ns_s::ST_TrueFalse(_insetpenok_attr);
        
        }
        const ns_s::ST_TrueFalse& insetpenok_attr(){

            if (m_insetpenok_attr)
            {
                return *m_insetpenok_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_connecttype_attr(){

            return m_has_connecttype_attr;
        
        }
        void set_connecttype_attr(const ST_ConnectType& _connecttype_attr ){

            m_has_connecttype_attr = true;
            m_connecttype_attr = new ST_ConnectType(_connecttype_attr);
        
        }
        const ST_ConnectType& connecttype_attr(){

            if (m_connecttype_attr)
            {
                return *m_connecttype_attr;
            }
            return ST_ConnectType::default_instance();
        
        }
        bool has_connectlocs_attr(){

            return m_has_connectlocs_attr;
        
        }
        void set_connectlocs_attr(const string& _connectlocs_attr ){

        m_has_connectlocs_attr = true;
        m_connectlocs_attr = _connectlocs_attr;
        
        }
        const string& connectlocs_attr(){

            return type: \string\nname: \m_connectlocs_attr\n;
        
        }
        bool has_connectangles_attr(){

            return m_has_connectangles_attr;
        
        }
        void set_connectangles_attr(const string& _connectangles_attr ){

        m_has_connectangles_attr = true;
        m_connectangles_attr = _connectangles_attr;
        
        }
        const string& connectangles_attr(){

            return type: \string\nname: \m_connectangles_attr\n;
        
        }
        bool has_extrusionok_attr(){

            return m_has_extrusionok_attr;
        
        }
        void set_extrusionok_attr(const ns_s::ST_TrueFalse& _extrusionok_attr ){

            m_has_extrusionok_attr = true;
            m_extrusionok_attr = new ns_s::ST_TrueFalse(_extrusionok_attr);
        
        }
        const ns_s::ST_TrueFalse& extrusionok_attr(){

            if (m_extrusionok_attr)
            {
                return *m_extrusionok_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }

    private:
        static CT_Path* default_instance_ ;
        bool m_has_id_attr ;
        string m_id_attr ;
        bool m_has_v_attr ;
        string m_v_attr ;
        bool m_has_limo_attr ;
        string m_limo_attr ;
        bool m_has_textboxrect_attr ;
        string m_textboxrect_attr ;
        bool m_has_fillok_attr ;
        ns_s::ST_TrueFalse* m_fillok_attr ;
        bool m_has_strokeok_attr ;
        ns_s::ST_TrueFalse* m_strokeok_attr ;
        bool m_has_shadowok_attr ;
        ns_s::ST_TrueFalse* m_shadowok_attr ;
        bool m_has_arrowok_attr ;
        ns_s::ST_TrueFalse* m_arrowok_attr ;
        bool m_has_gradientshapeok_attr ;
        ns_s::ST_TrueFalse* m_gradientshapeok_attr ;
        bool m_has_textpathok_attr ;
        ns_s::ST_TrueFalse* m_textpathok_attr ;
        bool m_has_insetpenok_attr ;
        ns_s::ST_TrueFalse* m_insetpenok_attr ;
        bool m_has_connecttype_attr ;
        ST_ConnectType* m_connecttype_attr ;
        bool m_has_connectlocs_attr ;
        string m_connectlocs_attr ;
        bool m_has_connectangles_attr ;
        string m_connectangles_attr ;
        bool m_has_extrusionok_attr ;
        ns_s::ST_TrueFalse* m_extrusionok_attr ;

    }

    class CT_Shadow : public XSD::ComplexType{
    public:
        void clear(){

                m_has_id_attr = false;
                m_id_attr.clear();
            
                m_has_on_attr = false;
                
        if (m_on_attr)
        {
            delete m_on_attr;
            m_on_attr = NULL;
        }
    
            
                m_has_type_attr = false;
                
        if (m_type_attr)
        {
            delete m_type_attr;
            m_type_attr = NULL;
        }
    
            
                m_has_obscured_attr = false;
                
        if (m_obscured_attr)
        {
            delete m_obscured_attr;
            m_obscured_attr = NULL;
        }
    
            
                m_has_color_attr = false;
                
        if (m_color_attr)
        {
            delete m_color_attr;
            m_color_attr = NULL;
        }
    
            
                m_has_opacity_attr = false;
                m_opacity_attr.clear();
            
                m_has_offset_attr = false;
                m_offset_attr.clear();
            
                m_has_color2_attr = false;
                
        if (m_color2_attr)
        {
            delete m_color2_attr;
            m_color2_attr = NULL;
        }
    
            
                m_has_offset2_attr = false;
                m_offset2_attr.clear();
            
                m_has_origin_attr = false;
                m_origin_attr.clear();
            
                m_has_matrix_attr = false;
                m_matrix_attr.clear();
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    _outStream << _attrName << \=\\ << m_id_attr << \\\;
m_on_attr->toXml(_attrName, _outStream);
m_type_attr->toXml(_attrName, _outStream);
m_obscured_attr->toXml(_attrName, _outStream);
m_color_attr->toXml(_attrName, _outStream);
_outStream << _attrName << \=\\ << m_opacity_attr << \\\;
_outStream << _attrName << \=\\ << m_offset_attr << \\\;
m_color2_attr->toXml(_attrName, _outStream);
_outStream << _attrName << \=\\ << m_offset2_attr << \\\;
_outStream << _attrName << \=\\ << m_origin_attr << \\\;
_outStream << _attrName << \=\\ << m_matrix_attr << \\\;
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Shadow& default_instance(){

    if (!CT_Shadow::default_instance_)
    {
        CT_Shadow::default_instance_ = new CT_Shadow();
    }
    return *CT_Shadow::default_instance_;

        }
        bool has_id_attr(){

            return m_has_id_attr;
        
        }
        void set_id_attr(const string& _id_attr ){

        m_has_id_attr = true;
        m_id_attr = _id_attr;
        
        }
        const string& id_attr(){

            return type: \string\nname: \m_id_attr\n;
        
        }
        bool has_on_attr(){

            return m_has_on_attr;
        
        }
        void set_on_attr(const ns_s::ST_TrueFalse& _on_attr ){

            m_has_on_attr = true;
            m_on_attr = new ns_s::ST_TrueFalse(_on_attr);
        
        }
        const ns_s::ST_TrueFalse& on_attr(){

            if (m_on_attr)
            {
                return *m_on_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_type_attr(){

            return m_has_type_attr;
        
        }
        void set_type_attr(const ST_ShadowType& _type_attr ){

            m_has_type_attr = true;
            m_type_attr = new ST_ShadowType(_type_attr);
        
        }
        const ST_ShadowType& type_attr(){

            if (m_type_attr)
            {
                return *m_type_attr;
            }
            return ST_ShadowType::default_instance();
        
        }
        bool has_obscured_attr(){

            return m_has_obscured_attr;
        
        }
        void set_obscured_attr(const ns_s::ST_TrueFalse& _obscured_attr ){

            m_has_obscured_attr = true;
            m_obscured_attr = new ns_s::ST_TrueFalse(_obscured_attr);
        
        }
        const ns_s::ST_TrueFalse& obscured_attr(){

            if (m_obscured_attr)
            {
                return *m_obscured_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_color_attr(){

            return m_has_color_attr;
        
        }
        void set_color_attr(const ns_s::ST_ColorType& _color_attr ){

            m_has_color_attr = true;
            m_color_attr = new ns_s::ST_ColorType(_color_attr);
        
        }
        const ns_s::ST_ColorType& color_attr(){

            if (m_color_attr)
            {
                return *m_color_attr;
            }
            return ns_s::ST_ColorType::default_instance();
        
        }
        bool has_opacity_attr(){

            return m_has_opacity_attr;
        
        }
        void set_opacity_attr(const string& _opacity_attr ){

        m_has_opacity_attr = true;
        m_opacity_attr = _opacity_attr;
        
        }
        const string& opacity_attr(){

            return type: \string\nname: \m_opacity_attr\n;
        
        }
        bool has_offset_attr(){

            return m_has_offset_attr;
        
        }
        void set_offset_attr(const string& _offset_attr ){

        m_has_offset_attr = true;
        m_offset_attr = _offset_attr;
        
        }
        const string& offset_attr(){

            return type: \string\nname: \m_offset_attr\n;
        
        }
        bool has_color2_attr(){

            return m_has_color2_attr;
        
        }
        void set_color2_attr(const ns_s::ST_ColorType& _color2_attr ){

            m_has_color2_attr = true;
            m_color2_attr = new ns_s::ST_ColorType(_color2_attr);
        
        }
        const ns_s::ST_ColorType& color2_attr(){

            if (m_color2_attr)
            {
                return *m_color2_attr;
            }
            return ns_s::ST_ColorType::default_instance();
        
        }
        bool has_offset2_attr(){

            return m_has_offset2_attr;
        
        }
        void set_offset2_attr(const string& _offset2_attr ){

        m_has_offset2_attr = true;
        m_offset2_attr = _offset2_attr;
        
        }
        const string& offset2_attr(){

            return type: \string\nname: \m_offset2_attr\n;
        
        }
        bool has_origin_attr(){

            return m_has_origin_attr;
        
        }
        void set_origin_attr(const string& _origin_attr ){

        m_has_origin_attr = true;
        m_origin_attr = _origin_attr;
        
        }
        const string& origin_attr(){

            return type: \string\nname: \m_origin_attr\n;
        
        }
        bool has_matrix_attr(){

            return m_has_matrix_attr;
        
        }
        void set_matrix_attr(const string& _matrix_attr ){

        m_has_matrix_attr = true;
        m_matrix_attr = _matrix_attr;
        
        }
        const string& matrix_attr(){

            return type: \string\nname: \m_matrix_attr\n;
        
        }

    private:
        static CT_Shadow* default_instance_ ;
        bool m_has_id_attr ;
        string m_id_attr ;
        bool m_has_on_attr ;
        ns_s::ST_TrueFalse* m_on_attr ;
        bool m_has_type_attr ;
        ST_ShadowType* m_type_attr ;
        bool m_has_obscured_attr ;
        ns_s::ST_TrueFalse* m_obscured_attr ;
        bool m_has_color_attr ;
        ns_s::ST_ColorType* m_color_attr ;
        bool m_has_opacity_attr ;
        string m_opacity_attr ;
        bool m_has_offset_attr ;
        string m_offset_attr ;
        bool m_has_color2_attr ;
        ns_s::ST_ColorType* m_color2_attr ;
        bool m_has_offset2_attr ;
        string m_offset2_attr ;
        bool m_has_origin_attr ;
        string m_origin_attr ;
        bool m_has_matrix_attr ;
        string m_matrix_attr ;

    }

    class CT_Stroke : public XSD::ComplexType{
    public:
        bool has_left(){

            return m_has_left;
        
        }
        CT_StrokeChild* mutable_left(){

                m_has_left = true;
                if (!m_left)
                {
                    m_left = new CT_StrokeChild();
                }
                return m_left;
            
        }
        const CT_StrokeChild& left(){

            if (m_left)
            {
                return *m_left;
            }
            return CT_StrokeChild::default_instance();
        
        }
        bool has_top(){

            return m_has_top;
        
        }
        CT_StrokeChild* mutable_top(){

                m_has_top = true;
                if (!m_top)
                {
                    m_top = new CT_StrokeChild();
                }
                return m_top;
            
        }
        const CT_StrokeChild& top(){

            if (m_top)
            {
                return *m_top;
            }
            return CT_StrokeChild::default_instance();
        
        }
        bool has_right(){

            return m_has_right;
        
        }
        CT_StrokeChild* mutable_right(){

                m_has_right = true;
                if (!m_right)
                {
                    m_right = new CT_StrokeChild();
                }
                return m_right;
            
        }
        const CT_StrokeChild& right(){

            if (m_right)
            {
                return *m_right;
            }
            return CT_StrokeChild::default_instance();
        
        }
        bool has_bottom(){

            return m_has_bottom;
        
        }
        CT_StrokeChild* mutable_bottom(){

                m_has_bottom = true;
                if (!m_bottom)
                {
                    m_bottom = new CT_StrokeChild();
                }
                return m_bottom;
            
        }
        const CT_StrokeChild& bottom(){

            if (m_bottom)
            {
                return *m_bottom;
            }
            return CT_StrokeChild::default_instance();
        
        }
        bool has_column(){

            return m_has_column;
        
        }
        CT_StrokeChild* mutable_column(){

                m_has_column = true;
                if (!m_column)
                {
                    m_column = new CT_StrokeChild();
                }
                return m_column;
            
        }
        const CT_StrokeChild& column(){

            if (m_column)
            {
                return *m_column;
            }
            return CT_StrokeChild::default_instance();
        
        }
        void clear(){

                m_has_id_attr = false;
                m_id_attr.clear();
            
                m_has_on_attr = false;
                
        if (m_on_attr)
        {
            delete m_on_attr;
            m_on_attr = NULL;
        }
    
            
                m_has_weight_attr = false;
                m_weight_attr.clear();
            
                m_has_color_attr = false;
                
        if (m_color_attr)
        {
            delete m_color_attr;
            m_color_attr = NULL;
        }
    
            
                m_has_opacity_attr = false;
                m_opacity_attr.clear();
            
                m_has_linestyle_attr = false;
                
        if (m_linestyle_attr)
        {
            delete m_linestyle_attr;
            m_linestyle_attr = NULL;
        }
    
            
                m_has_miterlimit_attr = false;
                m_miterlimit_attr = 0;
            
                m_has_joinstyle_attr = false;
                
        if (m_joinstyle_attr)
        {
            delete m_joinstyle_attr;
            m_joinstyle_attr = NULL;
        }
    
            
                m_has_endcap_attr = false;
                
        if (m_endcap_attr)
        {
            delete m_endcap_attr;
            m_endcap_attr = NULL;
        }
    
            
                m_has_dashstyle_attr = false;
                m_dashstyle_attr.clear();
            
                m_has_filltype_attr = false;
                
        if (m_filltype_attr)
        {
            delete m_filltype_attr;
            m_filltype_attr = NULL;
        }
    
            
                m_has_src_attr = false;
                m_src_attr.clear();
            
                m_has_imageaspect_attr = false;
                
        if (m_imageaspect_attr)
        {
            delete m_imageaspect_attr;
            m_imageaspect_attr = NULL;
        }
    
            
                m_has_imagesize_attr = false;
                m_imagesize_attr.clear();
            
                m_has_imagealignshape_attr = false;
                
        if (m_imagealignshape_attr)
        {
            delete m_imagealignshape_attr;
            m_imagealignshape_attr = NULL;
        }
    
            
                m_has_color2_attr = false;
                
        if (m_color2_attr)
        {
            delete m_color2_attr;
            m_color2_attr = NULL;
        }
    
            
                m_has_startarrow_attr = false;
                
        if (m_startarrow_attr)
        {
            delete m_startarrow_attr;
            m_startarrow_attr = NULL;
        }
    
            
                m_has_startarrowwidth_attr = false;
                
        if (m_startarrowwidth_attr)
        {
            delete m_startarrowwidth_attr;
            m_startarrowwidth_attr = NULL;
        }
    
            
                m_has_startarrowlength_attr = false;
                
        if (m_startarrowlength_attr)
        {
            delete m_startarrowlength_attr;
            m_startarrowlength_attr = NULL;
        }
    
            
                m_has_endarrow_attr = false;
                
        if (m_endarrow_attr)
        {
            delete m_endarrow_attr;
            m_endarrow_attr = NULL;
        }
    
            
                m_has_endarrowwidth_attr = false;
                
        if (m_endarrowwidth_attr)
        {
            delete m_endarrowwidth_attr;
            m_endarrowwidth_attr = NULL;
        }
    
            
                m_has_endarrowlength_attr = false;
                
        if (m_endarrowlength_attr)
        {
            delete m_endarrowlength_attr;
            m_endarrowlength_attr = NULL;
        }
    
            
                m_has_href_attr = false;
                m_href_attr.clear();
            
                m_has_althref_attr = false;
                m_althref_attr.clear();
            
                m_has_title_attr = false;
                m_title_attr.clear();
            
                m_has_forcedash_attr = false;
                
        if (m_forcedash_attr)
        {
            delete m_forcedash_attr;
            m_forcedash_attr = NULL;
        }
    
            
                m_has_id_attr = false;
                
        if (m_id_attr)
        {
            delete m_id_attr;
            m_id_attr = NULL;
        }
    
            
                m_has_insetpen_attr = false;
                
        if (m_insetpen_attr)
        {
            delete m_insetpen_attr;
            m_insetpen_attr = NULL;
        }
    
            
                m_has_relid_attr = false;
                
        if (m_relid_attr)
        {
            delete m_relid_attr;
            m_relid_attr = NULL;
        }
    
            
                m_has_left = false;
                
        if (m_left)
        {
            delete m_left;
            m_left = NULL;
        }
    
            
                m_has_top = false;
                
        if (m_top)
        {
            delete m_top;
            m_top = NULL;
        }
    
            
                m_has_right = false;
                
        if (m_right)
        {
            delete m_right;
            m_right = NULL;
        }
    
            
                m_has_bottom = false;
                
        if (m_bottom)
        {
            delete m_bottom;
            m_bottom = NULL;
        }
    
            
                m_has_column = false;
                
        if (m_column)
        {
            delete m_column;
            m_column = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    _outStream << _attrName << \=\\ << m_id_attr << \\\;
m_on_attr->toXml(_attrName, _outStream);
_outStream << _attrName << \=\\ << m_weight_attr << \\\;
m_color_attr->toXml(_attrName, _outStream);
_outStream << _attrName << \=\\ << m_opacity_attr << \\\;
m_linestyle_attr->toXml(_attrName, _outStream);
_outStream << _attrName << \=\\ << m_miterlimit_attr << \\\;
m_joinstyle_attr->toXml(_attrName, _outStream);
m_endcap_attr->toXml(_attrName, _outStream);
_outStream << _attrName << \=\\ << m_dashstyle_attr << \\\;
m_filltype_attr->toXml(_attrName, _outStream);
_outStream << _attrName << \=\\ << m_src_attr << \\\;
m_imageaspect_attr->toXml(_attrName, _outStream);
_outStream << _attrName << \=\\ << m_imagesize_attr << \\\;
m_imagealignshape_attr->toXml(_attrName, _outStream);
m_color2_attr->toXml(_attrName, _outStream);
m_startarrow_attr->toXml(_attrName, _outStream);
m_startarrowwidth_attr->toXml(_attrName, _outStream);
m_startarrowlength_attr->toXml(_attrName, _outStream);
m_endarrow_attr->toXml(_attrName, _outStream);
m_endarrowwidth_attr->toXml(_attrName, _outStream);
m_endarrowlength_attr->toXml(_attrName, _outStream);
_outStream << _attrName << \=\\ << m_href_attr << \\\;
_outStream << _attrName << \=\\ << m_althref_attr << \\\;
_outStream << _attrName << \=\\ << m_title_attr << \\\;
m_forcedash_attr->toXml(_attrName, _outStream);
m_id_attr->toXml(_attrName, _outStream);
m_insetpen_attr->toXml(_attrName, _outStream);
m_relid_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
                if (m_has_left)
                {
                    m_left->toXml(left, _outStream);;
                }
            
                if (m_has_top)
                {
                    m_left->toXml(top, _outStream);;
                }
            
                if (m_has_right)
                {
                    m_left->toXml(right, _outStream);;
                }
            
                if (m_has_bottom)
                {
                    m_left->toXml(bottom, _outStream);;
                }
            
                if (m_has_column)
                {
                    m_left->toXml(column, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Stroke& default_instance(){

    if (!CT_Stroke::default_instance_)
    {
        CT_Stroke::default_instance_ = new CT_Stroke();
    }
    return *CT_Stroke::default_instance_;

        }
        bool has_id_attr(){

            return m_has_id_attr;
        
        }
        void set_id_attr(const string& _id_attr ){

        m_has_id_attr = true;
        m_id_attr = _id_attr;
        
        }
        const string& id_attr(){

            return type: \string\nname: \m_id_attr\n;
        
        }
        bool has_on_attr(){

            return m_has_on_attr;
        
        }
        void set_on_attr(const ns_s::ST_TrueFalse& _on_attr ){

            m_has_on_attr = true;
            m_on_attr = new ns_s::ST_TrueFalse(_on_attr);
        
        }
        const ns_s::ST_TrueFalse& on_attr(){

            if (m_on_attr)
            {
                return *m_on_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_weight_attr(){

            return m_has_weight_attr;
        
        }
        void set_weight_attr(const string& _weight_attr ){

        m_has_weight_attr = true;
        m_weight_attr = _weight_attr;
        
        }
        const string& weight_attr(){

            return type: \string\nname: \m_weight_attr\n;
        
        }
        bool has_color_attr(){

            return m_has_color_attr;
        
        }
        void set_color_attr(const ns_s::ST_ColorType& _color_attr ){

            m_has_color_attr = true;
            m_color_attr = new ns_s::ST_ColorType(_color_attr);
        
        }
        const ns_s::ST_ColorType& color_attr(){

            if (m_color_attr)
            {
                return *m_color_attr;
            }
            return ns_s::ST_ColorType::default_instance();
        
        }
        bool has_opacity_attr(){

            return m_has_opacity_attr;
        
        }
        void set_opacity_attr(const string& _opacity_attr ){

        m_has_opacity_attr = true;
        m_opacity_attr = _opacity_attr;
        
        }
        const string& opacity_attr(){

            return type: \string\nname: \m_opacity_attr\n;
        
        }
        bool has_linestyle_attr(){

            return m_has_linestyle_attr;
        
        }
        void set_linestyle_attr(const ST_StrokeLineStyle& _linestyle_attr ){

            m_has_linestyle_attr = true;
            m_linestyle_attr = new ST_StrokeLineStyle(_linestyle_attr);
        
        }
        const ST_StrokeLineStyle& linestyle_attr(){

            if (m_linestyle_attr)
            {
                return *m_linestyle_attr;
            }
            return ST_StrokeLineStyle::default_instance();
        
        }
        bool has_miterlimit_attr(){

            return m_has_miterlimit_attr;
        
        }
        void set_miterlimit_attr(const decimal& _miterlimit_attr ){

        m_has_miterlimit_attr = true;
        m_miterlimit_attr = _miterlimit_attr;
        
        }
        const decimal& miterlimit_attr(){

            return type: \decimal\nname: \m_miterlimit_attr\n;
        
        }
        bool has_joinstyle_attr(){

            return m_has_joinstyle_attr;
        
        }
        void set_joinstyle_attr(const ST_StrokeJoinStyle& _joinstyle_attr ){

            m_has_joinstyle_attr = true;
            m_joinstyle_attr = new ST_StrokeJoinStyle(_joinstyle_attr);
        
        }
        const ST_StrokeJoinStyle& joinstyle_attr(){

            if (m_joinstyle_attr)
            {
                return *m_joinstyle_attr;
            }
            return ST_StrokeJoinStyle::default_instance();
        
        }
        bool has_endcap_attr(){

            return m_has_endcap_attr;
        
        }
        void set_endcap_attr(const ST_StrokeEndCap& _endcap_attr ){

            m_has_endcap_attr = true;
            m_endcap_attr = new ST_StrokeEndCap(_endcap_attr);
        
        }
        const ST_StrokeEndCap& endcap_attr(){

            if (m_endcap_attr)
            {
                return *m_endcap_attr;
            }
            return ST_StrokeEndCap::default_instance();
        
        }
        bool has_dashstyle_attr(){

            return m_has_dashstyle_attr;
        
        }
        void set_dashstyle_attr(const string& _dashstyle_attr ){

        m_has_dashstyle_attr = true;
        m_dashstyle_attr = _dashstyle_attr;
        
        }
        const string& dashstyle_attr(){

            return type: \string\nname: \m_dashstyle_attr\n;
        
        }
        bool has_filltype_attr(){

            return m_has_filltype_attr;
        
        }
        void set_filltype_attr(const ST_FillType& _filltype_attr ){

            m_has_filltype_attr = true;
            m_filltype_attr = new ST_FillType(_filltype_attr);
        
        }
        const ST_FillType& filltype_attr(){

            if (m_filltype_attr)
            {
                return *m_filltype_attr;
            }
            return ST_FillType::default_instance();
        
        }
        bool has_src_attr(){

            return m_has_src_attr;
        
        }
        void set_src_attr(const string& _src_attr ){

        m_has_src_attr = true;
        m_src_attr = _src_attr;
        
        }
        const string& src_attr(){

            return type: \string\nname: \m_src_attr\n;
        
        }
        bool has_imageaspect_attr(){

            return m_has_imageaspect_attr;
        
        }
        void set_imageaspect_attr(const ST_ImageAspect& _imageaspect_attr ){

            m_has_imageaspect_attr = true;
            m_imageaspect_attr = new ST_ImageAspect(_imageaspect_attr);
        
        }
        const ST_ImageAspect& imageaspect_attr(){

            if (m_imageaspect_attr)
            {
                return *m_imageaspect_attr;
            }
            return ST_ImageAspect::default_instance();
        
        }
        bool has_imagesize_attr(){

            return m_has_imagesize_attr;
        
        }
        void set_imagesize_attr(const string& _imagesize_attr ){

        m_has_imagesize_attr = true;
        m_imagesize_attr = _imagesize_attr;
        
        }
        const string& imagesize_attr(){

            return type: \string\nname: \m_imagesize_attr\n;
        
        }
        bool has_imagealignshape_attr(){

            return m_has_imagealignshape_attr;
        
        }
        void set_imagealignshape_attr(const ns_s::ST_TrueFalse& _imagealignshape_attr ){

            m_has_imagealignshape_attr = true;
            m_imagealignshape_attr = new ns_s::ST_TrueFalse(_imagealignshape_attr);
        
        }
        const ns_s::ST_TrueFalse& imagealignshape_attr(){

            if (m_imagealignshape_attr)
            {
                return *m_imagealignshape_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_color2_attr(){

            return m_has_color2_attr;
        
        }
        void set_color2_attr(const ns_s::ST_ColorType& _color2_attr ){

            m_has_color2_attr = true;
            m_color2_attr = new ns_s::ST_ColorType(_color2_attr);
        
        }
        const ns_s::ST_ColorType& color2_attr(){

            if (m_color2_attr)
            {
                return *m_color2_attr;
            }
            return ns_s::ST_ColorType::default_instance();
        
        }
        bool has_startarrow_attr(){

            return m_has_startarrow_attr;
        
        }
        void set_startarrow_attr(const ST_StrokeArrowType& _startarrow_attr ){

            m_has_startarrow_attr = true;
            m_startarrow_attr = new ST_StrokeArrowType(_startarrow_attr);
        
        }
        const ST_StrokeArrowType& startarrow_attr(){

            if (m_startarrow_attr)
            {
                return *m_startarrow_attr;
            }
            return ST_StrokeArrowType::default_instance();
        
        }
        bool has_startarrowwidth_attr(){

            return m_has_startarrowwidth_attr;
        
        }
        void set_startarrowwidth_attr(const ST_StrokeArrowWidth& _startarrowwidth_attr ){

            m_has_startarrowwidth_attr = true;
            m_startarrowwidth_attr = new ST_StrokeArrowWidth(_startarrowwidth_attr);
        
        }
        const ST_StrokeArrowWidth& startarrowwidth_attr(){

            if (m_startarrowwidth_attr)
            {
                return *m_startarrowwidth_attr;
            }
            return ST_StrokeArrowWidth::default_instance();
        
        }
        bool has_startarrowlength_attr(){

            return m_has_startarrowlength_attr;
        
        }
        void set_startarrowlength_attr(const ST_StrokeArrowLength& _startarrowlength_attr ){

            m_has_startarrowlength_attr = true;
            m_startarrowlength_attr = new ST_StrokeArrowLength(_startarrowlength_attr);
        
        }
        const ST_StrokeArrowLength& startarrowlength_attr(){

            if (m_startarrowlength_attr)
            {
                return *m_startarrowlength_attr;
            }
            return ST_StrokeArrowLength::default_instance();
        
        }
        bool has_endarrow_attr(){

            return m_has_endarrow_attr;
        
        }
        void set_endarrow_attr(const ST_StrokeArrowType& _endarrow_attr ){

            m_has_endarrow_attr = true;
            m_endarrow_attr = new ST_StrokeArrowType(_endarrow_attr);
        
        }
        const ST_StrokeArrowType& endarrow_attr(){

            if (m_endarrow_attr)
            {
                return *m_endarrow_attr;
            }
            return ST_StrokeArrowType::default_instance();
        
        }
        bool has_endarrowwidth_attr(){

            return m_has_endarrowwidth_attr;
        
        }
        void set_endarrowwidth_attr(const ST_StrokeArrowWidth& _endarrowwidth_attr ){

            m_has_endarrowwidth_attr = true;
            m_endarrowwidth_attr = new ST_StrokeArrowWidth(_endarrowwidth_attr);
        
        }
        const ST_StrokeArrowWidth& endarrowwidth_attr(){

            if (m_endarrowwidth_attr)
            {
                return *m_endarrowwidth_attr;
            }
            return ST_StrokeArrowWidth::default_instance();
        
        }
        bool has_endarrowlength_attr(){

            return m_has_endarrowlength_attr;
        
        }
        void set_endarrowlength_attr(const ST_StrokeArrowLength& _endarrowlength_attr ){

            m_has_endarrowlength_attr = true;
            m_endarrowlength_attr = new ST_StrokeArrowLength(_endarrowlength_attr);
        
        }
        const ST_StrokeArrowLength& endarrowlength_attr(){

            if (m_endarrowlength_attr)
            {
                return *m_endarrowlength_attr;
            }
            return ST_StrokeArrowLength::default_instance();
        
        }
        bool has_href_attr(){

            return m_has_href_attr;
        
        }
        void set_href_attr(const string& _href_attr ){

        m_has_href_attr = true;
        m_href_attr = _href_attr;
        
        }
        const string& href_attr(){

            return type: \string\nname: \m_href_attr\n;
        
        }
        bool has_althref_attr(){

            return m_has_althref_attr;
        
        }
        void set_althref_attr(const string& _althref_attr ){

        m_has_althref_attr = true;
        m_althref_attr = _althref_attr;
        
        }
        const string& althref_attr(){

            return type: \string\nname: \m_althref_attr\n;
        
        }
        bool has_title_attr(){

            return m_has_title_attr;
        
        }
        void set_title_attr(const string& _title_attr ){

        m_has_title_attr = true;
        m_title_attr = _title_attr;
        
        }
        const string& title_attr(){

            return type: \string\nname: \m_title_attr\n;
        
        }
        bool has_forcedash_attr(){

            return m_has_forcedash_attr;
        
        }
        void set_forcedash_attr(const ns_s::ST_TrueFalse& _forcedash_attr ){

            m_has_forcedash_attr = true;
            m_forcedash_attr = new ns_s::ST_TrueFalse(_forcedash_attr);
        
        }
        const ns_s::ST_TrueFalse& forcedash_attr(){

            if (m_forcedash_attr)
            {
                return *m_forcedash_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_id_attr(){

            return m_has_id_attr;
        
        }
        void set_id_attr(const ST_RelationshipId& _id_attr ){

            m_has_id_attr = true;
            m_id_attr = new ST_RelationshipId(_id_attr);
        
        }
        const ST_RelationshipId& id_attr(){

            if (m_id_attr)
            {
                return *m_id_attr;
            }
            return ST_RelationshipId::default_instance();
        
        }
        bool has_insetpen_attr(){

            return m_has_insetpen_attr;
        
        }
        void set_insetpen_attr(const ns_s::ST_TrueFalse& _insetpen_attr ){

            m_has_insetpen_attr = true;
            m_insetpen_attr = new ns_s::ST_TrueFalse(_insetpen_attr);
        
        }
        const ns_s::ST_TrueFalse& insetpen_attr(){

            if (m_insetpen_attr)
            {
                return *m_insetpen_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_relid_attr(){

            return m_has_relid_attr;
        
        }
        void set_relid_attr(const ns_r::ST_RelationshipId& _relid_attr ){

            m_has_relid_attr = true;
            m_relid_attr = new ns_r::ST_RelationshipId(_relid_attr);
        
        }
        const ns_r::ST_RelationshipId& relid_attr(){

            if (m_relid_attr)
            {
                return *m_relid_attr;
            }
            return ns_r::ST_RelationshipId::default_instance();
        
        }

    private:
        bool m_has_left ;
        CT_StrokeChild* m_left ;
        bool m_has_top ;
        CT_StrokeChild* m_top ;
        bool m_has_right ;
        CT_StrokeChild* m_right ;
        bool m_has_bottom ;
        CT_StrokeChild* m_bottom ;
        bool m_has_column ;
        CT_StrokeChild* m_column ;
        static CT_Stroke* default_instance_ ;
        bool m_has_id_attr ;
        string m_id_attr ;
        bool m_has_on_attr ;
        ns_s::ST_TrueFalse* m_on_attr ;
        bool m_has_weight_attr ;
        string m_weight_attr ;
        bool m_has_color_attr ;
        ns_s::ST_ColorType* m_color_attr ;
        bool m_has_opacity_attr ;
        string m_opacity_attr ;
        bool m_has_linestyle_attr ;
        ST_StrokeLineStyle* m_linestyle_attr ;
        bool m_has_miterlimit_attr ;
        decimal m_miterlimit_attr ;
        bool m_has_joinstyle_attr ;
        ST_StrokeJoinStyle* m_joinstyle_attr ;
        bool m_has_endcap_attr ;
        ST_StrokeEndCap* m_endcap_attr ;
        bool m_has_dashstyle_attr ;
        string m_dashstyle_attr ;
        bool m_has_filltype_attr ;
        ST_FillType* m_filltype_attr ;
        bool m_has_src_attr ;
        string m_src_attr ;
        bool m_has_imageaspect_attr ;
        ST_ImageAspect* m_imageaspect_attr ;
        bool m_has_imagesize_attr ;
        string m_imagesize_attr ;
        bool m_has_imagealignshape_attr ;
        ns_s::ST_TrueFalse* m_imagealignshape_attr ;
        bool m_has_color2_attr ;
        ns_s::ST_ColorType* m_color2_attr ;
        bool m_has_startarrow_attr ;
        ST_StrokeArrowType* m_startarrow_attr ;
        bool m_has_startarrowwidth_attr ;
        ST_StrokeArrowWidth* m_startarrowwidth_attr ;
        bool m_has_startarrowlength_attr ;
        ST_StrokeArrowLength* m_startarrowlength_attr ;
        bool m_has_endarrow_attr ;
        ST_StrokeArrowType* m_endarrow_attr ;
        bool m_has_endarrowwidth_attr ;
        ST_StrokeArrowWidth* m_endarrowwidth_attr ;
        bool m_has_endarrowlength_attr ;
        ST_StrokeArrowLength* m_endarrowlength_attr ;
        bool m_has_href_attr ;
        string m_href_attr ;
        bool m_has_althref_attr ;
        string m_althref_attr ;
        bool m_has_title_attr ;
        string m_title_attr ;
        bool m_has_forcedash_attr ;
        ns_s::ST_TrueFalse* m_forcedash_attr ;
        bool m_has_id_attr ;
        ST_RelationshipId* m_id_attr ;
        bool m_has_insetpen_attr ;
        ns_s::ST_TrueFalse* m_insetpen_attr ;
        bool m_has_relid_attr ;
        ns_r::ST_RelationshipId* m_relid_attr ;

    }

    class CT_Textbox : public XSD::ComplexType{
    public:
        bool has_txbxContent(){

            return m_has_txbxContent;
        
        }
        CT_TxbxContent* mutable_txbxContent(){

                
                m_has_txbxContent = true;
                if (!m_txbxContent)
                {
                    m_txbxContent = new CT_TxbxContent();
                }
                return m_txbxContent;
            
        }
        const CT_TxbxContent& txbxContent(){

            if (m_txbxContent)
            {
                return *m_txbxContent;
            }
            return CT_TxbxContent::default_instance();
        
        }
        void clear(){

                m_has_id_attr = false;
                m_id_attr.clear();
            
                m_has_style_attr = false;
                m_style_attr.clear();
            
                m_has_inset_attr = false;
                m_inset_attr.clear();
            
                m_has_singleclick_attr = false;
                
        if (m_singleclick_attr)
        {
            delete m_singleclick_attr;
            m_singleclick_attr = NULL;
        }
    
            
                m_has_insetmode_attr = false;
                
        if (m_insetmode_attr)
        {
            delete m_insetmode_attr;
            m_insetmode_attr = NULL;
        }
    
            
                m_has_txbxContent = false;
                
        if (m_txbxContent)
        {
            delete m_txbxContent;
            m_txbxContent = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    _outStream << _attrName << \=\\ << m_id_attr << \\\;
_outStream << _attrName << \=\\ << m_style_attr << \\\;
_outStream << _attrName << \=\\ << m_inset_attr << \\\;
m_singleclick_attr->toXml(_attrName, _outStream);
m_insetmode_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
                if (m_has_txbxContent)
                {
                    m_txbxContent->toXml(txbxContent, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Textbox& default_instance(){

    if (!CT_Textbox::default_instance_)
    {
        CT_Textbox::default_instance_ = new CT_Textbox();
    }
    return *CT_Textbox::default_instance_;

        }
        bool has_id_attr(){

            return m_has_id_attr;
        
        }
        void set_id_attr(const string& _id_attr ){

        m_has_id_attr = true;
        m_id_attr = _id_attr;
        
        }
        const string& id_attr(){

            return type: \string\nname: \m_id_attr\n;
        
        }
        bool has_style_attr(){

            return m_has_style_attr;
        
        }
        void set_style_attr(const string& _style_attr ){

        m_has_style_attr = true;
        m_style_attr = _style_attr;
        
        }
        const string& style_attr(){

            return type: \string\nname: \m_style_attr\n;
        
        }
        bool has_inset_attr(){

            return m_has_inset_attr;
        
        }
        void set_inset_attr(const string& _inset_attr ){

        m_has_inset_attr = true;
        m_inset_attr = _inset_attr;
        
        }
        const string& inset_attr(){

            return type: \string\nname: \m_inset_attr\n;
        
        }
        bool has_singleclick_attr(){

            return m_has_singleclick_attr;
        
        }
        void set_singleclick_attr(const ns_s::ST_TrueFalse& _singleclick_attr ){

            m_has_singleclick_attr = true;
            m_singleclick_attr = new ns_s::ST_TrueFalse(_singleclick_attr);
        
        }
        const ns_s::ST_TrueFalse& singleclick_attr(){

            if (m_singleclick_attr)
            {
                return *m_singleclick_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_insetmode_attr(){

            return m_has_insetmode_attr;
        
        }
        void set_insetmode_attr(const ST_InsetMode& _insetmode_attr ){

            m_has_insetmode_attr = true;
            m_insetmode_attr = new ST_InsetMode(_insetmode_attr);
        
        }
        const ST_InsetMode& insetmode_attr(){

            if (m_insetmode_attr)
            {
                return *m_insetmode_attr;
            }
            return ST_InsetMode::default_instance();
        
        }

    private:
        bool m_has_txbxContent ;
        CT_TxbxContent* m_txbxContent ;
        static CT_Textbox* default_instance_ ;
        bool m_has_id_attr ;
        string m_id_attr ;
        bool m_has_style_attr ;
        string m_style_attr ;
        bool m_has_inset_attr ;
        string m_inset_attr ;
        bool m_has_singleclick_attr ;
        ns_s::ST_TrueFalse* m_singleclick_attr ;
        bool m_has_insetmode_attr ;
        ST_InsetMode* m_insetmode_attr ;

    }

    class CT_TextPath : public XSD::ComplexType{
    public:
        void clear(){

                m_has_id_attr = false;
                m_id_attr.clear();
            
                m_has_style_attr = false;
                m_style_attr.clear();
            
                m_has_on_attr = false;
                
        if (m_on_attr)
        {
            delete m_on_attr;
            m_on_attr = NULL;
        }
    
            
                m_has_fitshape_attr = false;
                
        if (m_fitshape_attr)
        {
            delete m_fitshape_attr;
            m_fitshape_attr = NULL;
        }
    
            
                m_has_fitpath_attr = false;
                
        if (m_fitpath_attr)
        {
            delete m_fitpath_attr;
            m_fitpath_attr = NULL;
        }
    
            
                m_has_trim_attr = false;
                
        if (m_trim_attr)
        {
            delete m_trim_attr;
            m_trim_attr = NULL;
        }
    
            
                m_has_xscale_attr = false;
                
        if (m_xscale_attr)
        {
            delete m_xscale_attr;
            m_xscale_attr = NULL;
        }
    
            
                m_has_string_attr = false;
                m_string_attr.clear();
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    _outStream << _attrName << \=\\ << m_id_attr << \\\;
_outStream << _attrName << \=\\ << m_style_attr << \\\;
m_on_attr->toXml(_attrName, _outStream);
m_fitshape_attr->toXml(_attrName, _outStream);
m_fitpath_attr->toXml(_attrName, _outStream);
m_trim_attr->toXml(_attrName, _outStream);
m_xscale_attr->toXml(_attrName, _outStream);
_outStream << _attrName << \=\\ << m_string_attr << \\\;
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_TextPath& default_instance(){

    if (!CT_TextPath::default_instance_)
    {
        CT_TextPath::default_instance_ = new CT_TextPath();
    }
    return *CT_TextPath::default_instance_;

        }
        bool has_id_attr(){

            return m_has_id_attr;
        
        }
        void set_id_attr(const string& _id_attr ){

        m_has_id_attr = true;
        m_id_attr = _id_attr;
        
        }
        const string& id_attr(){

            return type: \string\nname: \m_id_attr\n;
        
        }
        bool has_style_attr(){

            return m_has_style_attr;
        
        }
        void set_style_attr(const string& _style_attr ){

        m_has_style_attr = true;
        m_style_attr = _style_attr;
        
        }
        const string& style_attr(){

            return type: \string\nname: \m_style_attr\n;
        
        }
        bool has_on_attr(){

            return m_has_on_attr;
        
        }
        void set_on_attr(const ns_s::ST_TrueFalse& _on_attr ){

            m_has_on_attr = true;
            m_on_attr = new ns_s::ST_TrueFalse(_on_attr);
        
        }
        const ns_s::ST_TrueFalse& on_attr(){

            if (m_on_attr)
            {
                return *m_on_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_fitshape_attr(){

            return m_has_fitshape_attr;
        
        }
        void set_fitshape_attr(const ns_s::ST_TrueFalse& _fitshape_attr ){

            m_has_fitshape_attr = true;
            m_fitshape_attr = new ns_s::ST_TrueFalse(_fitshape_attr);
        
        }
        const ns_s::ST_TrueFalse& fitshape_attr(){

            if (m_fitshape_attr)
            {
                return *m_fitshape_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_fitpath_attr(){

            return m_has_fitpath_attr;
        
        }
        void set_fitpath_attr(const ns_s::ST_TrueFalse& _fitpath_attr ){

            m_has_fitpath_attr = true;
            m_fitpath_attr = new ns_s::ST_TrueFalse(_fitpath_attr);
        
        }
        const ns_s::ST_TrueFalse& fitpath_attr(){

            if (m_fitpath_attr)
            {
                return *m_fitpath_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_trim_attr(){

            return m_has_trim_attr;
        
        }
        void set_trim_attr(const ns_s::ST_TrueFalse& _trim_attr ){

            m_has_trim_attr = true;
            m_trim_attr = new ns_s::ST_TrueFalse(_trim_attr);
        
        }
        const ns_s::ST_TrueFalse& trim_attr(){

            if (m_trim_attr)
            {
                return *m_trim_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_xscale_attr(){

            return m_has_xscale_attr;
        
        }
        void set_xscale_attr(const ns_s::ST_TrueFalse& _xscale_attr ){

            m_has_xscale_attr = true;
            m_xscale_attr = new ns_s::ST_TrueFalse(_xscale_attr);
        
        }
        const ns_s::ST_TrueFalse& xscale_attr(){

            if (m_xscale_attr)
            {
                return *m_xscale_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_string_attr(){

            return m_has_string_attr;
        
        }
        void set_string_attr(const string& _string_attr ){

        m_has_string_attr = true;
        m_string_attr = _string_attr;
        
        }
        const string& string_attr(){

            return type: \string\nname: \m_string_attr\n;
        
        }

    private:
        static CT_TextPath* default_instance_ ;
        bool m_has_id_attr ;
        string m_id_attr ;
        bool m_has_style_attr ;
        string m_style_attr ;
        bool m_has_on_attr ;
        ns_s::ST_TrueFalse* m_on_attr ;
        bool m_has_fitshape_attr ;
        ns_s::ST_TrueFalse* m_fitshape_attr ;
        bool m_has_fitpath_attr ;
        ns_s::ST_TrueFalse* m_fitpath_attr ;
        bool m_has_trim_attr ;
        ns_s::ST_TrueFalse* m_trim_attr ;
        bool m_has_xscale_attr ;
        ns_s::ST_TrueFalse* m_xscale_attr ;
        bool m_has_string_attr ;
        string m_string_attr ;

    }

    class CT_Arc : public XSD::ComplexType{
    public:
        CT_Path* add_path(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Path* pNewChild = pChildGroup->mutable_path();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Formulas* add_formulas(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Formulas* pNewChild = pChildGroup->mutable_formulas();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Handles* add_handles(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Handles* pNewChild = pChildGroup->mutable_handles();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Fill* add_fill(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Fill* pNewChild = pChildGroup->mutable_fill();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Stroke* add_stroke(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Stroke* pNewChild = pChildGroup->mutable_stroke();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Shadow* add_shadow(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Shadow* pNewChild = pChildGroup->mutable_shadow();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Textbox* add_textbox(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Textbox* pNewChild = pChildGroup->mutable_textbox();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_TextPath* add_textpath(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_TextPath* pNewChild = pChildGroup->mutable_textpath();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ImageData* add_imagedata(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ImageData* pNewChild = pChildGroup->mutable_imagedata();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Skew* add_skew(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Skew* pNewChild = pChildGroup->mutable_skew();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Extrusion* add_extrusion(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Extrusion* pNewChild = pChildGroup->mutable_extrusion();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Callout* add_callout(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Callout* pNewChild = pChildGroup->mutable_callout();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Lock* add_lock(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Lock* pNewChild = pChildGroup->mutable_lock();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ClipPath* add_clippath(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ClipPath* pNewChild = pChildGroup->mutable_clippath();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SignatureLine* add_signatureline(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SignatureLine* pNewChild = pChildGroup->mutable_signatureline();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Wrap* add_wrap(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Wrap* pNewChild = pChildGroup->mutable_wrap();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_AnchorLock* add_anchorlock(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_AnchorLock* pNewChild = pChildGroup->mutable_anchorlock();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_bordertop(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_bordertop();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderbottom(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderbottom();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderleft(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderleft();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderright(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderright();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ClientData* add_ClientData(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ClientData* pNewChild = pChildGroup->mutable_ClientData();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Rel* add_textdata(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Rel* pNewChild = pChildGroup->mutable_textdata();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        void clear(){

                m_has_startAngle_attr = false;
                m_startAngle_attr = 0;
            
                m_has_endAngle_attr = false;
                m_endAngle_attr = 0;
            
            vector<ChildGroup_1*>::iterator iter;
            for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
            {
                delete *iter;
            }
            m_childGroupList_1.clear();
        
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    _outStream << _attrName << \=\\ << m_startAngle_attr << \\\;
_outStream << _attrName << \=\\ << m_endAngle_attr << \\\;
        _outStream << \>\;
    
        vector<ChildGroup_1*>::const_iterator iter;
        for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
        {
            if ((*iter)->has_path())
            {
                (*iter)->toXml(path, _outStream);
            }
            else if ((*iter)->has_formulas())
            {
                (*iter)->toXml(formulas, _outStream);
            }
            else if ((*iter)->has_handles())
            {
                (*iter)->toXml(handles, _outStream);
            }
            else if ((*iter)->has_fill())
            {
                (*iter)->toXml(fill, _outStream);
            }
            else if ((*iter)->has_stroke())
            {
                (*iter)->toXml(stroke, _outStream);
            }
            else if ((*iter)->has_shadow())
            {
                (*iter)->toXml(shadow, _outStream);
            }
            else if ((*iter)->has_textbox())
            {
                (*iter)->toXml(textbox, _outStream);
            }
            else if ((*iter)->has_textpath())
            {
                (*iter)->toXml(textpath, _outStream);
            }
            else if ((*iter)->has_imagedata())
            {
                (*iter)->toXml(imagedata, _outStream);
            }
            else if ((*iter)->has_skew())
            {
                (*iter)->toXml(skew, _outStream);
            }
            else if ((*iter)->has_extrusion())
            {
                (*iter)->toXml(extrusion, _outStream);
            }
            else if ((*iter)->has_callout())
            {
                (*iter)->toXml(callout, _outStream);
            }
            else if ((*iter)->has_lock())
            {
                (*iter)->toXml(lock, _outStream);
            }
            else if ((*iter)->has_clippath())
            {
                (*iter)->toXml(clippath, _outStream);
            }
            else if ((*iter)->has_signatureline())
            {
                (*iter)->toXml(signatureline, _outStream);
            }
            else if ((*iter)->has_wrap())
            {
                (*iter)->toXml(wrap, _outStream);
            }
            else if ((*iter)->has_anchorlock())
            {
                (*iter)->toXml(anchorlock, _outStream);
            }
            else if ((*iter)->has_bordertop())
            {
                (*iter)->toXml(bordertop, _outStream);
            }
            else if ((*iter)->has_borderbottom())
            {
                (*iter)->toXml(borderbottom, _outStream);
            }
            else if ((*iter)->has_borderleft())
            {
                (*iter)->toXml(borderleft, _outStream);
            }
            else if ((*iter)->has_borderright())
            {
                (*iter)->toXml(borderright, _outStream);
            }
            else if ((*iter)->has_ClientData())
            {
                (*iter)->toXml(ClientData, _outStream);
            }
            else if ((*iter)->has_textdata())
            {
                (*iter)->toXml(textdata, _outStream);
            }
        }
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Arc& default_instance(){

    if (!CT_Arc::default_instance_)
    {
        CT_Arc::default_instance_ = new CT_Arc();
    }
    return *CT_Arc::default_instance_;

        }
        bool has_startAngle_attr(){

            return m_has_startAngle_attr;
        
        }
        void set_startAngle_attr(const decimal& _startAngle_attr ){

        m_has_startAngle_attr = true;
        m_startAngle_attr = _startAngle_attr;
        
        }
        const decimal& startAngle_attr(){

            return type: \decimal\nname: \m_startAngle_attr\n;
        
        }
        bool has_endAngle_attr(){

            return m_has_endAngle_attr;
        
        }
        void set_endAngle_attr(const decimal& _endAngle_attr ){

        m_has_endAngle_attr = true;
        m_endAngle_attr = _endAngle_attr;
        
        }
        const decimal& endAngle_attr(){

            return type: \decimal\nname: \m_endAngle_attr\n;
        
        }

    private:
        vector<ChildGroup_1*> m_childGroupList_1 ;
        static CT_Arc* default_instance_ ;
        bool m_has_startAngle_attr ;
        decimal m_startAngle_attr ;
        bool m_has_endAngle_attr ;
        decimal m_endAngle_attr ;
        class ChildGroup_1{
        public:
            bool has_path(){

            return m_has_path;
        
            }
            CT_Path* mutable_path(){

                
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_path = true;
                if (!m_path)
                {
                    m_path = new CT_Path();
                }
                return m_path;
            
            }
            const CT_Path& path(){

            if (m_path)
            {
                return *m_path;
            }
            return CT_Path::default_instance();
        
            }
            bool has_formulas(){

            return m_has_formulas;
        
            }
            CT_Formulas* mutable_formulas(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_formulas = true;
                if (!m_formulas)
                {
                    m_formulas = new CT_Formulas();
                }
                return m_formulas;
            
            }
            const CT_Formulas& formulas(){

            if (m_formulas)
            {
                return *m_formulas;
            }
            return CT_Formulas::default_instance();
        
            }
            bool has_handles(){

            return m_has_handles;
        
            }
            CT_Handles* mutable_handles(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_handles = true;
                if (!m_handles)
                {
                    m_handles = new CT_Handles();
                }
                return m_handles;
            
            }
            const CT_Handles& handles(){

            if (m_handles)
            {
                return *m_handles;
            }
            return CT_Handles::default_instance();
        
            }
            bool has_fill(){

            return m_has_fill;
        
            }
            CT_Fill* mutable_fill(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_fill = true;
                if (!m_fill)
                {
                    m_fill = new CT_Fill();
                }
                return m_fill;
            
            }
            const CT_Fill& fill(){

            if (m_fill)
            {
                return *m_fill;
            }
            return CT_Fill::default_instance();
        
            }
            bool has_stroke(){

            return m_has_stroke;
        
            }
            CT_Stroke* mutable_stroke(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_stroke = true;
                if (!m_stroke)
                {
                    m_stroke = new CT_Stroke();
                }
                return m_stroke;
            
            }
            const CT_Stroke& stroke(){

            if (m_stroke)
            {
                return *m_stroke;
            }
            return CT_Stroke::default_instance();
        
            }
            bool has_shadow(){

            return m_has_shadow;
        
            }
            CT_Shadow* mutable_shadow(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_shadow = true;
                if (!m_shadow)
                {
                    m_shadow = new CT_Shadow();
                }
                return m_shadow;
            
            }
            const CT_Shadow& shadow(){

            if (m_shadow)
            {
                return *m_shadow;
            }
            return CT_Shadow::default_instance();
        
            }
            bool has_textbox(){

            return m_has_textbox;
        
            }
            CT_Textbox* mutable_textbox(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_textbox = true;
                if (!m_textbox)
                {
                    m_textbox = new CT_Textbox();
                }
                return m_textbox;
            
            }
            const CT_Textbox& textbox(){

            if (m_textbox)
            {
                return *m_textbox;
            }
            return CT_Textbox::default_instance();
        
            }
            bool has_textpath(){

            return m_has_textpath;
        
            }
            CT_TextPath* mutable_textpath(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_textpath = true;
                if (!m_textpath)
                {
                    m_textpath = new CT_TextPath();
                }
                return m_textpath;
            
            }
            const CT_TextPath& textpath(){

            if (m_textpath)
            {
                return *m_textpath;
            }
            return CT_TextPath::default_instance();
        
            }
            bool has_imagedata(){

            return m_has_imagedata;
        
            }
            CT_ImageData* mutable_imagedata(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_imagedata = true;
                if (!m_imagedata)
                {
                    m_imagedata = new CT_ImageData();
                }
                return m_imagedata;
            
            }
            const CT_ImageData& imagedata(){

            if (m_imagedata)
            {
                return *m_imagedata;
            }
            return CT_ImageData::default_instance();
        
            }
            bool has_skew(){

            return m_has_skew;
        
            }
            CT_Skew* mutable_skew(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_skew = true;
                if (!m_skew)
                {
                    m_skew = new CT_Skew();
                }
                return m_skew;
            
            }
            const CT_Skew& skew(){

            if (m_skew)
            {
                return *m_skew;
            }
            return CT_Skew::default_instance();
        
            }
            bool has_extrusion(){

            return m_has_extrusion;
        
            }
            CT_Extrusion* mutable_extrusion(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_extrusion = true;
                if (!m_extrusion)
                {
                    m_extrusion = new CT_Extrusion();
                }
                return m_extrusion;
            
            }
            const CT_Extrusion& extrusion(){

            if (m_extrusion)
            {
                return *m_extrusion;
            }
            return CT_Extrusion::default_instance();
        
            }
            bool has_callout(){

            return m_has_callout;
        
            }
            CT_Callout* mutable_callout(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_callout = true;
                if (!m_callout)
                {
                    m_callout = new CT_Callout();
                }
                return m_callout;
            
            }
            const CT_Callout& callout(){

            if (m_callout)
            {
                return *m_callout;
            }
            return CT_Callout::default_instance();
        
            }
            bool has_lock(){

            return m_has_lock;
        
            }
            CT_Lock* mutable_lock(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_lock = true;
                if (!m_lock)
                {
                    m_lock = new CT_Lock();
                }
                return m_lock;
            
            }
            const CT_Lock& lock(){

            if (m_lock)
            {
                return *m_lock;
            }
            return CT_Lock::default_instance();
        
            }
            bool has_clippath(){

            return m_has_clippath;
        
            }
            CT_ClipPath* mutable_clippath(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_clippath = true;
                if (!m_clippath)
                {
                    m_clippath = new CT_ClipPath();
                }
                return m_clippath;
            
            }
            const CT_ClipPath& clippath(){

            if (m_clippath)
            {
                return *m_clippath;
            }
            return CT_ClipPath::default_instance();
        
            }
            bool has_signatureline(){

            return m_has_signatureline;
        
            }
            CT_SignatureLine* mutable_signatureline(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_signatureline = true;
                if (!m_signatureline)
                {
                    m_signatureline = new CT_SignatureLine();
                }
                return m_signatureline;
            
            }
            const CT_SignatureLine& signatureline(){

            if (m_signatureline)
            {
                return *m_signatureline;
            }
            return CT_SignatureLine::default_instance();
        
            }
            bool has_wrap(){

            return m_has_wrap;
        
            }
            CT_Wrap* mutable_wrap(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_wrap = true;
                if (!m_wrap)
                {
                    m_wrap = new CT_Wrap();
                }
                return m_wrap;
            
            }
            const CT_Wrap& wrap(){

            if (m_wrap)
            {
                return *m_wrap;
            }
            return CT_Wrap::default_instance();
        
            }
            bool has_anchorlock(){

            return m_has_anchorlock;
        
            }
            CT_AnchorLock* mutable_anchorlock(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_anchorlock = true;
                if (!m_anchorlock)
                {
                    m_anchorlock = new CT_AnchorLock();
                }
                return m_anchorlock;
            
            }
            const CT_AnchorLock& anchorlock(){

            if (m_anchorlock)
            {
                return *m_anchorlock;
            }
            return CT_AnchorLock::default_instance();
        
            }
            bool has_bordertop(){

            return m_has_bordertop;
        
            }
            CT_Border* mutable_bordertop(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_bordertop = true;
                if (!m_bordertop)
                {
                    m_bordertop = new CT_Border();
                }
                return m_bordertop;
            
            }
            const CT_Border& bordertop(){

            if (m_bordertop)
            {
                return *m_bordertop;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderbottom(){

            return m_has_borderbottom;
        
            }
            CT_Border* mutable_borderbottom(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_borderbottom = true;
                if (!m_borderbottom)
                {
                    m_borderbottom = new CT_Border();
                }
                return m_borderbottom;
            
            }
            const CT_Border& borderbottom(){

            if (m_borderbottom)
            {
                return *m_borderbottom;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderleft(){

            return m_has_borderleft;
        
            }
            CT_Border* mutable_borderleft(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_borderleft = true;
                if (!m_borderleft)
                {
                    m_borderleft = new CT_Border();
                }
                return m_borderleft;
            
            }
            const CT_Border& borderleft(){

            if (m_borderleft)
            {
                return *m_borderleft;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderright(){

            return m_has_borderright;
        
            }
            CT_Border* mutable_borderright(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_borderright = true;
                if (!m_borderright)
                {
                    m_borderright = new CT_Border();
                }
                return m_borderright;
            
            }
            const CT_Border& borderright(){

            if (m_borderright)
            {
                return *m_borderright;
            }
            return CT_Border::default_instance();
        
            }
            bool has_ClientData(){

            return m_has_ClientData;
        
            }
            CT_ClientData* mutable_ClientData(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ClientData = true;
                if (!m_ClientData)
                {
                    m_ClientData = new CT_ClientData();
                }
                return m_ClientData;
            
            }
            const CT_ClientData& ClientData(){

            if (m_ClientData)
            {
                return *m_ClientData;
            }
            return CT_ClientData::default_instance();
        
            }
            bool has_textdata(){

            return m_has_textdata;
        
            }
            CT_Rel* mutable_textdata(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = true;
                if (!m_textdata)
                {
                    m_textdata = new CT_Rel();
                }
                return m_textdata;
            
            }
            const CT_Rel& textdata(){

            if (m_textdata)
            {
                return *m_textdata;
            }
            return CT_Rel::default_instance();
        
            }

        private:
            bool m_has_path ;
            CT_Path* m_path ;
            bool m_has_formulas ;
            CT_Formulas* m_formulas ;
            bool m_has_handles ;
            CT_Handles* m_handles ;
            bool m_has_fill ;
            CT_Fill* m_fill ;
            bool m_has_stroke ;
            CT_Stroke* m_stroke ;
            bool m_has_shadow ;
            CT_Shadow* m_shadow ;
            bool m_has_textbox ;
            CT_Textbox* m_textbox ;
            bool m_has_textpath ;
            CT_TextPath* m_textpath ;
            bool m_has_imagedata ;
            CT_ImageData* m_imagedata ;
            bool m_has_skew ;
            CT_Skew* m_skew ;
            bool m_has_extrusion ;
            CT_Extrusion* m_extrusion ;
            bool m_has_callout ;
            CT_Callout* m_callout ;
            bool m_has_lock ;
            CT_Lock* m_lock ;
            bool m_has_clippath ;
            CT_ClipPath* m_clippath ;
            bool m_has_signatureline ;
            CT_SignatureLine* m_signatureline ;
            bool m_has_wrap ;
            CT_Wrap* m_wrap ;
            bool m_has_anchorlock ;
            CT_AnchorLock* m_anchorlock ;
            bool m_has_bordertop ;
            CT_Border* m_bordertop ;
            bool m_has_borderbottom ;
            CT_Border* m_borderbottom ;
            bool m_has_borderleft ;
            CT_Border* m_borderleft ;
            bool m_has_borderright ;
            CT_Border* m_borderright ;
            bool m_has_ClientData ;
            CT_ClientData* m_ClientData ;
            bool m_has_textdata ;
            CT_Rel* m_textdata ;

        }


    }

    class CT_Curve : public XSD::ComplexType{
    public:
        CT_Path* add_path(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Path* pNewChild = pChildGroup->mutable_path();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Formulas* add_formulas(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Formulas* pNewChild = pChildGroup->mutable_formulas();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Handles* add_handles(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Handles* pNewChild = pChildGroup->mutable_handles();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Fill* add_fill(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Fill* pNewChild = pChildGroup->mutable_fill();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Stroke* add_stroke(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Stroke* pNewChild = pChildGroup->mutable_stroke();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Shadow* add_shadow(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Shadow* pNewChild = pChildGroup->mutable_shadow();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Textbox* add_textbox(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Textbox* pNewChild = pChildGroup->mutable_textbox();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_TextPath* add_textpath(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_TextPath* pNewChild = pChildGroup->mutable_textpath();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ImageData* add_imagedata(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ImageData* pNewChild = pChildGroup->mutable_imagedata();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Skew* add_skew(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Skew* pNewChild = pChildGroup->mutable_skew();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Extrusion* add_extrusion(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Extrusion* pNewChild = pChildGroup->mutable_extrusion();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Callout* add_callout(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Callout* pNewChild = pChildGroup->mutable_callout();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Lock* add_lock(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Lock* pNewChild = pChildGroup->mutable_lock();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ClipPath* add_clippath(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ClipPath* pNewChild = pChildGroup->mutable_clippath();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SignatureLine* add_signatureline(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SignatureLine* pNewChild = pChildGroup->mutable_signatureline();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Wrap* add_wrap(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Wrap* pNewChild = pChildGroup->mutable_wrap();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_AnchorLock* add_anchorlock(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_AnchorLock* pNewChild = pChildGroup->mutable_anchorlock();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_bordertop(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_bordertop();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderbottom(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderbottom();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderleft(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderleft();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderright(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderright();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ClientData* add_ClientData(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ClientData* pNewChild = pChildGroup->mutable_ClientData();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Rel* add_textdata(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Rel* pNewChild = pChildGroup->mutable_textdata();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        void clear(){

                m_has_from_attr = false;
                m_from_attr.clear();
            
                m_has_control1_attr = false;
                m_control1_attr.clear();
            
                m_has_control2_attr = false;
                m_control2_attr.clear();
            
                m_has_to_attr = false;
                m_to_attr.clear();
            
            vector<ChildGroup_1*>::iterator iter;
            for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
            {
                delete *iter;
            }
            m_childGroupList_1.clear();
        
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    _outStream << _attrName << \=\\ << m_from_attr << \\\;
_outStream << _attrName << \=\\ << m_control1_attr << \\\;
_outStream << _attrName << \=\\ << m_control2_attr << \\\;
_outStream << _attrName << \=\\ << m_to_attr << \\\;
        _outStream << \>\;
    
        vector<ChildGroup_1*>::const_iterator iter;
        for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
        {
            if ((*iter)->has_path())
            {
                (*iter)->toXml(path, _outStream);
            }
            else if ((*iter)->has_formulas())
            {
                (*iter)->toXml(formulas, _outStream);
            }
            else if ((*iter)->has_handles())
            {
                (*iter)->toXml(handles, _outStream);
            }
            else if ((*iter)->has_fill())
            {
                (*iter)->toXml(fill, _outStream);
            }
            else if ((*iter)->has_stroke())
            {
                (*iter)->toXml(stroke, _outStream);
            }
            else if ((*iter)->has_shadow())
            {
                (*iter)->toXml(shadow, _outStream);
            }
            else if ((*iter)->has_textbox())
            {
                (*iter)->toXml(textbox, _outStream);
            }
            else if ((*iter)->has_textpath())
            {
                (*iter)->toXml(textpath, _outStream);
            }
            else if ((*iter)->has_imagedata())
            {
                (*iter)->toXml(imagedata, _outStream);
            }
            else if ((*iter)->has_skew())
            {
                (*iter)->toXml(skew, _outStream);
            }
            else if ((*iter)->has_extrusion())
            {
                (*iter)->toXml(extrusion, _outStream);
            }
            else if ((*iter)->has_callout())
            {
                (*iter)->toXml(callout, _outStream);
            }
            else if ((*iter)->has_lock())
            {
                (*iter)->toXml(lock, _outStream);
            }
            else if ((*iter)->has_clippath())
            {
                (*iter)->toXml(clippath, _outStream);
            }
            else if ((*iter)->has_signatureline())
            {
                (*iter)->toXml(signatureline, _outStream);
            }
            else if ((*iter)->has_wrap())
            {
                (*iter)->toXml(wrap, _outStream);
            }
            else if ((*iter)->has_anchorlock())
            {
                (*iter)->toXml(anchorlock, _outStream);
            }
            else if ((*iter)->has_bordertop())
            {
                (*iter)->toXml(bordertop, _outStream);
            }
            else if ((*iter)->has_borderbottom())
            {
                (*iter)->toXml(borderbottom, _outStream);
            }
            else if ((*iter)->has_borderleft())
            {
                (*iter)->toXml(borderleft, _outStream);
            }
            else if ((*iter)->has_borderright())
            {
                (*iter)->toXml(borderright, _outStream);
            }
            else if ((*iter)->has_ClientData())
            {
                (*iter)->toXml(ClientData, _outStream);
            }
            else if ((*iter)->has_textdata())
            {
                (*iter)->toXml(textdata, _outStream);
            }
        }
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Curve& default_instance(){

    if (!CT_Curve::default_instance_)
    {
        CT_Curve::default_instance_ = new CT_Curve();
    }
    return *CT_Curve::default_instance_;

        }
        bool has_from_attr(){

            return m_has_from_attr;
        
        }
        void set_from_attr(const string& _from_attr ){

        m_has_from_attr = true;
        m_from_attr = _from_attr;
        
        }
        const string& from_attr(){

            return type: \string\nname: \m_from_attr\n;
        
        }
        bool has_control1_attr(){

            return m_has_control1_attr;
        
        }
        void set_control1_attr(const string& _control1_attr ){

        m_has_control1_attr = true;
        m_control1_attr = _control1_attr;
        
        }
        const string& control1_attr(){

            return type: \string\nname: \m_control1_attr\n;
        
        }
        bool has_control2_attr(){

            return m_has_control2_attr;
        
        }
        void set_control2_attr(const string& _control2_attr ){

        m_has_control2_attr = true;
        m_control2_attr = _control2_attr;
        
        }
        const string& control2_attr(){

            return type: \string\nname: \m_control2_attr\n;
        
        }
        bool has_to_attr(){

            return m_has_to_attr;
        
        }
        void set_to_attr(const string& _to_attr ){

        m_has_to_attr = true;
        m_to_attr = _to_attr;
        
        }
        const string& to_attr(){

            return type: \string\nname: \m_to_attr\n;
        
        }

    private:
        vector<ChildGroup_1*> m_childGroupList_1 ;
        static CT_Curve* default_instance_ ;
        bool m_has_from_attr ;
        string m_from_attr ;
        bool m_has_control1_attr ;
        string m_control1_attr ;
        bool m_has_control2_attr ;
        string m_control2_attr ;
        bool m_has_to_attr ;
        string m_to_attr ;
        class ChildGroup_1{
        public:
            bool has_path(){

            return m_has_path;
        
            }
            CT_Path* mutable_path(){

                
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_path = true;
                if (!m_path)
                {
                    m_path = new CT_Path();
                }
                return m_path;
            
            }
            const CT_Path& path(){

            if (m_path)
            {
                return *m_path;
            }
            return CT_Path::default_instance();
        
            }
            bool has_formulas(){

            return m_has_formulas;
        
            }
            CT_Formulas* mutable_formulas(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_formulas = true;
                if (!m_formulas)
                {
                    m_formulas = new CT_Formulas();
                }
                return m_formulas;
            
            }
            const CT_Formulas& formulas(){

            if (m_formulas)
            {
                return *m_formulas;
            }
            return CT_Formulas::default_instance();
        
            }
            bool has_handles(){

            return m_has_handles;
        
            }
            CT_Handles* mutable_handles(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_handles = true;
                if (!m_handles)
                {
                    m_handles = new CT_Handles();
                }
                return m_handles;
            
            }
            const CT_Handles& handles(){

            if (m_handles)
            {
                return *m_handles;
            }
            return CT_Handles::default_instance();
        
            }
            bool has_fill(){

            return m_has_fill;
        
            }
            CT_Fill* mutable_fill(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_fill = true;
                if (!m_fill)
                {
                    m_fill = new CT_Fill();
                }
                return m_fill;
            
            }
            const CT_Fill& fill(){

            if (m_fill)
            {
                return *m_fill;
            }
            return CT_Fill::default_instance();
        
            }
            bool has_stroke(){

            return m_has_stroke;
        
            }
            CT_Stroke* mutable_stroke(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_stroke = true;
                if (!m_stroke)
                {
                    m_stroke = new CT_Stroke();
                }
                return m_stroke;
            
            }
            const CT_Stroke& stroke(){

            if (m_stroke)
            {
                return *m_stroke;
            }
            return CT_Stroke::default_instance();
        
            }
            bool has_shadow(){

            return m_has_shadow;
        
            }
            CT_Shadow* mutable_shadow(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_shadow = true;
                if (!m_shadow)
                {
                    m_shadow = new CT_Shadow();
                }
                return m_shadow;
            
            }
            const CT_Shadow& shadow(){

            if (m_shadow)
            {
                return *m_shadow;
            }
            return CT_Shadow::default_instance();
        
            }
            bool has_textbox(){

            return m_has_textbox;
        
            }
            CT_Textbox* mutable_textbox(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_textbox = true;
                if (!m_textbox)
                {
                    m_textbox = new CT_Textbox();
                }
                return m_textbox;
            
            }
            const CT_Textbox& textbox(){

            if (m_textbox)
            {
                return *m_textbox;
            }
            return CT_Textbox::default_instance();
        
            }
            bool has_textpath(){

            return m_has_textpath;
        
            }
            CT_TextPath* mutable_textpath(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_textpath = true;
                if (!m_textpath)
                {
                    m_textpath = new CT_TextPath();
                }
                return m_textpath;
            
            }
            const CT_TextPath& textpath(){

            if (m_textpath)
            {
                return *m_textpath;
            }
            return CT_TextPath::default_instance();
        
            }
            bool has_imagedata(){

            return m_has_imagedata;
        
            }
            CT_ImageData* mutable_imagedata(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_imagedata = true;
                if (!m_imagedata)
                {
                    m_imagedata = new CT_ImageData();
                }
                return m_imagedata;
            
            }
            const CT_ImageData& imagedata(){

            if (m_imagedata)
            {
                return *m_imagedata;
            }
            return CT_ImageData::default_instance();
        
            }
            bool has_skew(){

            return m_has_skew;
        
            }
            CT_Skew* mutable_skew(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_skew = true;
                if (!m_skew)
                {
                    m_skew = new CT_Skew();
                }
                return m_skew;
            
            }
            const CT_Skew& skew(){

            if (m_skew)
            {
                return *m_skew;
            }
            return CT_Skew::default_instance();
        
            }
            bool has_extrusion(){

            return m_has_extrusion;
        
            }
            CT_Extrusion* mutable_extrusion(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_extrusion = true;
                if (!m_extrusion)
                {
                    m_extrusion = new CT_Extrusion();
                }
                return m_extrusion;
            
            }
            const CT_Extrusion& extrusion(){

            if (m_extrusion)
            {
                return *m_extrusion;
            }
            return CT_Extrusion::default_instance();
        
            }
            bool has_callout(){

            return m_has_callout;
        
            }
            CT_Callout* mutable_callout(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_callout = true;
                if (!m_callout)
                {
                    m_callout = new CT_Callout();
                }
                return m_callout;
            
            }
            const CT_Callout& callout(){

            if (m_callout)
            {
                return *m_callout;
            }
            return CT_Callout::default_instance();
        
            }
            bool has_lock(){

            return m_has_lock;
        
            }
            CT_Lock* mutable_lock(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_lock = true;
                if (!m_lock)
                {
                    m_lock = new CT_Lock();
                }
                return m_lock;
            
            }
            const CT_Lock& lock(){

            if (m_lock)
            {
                return *m_lock;
            }
            return CT_Lock::default_instance();
        
            }
            bool has_clippath(){

            return m_has_clippath;
        
            }
            CT_ClipPath* mutable_clippath(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_clippath = true;
                if (!m_clippath)
                {
                    m_clippath = new CT_ClipPath();
                }
                return m_clippath;
            
            }
            const CT_ClipPath& clippath(){

            if (m_clippath)
            {
                return *m_clippath;
            }
            return CT_ClipPath::default_instance();
        
            }
            bool has_signatureline(){

            return m_has_signatureline;
        
            }
            CT_SignatureLine* mutable_signatureline(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_signatureline = true;
                if (!m_signatureline)
                {
                    m_signatureline = new CT_SignatureLine();
                }
                return m_signatureline;
            
            }
            const CT_SignatureLine& signatureline(){

            if (m_signatureline)
            {
                return *m_signatureline;
            }
            return CT_SignatureLine::default_instance();
        
            }
            bool has_wrap(){

            return m_has_wrap;
        
            }
            CT_Wrap* mutable_wrap(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_wrap = true;
                if (!m_wrap)
                {
                    m_wrap = new CT_Wrap();
                }
                return m_wrap;
            
            }
            const CT_Wrap& wrap(){

            if (m_wrap)
            {
                return *m_wrap;
            }
            return CT_Wrap::default_instance();
        
            }
            bool has_anchorlock(){

            return m_has_anchorlock;
        
            }
            CT_AnchorLock* mutable_anchorlock(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_anchorlock = true;
                if (!m_anchorlock)
                {
                    m_anchorlock = new CT_AnchorLock();
                }
                return m_anchorlock;
            
            }
            const CT_AnchorLock& anchorlock(){

            if (m_anchorlock)
            {
                return *m_anchorlock;
            }
            return CT_AnchorLock::default_instance();
        
            }
            bool has_bordertop(){

            return m_has_bordertop;
        
            }
            CT_Border* mutable_bordertop(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_bordertop = true;
                if (!m_bordertop)
                {
                    m_bordertop = new CT_Border();
                }
                return m_bordertop;
            
            }
            const CT_Border& bordertop(){

            if (m_bordertop)
            {
                return *m_bordertop;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderbottom(){

            return m_has_borderbottom;
        
            }
            CT_Border* mutable_borderbottom(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_borderbottom = true;
                if (!m_borderbottom)
                {
                    m_borderbottom = new CT_Border();
                }
                return m_borderbottom;
            
            }
            const CT_Border& borderbottom(){

            if (m_borderbottom)
            {
                return *m_borderbottom;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderleft(){

            return m_has_borderleft;
        
            }
            CT_Border* mutable_borderleft(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_borderleft = true;
                if (!m_borderleft)
                {
                    m_borderleft = new CT_Border();
                }
                return m_borderleft;
            
            }
            const CT_Border& borderleft(){

            if (m_borderleft)
            {
                return *m_borderleft;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderright(){

            return m_has_borderright;
        
            }
            CT_Border* mutable_borderright(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_borderright = true;
                if (!m_borderright)
                {
                    m_borderright = new CT_Border();
                }
                return m_borderright;
            
            }
            const CT_Border& borderright(){

            if (m_borderright)
            {
                return *m_borderright;
            }
            return CT_Border::default_instance();
        
            }
            bool has_ClientData(){

            return m_has_ClientData;
        
            }
            CT_ClientData* mutable_ClientData(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ClientData = true;
                if (!m_ClientData)
                {
                    m_ClientData = new CT_ClientData();
                }
                return m_ClientData;
            
            }
            const CT_ClientData& ClientData(){

            if (m_ClientData)
            {
                return *m_ClientData;
            }
            return CT_ClientData::default_instance();
        
            }
            bool has_textdata(){

            return m_has_textdata;
        
            }
            CT_Rel* mutable_textdata(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = true;
                if (!m_textdata)
                {
                    m_textdata = new CT_Rel();
                }
                return m_textdata;
            
            }
            const CT_Rel& textdata(){

            if (m_textdata)
            {
                return *m_textdata;
            }
            return CT_Rel::default_instance();
        
            }

        private:
            bool m_has_path ;
            CT_Path* m_path ;
            bool m_has_formulas ;
            CT_Formulas* m_formulas ;
            bool m_has_handles ;
            CT_Handles* m_handles ;
            bool m_has_fill ;
            CT_Fill* m_fill ;
            bool m_has_stroke ;
            CT_Stroke* m_stroke ;
            bool m_has_shadow ;
            CT_Shadow* m_shadow ;
            bool m_has_textbox ;
            CT_Textbox* m_textbox ;
            bool m_has_textpath ;
            CT_TextPath* m_textpath ;
            bool m_has_imagedata ;
            CT_ImageData* m_imagedata ;
            bool m_has_skew ;
            CT_Skew* m_skew ;
            bool m_has_extrusion ;
            CT_Extrusion* m_extrusion ;
            bool m_has_callout ;
            CT_Callout* m_callout ;
            bool m_has_lock ;
            CT_Lock* m_lock ;
            bool m_has_clippath ;
            CT_ClipPath* m_clippath ;
            bool m_has_signatureline ;
            CT_SignatureLine* m_signatureline ;
            bool m_has_wrap ;
            CT_Wrap* m_wrap ;
            bool m_has_anchorlock ;
            CT_AnchorLock* m_anchorlock ;
            bool m_has_bordertop ;
            CT_Border* m_bordertop ;
            bool m_has_borderbottom ;
            CT_Border* m_borderbottom ;
            bool m_has_borderleft ;
            CT_Border* m_borderleft ;
            bool m_has_borderright ;
            CT_Border* m_borderright ;
            bool m_has_ClientData ;
            CT_ClientData* m_ClientData ;
            bool m_has_textdata ;
            CT_Rel* m_textdata ;

        }


    }

    class CT_Image : public XSD::ComplexType{
    public:
        CT_Path* add_path(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Path* pNewChild = pChildGroup->mutable_path();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Formulas* add_formulas(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Formulas* pNewChild = pChildGroup->mutable_formulas();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Handles* add_handles(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Handles* pNewChild = pChildGroup->mutable_handles();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Fill* add_fill(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Fill* pNewChild = pChildGroup->mutable_fill();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Stroke* add_stroke(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Stroke* pNewChild = pChildGroup->mutable_stroke();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Shadow* add_shadow(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Shadow* pNewChild = pChildGroup->mutable_shadow();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Textbox* add_textbox(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Textbox* pNewChild = pChildGroup->mutable_textbox();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_TextPath* add_textpath(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_TextPath* pNewChild = pChildGroup->mutable_textpath();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ImageData* add_imagedata(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ImageData* pNewChild = pChildGroup->mutable_imagedata();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Skew* add_skew(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Skew* pNewChild = pChildGroup->mutable_skew();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Extrusion* add_extrusion(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Extrusion* pNewChild = pChildGroup->mutable_extrusion();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Callout* add_callout(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Callout* pNewChild = pChildGroup->mutable_callout();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Lock* add_lock(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Lock* pNewChild = pChildGroup->mutable_lock();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ClipPath* add_clippath(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ClipPath* pNewChild = pChildGroup->mutable_clippath();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SignatureLine* add_signatureline(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SignatureLine* pNewChild = pChildGroup->mutable_signatureline();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Wrap* add_wrap(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Wrap* pNewChild = pChildGroup->mutable_wrap();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_AnchorLock* add_anchorlock(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_AnchorLock* pNewChild = pChildGroup->mutable_anchorlock();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_bordertop(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_bordertop();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderbottom(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderbottom();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderleft(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderleft();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderright(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderright();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ClientData* add_ClientData(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ClientData* pNewChild = pChildGroup->mutable_ClientData();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Rel* add_textdata(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Rel* pNewChild = pChildGroup->mutable_textdata();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        void clear(){

                m_has_src_attr = false;
                m_src_attr.clear();
            
                m_has_cropleft_attr = false;
                m_cropleft_attr.clear();
            
                m_has_croptop_attr = false;
                m_croptop_attr.clear();
            
                m_has_cropright_attr = false;
                m_cropright_attr.clear();
            
                m_has_cropbottom_attr = false;
                m_cropbottom_attr.clear();
            
                m_has_gain_attr = false;
                m_gain_attr.clear();
            
                m_has_blacklevel_attr = false;
                m_blacklevel_attr.clear();
            
                m_has_gamma_attr = false;
                m_gamma_attr.clear();
            
                m_has_grayscale_attr = false;
                
        if (m_grayscale_attr)
        {
            delete m_grayscale_attr;
            m_grayscale_attr = NULL;
        }
    
            
                m_has_bilevel_attr = false;
                
        if (m_bilevel_attr)
        {
            delete m_bilevel_attr;
            m_bilevel_attr = NULL;
        }
    
            
            vector<ChildGroup_1*>::iterator iter;
            for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
            {
                delete *iter;
            }
            m_childGroupList_1.clear();
        
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    _outStream << _attrName << \=\\ << m_src_attr << \\\;
_outStream << _attrName << \=\\ << m_cropleft_attr << \\\;
_outStream << _attrName << \=\\ << m_croptop_attr << \\\;
_outStream << _attrName << \=\\ << m_cropright_attr << \\\;
_outStream << _attrName << \=\\ << m_cropbottom_attr << \\\;
_outStream << _attrName << \=\\ << m_gain_attr << \\\;
_outStream << _attrName << \=\\ << m_blacklevel_attr << \\\;
_outStream << _attrName << \=\\ << m_gamma_attr << \\\;
m_grayscale_attr->toXml(_attrName, _outStream);
m_bilevel_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
        vector<ChildGroup_1*>::const_iterator iter;
        for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
        {
            if ((*iter)->has_path())
            {
                (*iter)->toXml(path, _outStream);
            }
            else if ((*iter)->has_formulas())
            {
                (*iter)->toXml(formulas, _outStream);
            }
            else if ((*iter)->has_handles())
            {
                (*iter)->toXml(handles, _outStream);
            }
            else if ((*iter)->has_fill())
            {
                (*iter)->toXml(fill, _outStream);
            }
            else if ((*iter)->has_stroke())
            {
                (*iter)->toXml(stroke, _outStream);
            }
            else if ((*iter)->has_shadow())
            {
                (*iter)->toXml(shadow, _outStream);
            }
            else if ((*iter)->has_textbox())
            {
                (*iter)->toXml(textbox, _outStream);
            }
            else if ((*iter)->has_textpath())
            {
                (*iter)->toXml(textpath, _outStream);
            }
            else if ((*iter)->has_imagedata())
            {
                (*iter)->toXml(imagedata, _outStream);
            }
            else if ((*iter)->has_skew())
            {
                (*iter)->toXml(skew, _outStream);
            }
            else if ((*iter)->has_extrusion())
            {
                (*iter)->toXml(extrusion, _outStream);
            }
            else if ((*iter)->has_callout())
            {
                (*iter)->toXml(callout, _outStream);
            }
            else if ((*iter)->has_lock())
            {
                (*iter)->toXml(lock, _outStream);
            }
            else if ((*iter)->has_clippath())
            {
                (*iter)->toXml(clippath, _outStream);
            }
            else if ((*iter)->has_signatureline())
            {
                (*iter)->toXml(signatureline, _outStream);
            }
            else if ((*iter)->has_wrap())
            {
                (*iter)->toXml(wrap, _outStream);
            }
            else if ((*iter)->has_anchorlock())
            {
                (*iter)->toXml(anchorlock, _outStream);
            }
            else if ((*iter)->has_bordertop())
            {
                (*iter)->toXml(bordertop, _outStream);
            }
            else if ((*iter)->has_borderbottom())
            {
                (*iter)->toXml(borderbottom, _outStream);
            }
            else if ((*iter)->has_borderleft())
            {
                (*iter)->toXml(borderleft, _outStream);
            }
            else if ((*iter)->has_borderright())
            {
                (*iter)->toXml(borderright, _outStream);
            }
            else if ((*iter)->has_ClientData())
            {
                (*iter)->toXml(ClientData, _outStream);
            }
            else if ((*iter)->has_textdata())
            {
                (*iter)->toXml(textdata, _outStream);
            }
        }
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Image& default_instance(){

    if (!CT_Image::default_instance_)
    {
        CT_Image::default_instance_ = new CT_Image();
    }
    return *CT_Image::default_instance_;

        }
        bool has_src_attr(){

            return m_has_src_attr;
        
        }
        void set_src_attr(const string& _src_attr ){

        m_has_src_attr = true;
        m_src_attr = _src_attr;
        
        }
        const string& src_attr(){

            return type: \string\nname: \m_src_attr\n;
        
        }
        bool has_cropleft_attr(){

            return m_has_cropleft_attr;
        
        }
        void set_cropleft_attr(const string& _cropleft_attr ){

        m_has_cropleft_attr = true;
        m_cropleft_attr = _cropleft_attr;
        
        }
        const string& cropleft_attr(){

            return type: \string\nname: \m_cropleft_attr\n;
        
        }
        bool has_croptop_attr(){

            return m_has_croptop_attr;
        
        }
        void set_croptop_attr(const string& _croptop_attr ){

        m_has_croptop_attr = true;
        m_croptop_attr = _croptop_attr;
        
        }
        const string& croptop_attr(){

            return type: \string\nname: \m_croptop_attr\n;
        
        }
        bool has_cropright_attr(){

            return m_has_cropright_attr;
        
        }
        void set_cropright_attr(const string& _cropright_attr ){

        m_has_cropright_attr = true;
        m_cropright_attr = _cropright_attr;
        
        }
        const string& cropright_attr(){

            return type: \string\nname: \m_cropright_attr\n;
        
        }
        bool has_cropbottom_attr(){

            return m_has_cropbottom_attr;
        
        }
        void set_cropbottom_attr(const string& _cropbottom_attr ){

        m_has_cropbottom_attr = true;
        m_cropbottom_attr = _cropbottom_attr;
        
        }
        const string& cropbottom_attr(){

            return type: \string\nname: \m_cropbottom_attr\n;
        
        }
        bool has_gain_attr(){

            return m_has_gain_attr;
        
        }
        void set_gain_attr(const string& _gain_attr ){

        m_has_gain_attr = true;
        m_gain_attr = _gain_attr;
        
        }
        const string& gain_attr(){

            return type: \string\nname: \m_gain_attr\n;
        
        }
        bool has_blacklevel_attr(){

            return m_has_blacklevel_attr;
        
        }
        void set_blacklevel_attr(const string& _blacklevel_attr ){

        m_has_blacklevel_attr = true;
        m_blacklevel_attr = _blacklevel_attr;
        
        }
        const string& blacklevel_attr(){

            return type: \string\nname: \m_blacklevel_attr\n;
        
        }
        bool has_gamma_attr(){

            return m_has_gamma_attr;
        
        }
        void set_gamma_attr(const string& _gamma_attr ){

        m_has_gamma_attr = true;
        m_gamma_attr = _gamma_attr;
        
        }
        const string& gamma_attr(){

            return type: \string\nname: \m_gamma_attr\n;
        
        }
        bool has_grayscale_attr(){

            return m_has_grayscale_attr;
        
        }
        void set_grayscale_attr(const ns_s::ST_TrueFalse& _grayscale_attr ){

            m_has_grayscale_attr = true;
            m_grayscale_attr = new ns_s::ST_TrueFalse(_grayscale_attr);
        
        }
        const ns_s::ST_TrueFalse& grayscale_attr(){

            if (m_grayscale_attr)
            {
                return *m_grayscale_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }
        bool has_bilevel_attr(){

            return m_has_bilevel_attr;
        
        }
        void set_bilevel_attr(const ns_s::ST_TrueFalse& _bilevel_attr ){

            m_has_bilevel_attr = true;
            m_bilevel_attr = new ns_s::ST_TrueFalse(_bilevel_attr);
        
        }
        const ns_s::ST_TrueFalse& bilevel_attr(){

            if (m_bilevel_attr)
            {
                return *m_bilevel_attr;
            }
            return ns_s::ST_TrueFalse::default_instance();
        
        }

    private:
        vector<ChildGroup_1*> m_childGroupList_1 ;
        static CT_Image* default_instance_ ;
        bool m_has_src_attr ;
        string m_src_attr ;
        bool m_has_cropleft_attr ;
        string m_cropleft_attr ;
        bool m_has_croptop_attr ;
        string m_croptop_attr ;
        bool m_has_cropright_attr ;
        string m_cropright_attr ;
        bool m_has_cropbottom_attr ;
        string m_cropbottom_attr ;
        bool m_has_gain_attr ;
        string m_gain_attr ;
        bool m_has_blacklevel_attr ;
        string m_blacklevel_attr ;
        bool m_has_gamma_attr ;
        string m_gamma_attr ;
        bool m_has_grayscale_attr ;
        ns_s::ST_TrueFalse* m_grayscale_attr ;
        bool m_has_bilevel_attr ;
        ns_s::ST_TrueFalse* m_bilevel_attr ;
        class ChildGroup_1{
        public:
            bool has_path(){

            return m_has_path;
        
            }
            CT_Path* mutable_path(){

                
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_path = true;
                if (!m_path)
                {
                    m_path = new CT_Path();
                }
                return m_path;
            
            }
            const CT_Path& path(){

            if (m_path)
            {
                return *m_path;
            }
            return CT_Path::default_instance();
        
            }
            bool has_formulas(){

            return m_has_formulas;
        
            }
            CT_Formulas* mutable_formulas(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_formulas = true;
                if (!m_formulas)
                {
                    m_formulas = new CT_Formulas();
                }
                return m_formulas;
            
            }
            const CT_Formulas& formulas(){

            if (m_formulas)
            {
                return *m_formulas;
            }
            return CT_Formulas::default_instance();
        
            }
            bool has_handles(){

            return m_has_handles;
        
            }
            CT_Handles* mutable_handles(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_handles = true;
                if (!m_handles)
                {
                    m_handles = new CT_Handles();
                }
                return m_handles;
            
            }
            const CT_Handles& handles(){

            if (m_handles)
            {
                return *m_handles;
            }
            return CT_Handles::default_instance();
        
            }
            bool has_fill(){

            return m_has_fill;
        
            }
            CT_Fill* mutable_fill(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_fill = true;
                if (!m_fill)
                {
                    m_fill = new CT_Fill();
                }
                return m_fill;
            
            }
            const CT_Fill& fill(){

            if (m_fill)
            {
                return *m_fill;
            }
            return CT_Fill::default_instance();
        
            }
            bool has_stroke(){

            return m_has_stroke;
        
            }
            CT_Stroke* mutable_stroke(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_stroke = true;
                if (!m_stroke)
                {
                    m_stroke = new CT_Stroke();
                }
                return m_stroke;
            
            }
            const CT_Stroke& stroke(){

            if (m_stroke)
            {
                return *m_stroke;
            }
            return CT_Stroke::default_instance();
        
            }
            bool has_shadow(){

            return m_has_shadow;
        
            }
            CT_Shadow* mutable_shadow(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_shadow = true;
                if (!m_shadow)
                {
                    m_shadow = new CT_Shadow();
                }
                return m_shadow;
            
            }
            const CT_Shadow& shadow(){

            if (m_shadow)
            {
                return *m_shadow;
            }
            return CT_Shadow::default_instance();
        
            }
            bool has_textbox(){

            return m_has_textbox;
        
            }
            CT_Textbox* mutable_textbox(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_textbox = true;
                if (!m_textbox)
                {
                    m_textbox = new CT_Textbox();
                }
                return m_textbox;
            
            }
            const CT_Textbox& textbox(){

            if (m_textbox)
            {
                return *m_textbox;
            }
            return CT_Textbox::default_instance();
        
            }
            bool has_textpath(){

            return m_has_textpath;
        
            }
            CT_TextPath* mutable_textpath(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_textpath = true;
                if (!m_textpath)
                {
                    m_textpath = new CT_TextPath();
                }
                return m_textpath;
            
            }
            const CT_TextPath& textpath(){

            if (m_textpath)
            {
                return *m_textpath;
            }
            return CT_TextPath::default_instance();
        
            }
            bool has_imagedata(){

            return m_has_imagedata;
        
            }
            CT_ImageData* mutable_imagedata(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_imagedata = true;
                if (!m_imagedata)
                {
                    m_imagedata = new CT_ImageData();
                }
                return m_imagedata;
            
            }
            const CT_ImageData& imagedata(){

            if (m_imagedata)
            {
                return *m_imagedata;
            }
            return CT_ImageData::default_instance();
        
            }
            bool has_skew(){

            return m_has_skew;
        
            }
            CT_Skew* mutable_skew(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_skew = true;
                if (!m_skew)
                {
                    m_skew = new CT_Skew();
                }
                return m_skew;
            
            }
            const CT_Skew& skew(){

            if (m_skew)
            {
                return *m_skew;
            }
            return CT_Skew::default_instance();
        
            }
            bool has_extrusion(){

            return m_has_extrusion;
        
            }
            CT_Extrusion* mutable_extrusion(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_extrusion = true;
                if (!m_extrusion)
                {
                    m_extrusion = new CT_Extrusion();
                }
                return m_extrusion;
            
            }
            const CT_Extrusion& extrusion(){

            if (m_extrusion)
            {
                return *m_extrusion;
            }
            return CT_Extrusion::default_instance();
        
            }
            bool has_callout(){

            return m_has_callout;
        
            }
            CT_Callout* mutable_callout(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_callout = true;
                if (!m_callout)
                {
                    m_callout = new CT_Callout();
                }
                return m_callout;
            
            }
            const CT_Callout& callout(){

            if (m_callout)
            {
                return *m_callout;
            }
            return CT_Callout::default_instance();
        
            }
            bool has_lock(){

            return m_has_lock;
        
            }
            CT_Lock* mutable_lock(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_lock = true;
                if (!m_lock)
                {
                    m_lock = new CT_Lock();
                }
                return m_lock;
            
            }
            const CT_Lock& lock(){

            if (m_lock)
            {
                return *m_lock;
            }
            return CT_Lock::default_instance();
        
            }
            bool has_clippath(){

            return m_has_clippath;
        
            }
            CT_ClipPath* mutable_clippath(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_clippath = true;
                if (!m_clippath)
                {
                    m_clippath = new CT_ClipPath();
                }
                return m_clippath;
            
            }
            const CT_ClipPath& clippath(){

            if (m_clippath)
            {
                return *m_clippath;
            }
            return CT_ClipPath::default_instance();
        
            }
            bool has_signatureline(){

            return m_has_signatureline;
        
            }
            CT_SignatureLine* mutable_signatureline(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_signatureline = true;
                if (!m_signatureline)
                {
                    m_signatureline = new CT_SignatureLine();
                }
                return m_signatureline;
            
            }
            const CT_SignatureLine& signatureline(){

            if (m_signatureline)
            {
                return *m_signatureline;
            }
            return CT_SignatureLine::default_instance();
        
            }
            bool has_wrap(){

            return m_has_wrap;
        
            }
            CT_Wrap* mutable_wrap(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_wrap = true;
                if (!m_wrap)
                {
                    m_wrap = new CT_Wrap();
                }
                return m_wrap;
            
            }
            const CT_Wrap& wrap(){

            if (m_wrap)
            {
                return *m_wrap;
            }
            return CT_Wrap::default_instance();
        
            }
            bool has_anchorlock(){

            return m_has_anchorlock;
        
            }
            CT_AnchorLock* mutable_anchorlock(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_anchorlock = true;
                if (!m_anchorlock)
                {
                    m_anchorlock = new CT_AnchorLock();
                }
                return m_anchorlock;
            
            }
            const CT_AnchorLock& anchorlock(){

            if (m_anchorlock)
            {
                return *m_anchorlock;
            }
            return CT_AnchorLock::default_instance();
        
            }
            bool has_bordertop(){

            return m_has_bordertop;
        
            }
            CT_Border* mutable_bordertop(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_bordertop = true;
                if (!m_bordertop)
                {
                    m_bordertop = new CT_Border();
                }
                return m_bordertop;
            
            }
            const CT_Border& bordertop(){

            if (m_bordertop)
            {
                return *m_bordertop;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderbottom(){

            return m_has_borderbottom;
        
            }
            CT_Border* mutable_borderbottom(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_borderbottom = true;
                if (!m_borderbottom)
                {
                    m_borderbottom = new CT_Border();
                }
                return m_borderbottom;
            
            }
            const CT_Border& borderbottom(){

            if (m_borderbottom)
            {
                return *m_borderbottom;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderleft(){

            return m_has_borderleft;
        
            }
            CT_Border* mutable_borderleft(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_borderleft = true;
                if (!m_borderleft)
                {
                    m_borderleft = new CT_Border();
                }
                return m_borderleft;
            
            }
            const CT_Border& borderleft(){

            if (m_borderleft)
            {
                return *m_borderleft;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderright(){

            return m_has_borderright;
        
            }
            CT_Border* mutable_borderright(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_borderright = true;
                if (!m_borderright)
                {
                    m_borderright = new CT_Border();
                }
                return m_borderright;
            
            }
            const CT_Border& borderright(){

            if (m_borderright)
            {
                return *m_borderright;
            }
            return CT_Border::default_instance();
        
            }
            bool has_ClientData(){

            return m_has_ClientData;
        
            }
            CT_ClientData* mutable_ClientData(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ClientData = true;
                if (!m_ClientData)
                {
                    m_ClientData = new CT_ClientData();
                }
                return m_ClientData;
            
            }
            const CT_ClientData& ClientData(){

            if (m_ClientData)
            {
                return *m_ClientData;
            }
            return CT_ClientData::default_instance();
        
            }
            bool has_textdata(){

            return m_has_textdata;
        
            }
            CT_Rel* mutable_textdata(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = true;
                if (!m_textdata)
                {
                    m_textdata = new CT_Rel();
                }
                return m_textdata;
            
            }
            const CT_Rel& textdata(){

            if (m_textdata)
            {
                return *m_textdata;
            }
            return CT_Rel::default_instance();
        
            }

        private:
            bool m_has_path ;
            CT_Path* m_path ;
            bool m_has_formulas ;
            CT_Formulas* m_formulas ;
            bool m_has_handles ;
            CT_Handles* m_handles ;
            bool m_has_fill ;
            CT_Fill* m_fill ;
            bool m_has_stroke ;
            CT_Stroke* m_stroke ;
            bool m_has_shadow ;
            CT_Shadow* m_shadow ;
            bool m_has_textbox ;
            CT_Textbox* m_textbox ;
            bool m_has_textpath ;
            CT_TextPath* m_textpath ;
            bool m_has_imagedata ;
            CT_ImageData* m_imagedata ;
            bool m_has_skew ;
            CT_Skew* m_skew ;
            bool m_has_extrusion ;
            CT_Extrusion* m_extrusion ;
            bool m_has_callout ;
            CT_Callout* m_callout ;
            bool m_has_lock ;
            CT_Lock* m_lock ;
            bool m_has_clippath ;
            CT_ClipPath* m_clippath ;
            bool m_has_signatureline ;
            CT_SignatureLine* m_signatureline ;
            bool m_has_wrap ;
            CT_Wrap* m_wrap ;
            bool m_has_anchorlock ;
            CT_AnchorLock* m_anchorlock ;
            bool m_has_bordertop ;
            CT_Border* m_bordertop ;
            bool m_has_borderbottom ;
            CT_Border* m_borderbottom ;
            bool m_has_borderleft ;
            CT_Border* m_borderleft ;
            bool m_has_borderright ;
            CT_Border* m_borderright ;
            bool m_has_ClientData ;
            CT_ClientData* m_ClientData ;
            bool m_has_textdata ;
            CT_Rel* m_textdata ;

        }


    }

    class CT_Line : public XSD::ComplexType{
    public:
        CT_Path* add_path(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Path* pNewChild = pChildGroup->mutable_path();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Formulas* add_formulas(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Formulas* pNewChild = pChildGroup->mutable_formulas();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Handles* add_handles(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Handles* pNewChild = pChildGroup->mutable_handles();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Fill* add_fill(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Fill* pNewChild = pChildGroup->mutable_fill();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Stroke* add_stroke(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Stroke* pNewChild = pChildGroup->mutable_stroke();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Shadow* add_shadow(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Shadow* pNewChild = pChildGroup->mutable_shadow();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Textbox* add_textbox(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Textbox* pNewChild = pChildGroup->mutable_textbox();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_TextPath* add_textpath(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_TextPath* pNewChild = pChildGroup->mutable_textpath();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ImageData* add_imagedata(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ImageData* pNewChild = pChildGroup->mutable_imagedata();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Skew* add_skew(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Skew* pNewChild = pChildGroup->mutable_skew();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Extrusion* add_extrusion(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Extrusion* pNewChild = pChildGroup->mutable_extrusion();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Callout* add_callout(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Callout* pNewChild = pChildGroup->mutable_callout();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Lock* add_lock(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Lock* pNewChild = pChildGroup->mutable_lock();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ClipPath* add_clippath(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ClipPath* pNewChild = pChildGroup->mutable_clippath();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SignatureLine* add_signatureline(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SignatureLine* pNewChild = pChildGroup->mutable_signatureline();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Wrap* add_wrap(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Wrap* pNewChild = pChildGroup->mutable_wrap();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_AnchorLock* add_anchorlock(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_AnchorLock* pNewChild = pChildGroup->mutable_anchorlock();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_bordertop(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_bordertop();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderbottom(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderbottom();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderleft(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderleft();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderright(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderright();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ClientData* add_ClientData(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ClientData* pNewChild = pChildGroup->mutable_ClientData();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Rel* add_textdata(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Rel* pNewChild = pChildGroup->mutable_textdata();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        void clear(){

                m_has_from_attr = false;
                m_from_attr.clear();
            
                m_has_to_attr = false;
                m_to_attr.clear();
            
            vector<ChildGroup_1*>::iterator iter;
            for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
            {
                delete *iter;
            }
            m_childGroupList_1.clear();
        
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    _outStream << _attrName << \=\\ << m_from_attr << \\\;
_outStream << _attrName << \=\\ << m_to_attr << \\\;
        _outStream << \>\;
    
        vector<ChildGroup_1*>::const_iterator iter;
        for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
        {
            if ((*iter)->has_path())
            {
                (*iter)->toXml(path, _outStream);
            }
            else if ((*iter)->has_formulas())
            {
                (*iter)->toXml(formulas, _outStream);
            }
            else if ((*iter)->has_handles())
            {
                (*iter)->toXml(handles, _outStream);
            }
            else if ((*iter)->has_fill())
            {
                (*iter)->toXml(fill, _outStream);
            }
            else if ((*iter)->has_stroke())
            {
                (*iter)->toXml(stroke, _outStream);
            }
            else if ((*iter)->has_shadow())
            {
                (*iter)->toXml(shadow, _outStream);
            }
            else if ((*iter)->has_textbox())
            {
                (*iter)->toXml(textbox, _outStream);
            }
            else if ((*iter)->has_textpath())
            {
                (*iter)->toXml(textpath, _outStream);
            }
            else if ((*iter)->has_imagedata())
            {
                (*iter)->toXml(imagedata, _outStream);
            }
            else if ((*iter)->has_skew())
            {
                (*iter)->toXml(skew, _outStream);
            }
            else if ((*iter)->has_extrusion())
            {
                (*iter)->toXml(extrusion, _outStream);
            }
            else if ((*iter)->has_callout())
            {
                (*iter)->toXml(callout, _outStream);
            }
            else if ((*iter)->has_lock())
            {
                (*iter)->toXml(lock, _outStream);
            }
            else if ((*iter)->has_clippath())
            {
                (*iter)->toXml(clippath, _outStream);
            }
            else if ((*iter)->has_signatureline())
            {
                (*iter)->toXml(signatureline, _outStream);
            }
            else if ((*iter)->has_wrap())
            {
                (*iter)->toXml(wrap, _outStream);
            }
            else if ((*iter)->has_anchorlock())
            {
                (*iter)->toXml(anchorlock, _outStream);
            }
            else if ((*iter)->has_bordertop())
            {
                (*iter)->toXml(bordertop, _outStream);
            }
            else if ((*iter)->has_borderbottom())
            {
                (*iter)->toXml(borderbottom, _outStream);
            }
            else if ((*iter)->has_borderleft())
            {
                (*iter)->toXml(borderleft, _outStream);
            }
            else if ((*iter)->has_borderright())
            {
                (*iter)->toXml(borderright, _outStream);
            }
            else if ((*iter)->has_ClientData())
            {
                (*iter)->toXml(ClientData, _outStream);
            }
            else if ((*iter)->has_textdata())
            {
                (*iter)->toXml(textdata, _outStream);
            }
        }
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Line& default_instance(){

    if (!CT_Line::default_instance_)
    {
        CT_Line::default_instance_ = new CT_Line();
    }
    return *CT_Line::default_instance_;

        }
        bool has_from_attr(){

            return m_has_from_attr;
        
        }
        void set_from_attr(const string& _from_attr ){

        m_has_from_attr = true;
        m_from_attr = _from_attr;
        
        }
        const string& from_attr(){

            return type: \string\nname: \m_from_attr\n;
        
        }
        bool has_to_attr(){

            return m_has_to_attr;
        
        }
        void set_to_attr(const string& _to_attr ){

        m_has_to_attr = true;
        m_to_attr = _to_attr;
        
        }
        const string& to_attr(){

            return type: \string\nname: \m_to_attr\n;
        
        }

    private:
        vector<ChildGroup_1*> m_childGroupList_1 ;
        static CT_Line* default_instance_ ;
        bool m_has_from_attr ;
        string m_from_attr ;
        bool m_has_to_attr ;
        string m_to_attr ;
        class ChildGroup_1{
        public:
            bool has_path(){

            return m_has_path;
        
            }
            CT_Path* mutable_path(){

                
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_path = true;
                if (!m_path)
                {
                    m_path = new CT_Path();
                }
                return m_path;
            
            }
            const CT_Path& path(){

            if (m_path)
            {
                return *m_path;
            }
            return CT_Path::default_instance();
        
            }
            bool has_formulas(){

            return m_has_formulas;
        
            }
            CT_Formulas* mutable_formulas(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_formulas = true;
                if (!m_formulas)
                {
                    m_formulas = new CT_Formulas();
                }
                return m_formulas;
            
            }
            const CT_Formulas& formulas(){

            if (m_formulas)
            {
                return *m_formulas;
            }
            return CT_Formulas::default_instance();
        
            }
            bool has_handles(){

            return m_has_handles;
        
            }
            CT_Handles* mutable_handles(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_handles = true;
                if (!m_handles)
                {
                    m_handles = new CT_Handles();
                }
                return m_handles;
            
            }
            const CT_Handles& handles(){

            if (m_handles)
            {
                return *m_handles;
            }
            return CT_Handles::default_instance();
        
            }
            bool has_fill(){

            return m_has_fill;
        
            }
            CT_Fill* mutable_fill(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_fill = true;
                if (!m_fill)
                {
                    m_fill = new CT_Fill();
                }
                return m_fill;
            
            }
            const CT_Fill& fill(){

            if (m_fill)
            {
                return *m_fill;
            }
            return CT_Fill::default_instance();
        
            }
            bool has_stroke(){

            return m_has_stroke;
        
            }
            CT_Stroke* mutable_stroke(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_stroke = true;
                if (!m_stroke)
                {
                    m_stroke = new CT_Stroke();
                }
                return m_stroke;
            
            }
            const CT_Stroke& stroke(){

            if (m_stroke)
            {
                return *m_stroke;
            }
            return CT_Stroke::default_instance();
        
            }
            bool has_shadow(){

            return m_has_shadow;
        
            }
            CT_Shadow* mutable_shadow(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_shadow = true;
                if (!m_shadow)
                {
                    m_shadow = new CT_Shadow();
                }
                return m_shadow;
            
            }
            const CT_Shadow& shadow(){

            if (m_shadow)
            {
                return *m_shadow;
            }
            return CT_Shadow::default_instance();
        
            }
            bool has_textbox(){

            return m_has_textbox;
        
            }
            CT_Textbox* mutable_textbox(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_textbox = true;
                if (!m_textbox)
                {
                    m_textbox = new CT_Textbox();
                }
                return m_textbox;
            
            }
            const CT_Textbox& textbox(){

            if (m_textbox)
            {
                return *m_textbox;
            }
            return CT_Textbox::default_instance();
        
            }
            bool has_textpath(){

            return m_has_textpath;
        
            }
            CT_TextPath* mutable_textpath(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_textpath = true;
                if (!m_textpath)
                {
                    m_textpath = new CT_TextPath();
                }
                return m_textpath;
            
            }
            const CT_TextPath& textpath(){

            if (m_textpath)
            {
                return *m_textpath;
            }
            return CT_TextPath::default_instance();
        
            }
            bool has_imagedata(){

            return m_has_imagedata;
        
            }
            CT_ImageData* mutable_imagedata(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_imagedata = true;
                if (!m_imagedata)
                {
                    m_imagedata = new CT_ImageData();
                }
                return m_imagedata;
            
            }
            const CT_ImageData& imagedata(){

            if (m_imagedata)
            {
                return *m_imagedata;
            }
            return CT_ImageData::default_instance();
        
            }
            bool has_skew(){

            return m_has_skew;
        
            }
            CT_Skew* mutable_skew(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_skew = true;
                if (!m_skew)
                {
                    m_skew = new CT_Skew();
                }
                return m_skew;
            
            }
            const CT_Skew& skew(){

            if (m_skew)
            {
                return *m_skew;
            }
            return CT_Skew::default_instance();
        
            }
            bool has_extrusion(){

            return m_has_extrusion;
        
            }
            CT_Extrusion* mutable_extrusion(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_extrusion = true;
                if (!m_extrusion)
                {
                    m_extrusion = new CT_Extrusion();
                }
                return m_extrusion;
            
            }
            const CT_Extrusion& extrusion(){

            if (m_extrusion)
            {
                return *m_extrusion;
            }
            return CT_Extrusion::default_instance();
        
            }
            bool has_callout(){

            return m_has_callout;
        
            }
            CT_Callout* mutable_callout(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_callout = true;
                if (!m_callout)
                {
                    m_callout = new CT_Callout();
                }
                return m_callout;
            
            }
            const CT_Callout& callout(){

            if (m_callout)
            {
                return *m_callout;
            }
            return CT_Callout::default_instance();
        
            }
            bool has_lock(){

            return m_has_lock;
        
            }
            CT_Lock* mutable_lock(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_lock = true;
                if (!m_lock)
                {
                    m_lock = new CT_Lock();
                }
                return m_lock;
            
            }
            const CT_Lock& lock(){

            if (m_lock)
            {
                return *m_lock;
            }
            return CT_Lock::default_instance();
        
            }
            bool has_clippath(){

            return m_has_clippath;
        
            }
            CT_ClipPath* mutable_clippath(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_clippath = true;
                if (!m_clippath)
                {
                    m_clippath = new CT_ClipPath();
                }
                return m_clippath;
            
            }
            const CT_ClipPath& clippath(){

            if (m_clippath)
            {
                return *m_clippath;
            }
            return CT_ClipPath::default_instance();
        
            }
            bool has_signatureline(){

            return m_has_signatureline;
        
            }
            CT_SignatureLine* mutable_signatureline(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_signatureline = true;
                if (!m_signatureline)
                {
                    m_signatureline = new CT_SignatureLine();
                }
                return m_signatureline;
            
            }
            const CT_SignatureLine& signatureline(){

            if (m_signatureline)
            {
                return *m_signatureline;
            }
            return CT_SignatureLine::default_instance();
        
            }
            bool has_wrap(){

            return m_has_wrap;
        
            }
            CT_Wrap* mutable_wrap(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_wrap = true;
                if (!m_wrap)
                {
                    m_wrap = new CT_Wrap();
                }
                return m_wrap;
            
            }
            const CT_Wrap& wrap(){

            if (m_wrap)
            {
                return *m_wrap;
            }
            return CT_Wrap::default_instance();
        
            }
            bool has_anchorlock(){

            return m_has_anchorlock;
        
            }
            CT_AnchorLock* mutable_anchorlock(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_anchorlock = true;
                if (!m_anchorlock)
                {
                    m_anchorlock = new CT_AnchorLock();
                }
                return m_anchorlock;
            
            }
            const CT_AnchorLock& anchorlock(){

            if (m_anchorlock)
            {
                return *m_anchorlock;
            }
            return CT_AnchorLock::default_instance();
        
            }
            bool has_bordertop(){

            return m_has_bordertop;
        
            }
            CT_Border* mutable_bordertop(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_bordertop = true;
                if (!m_bordertop)
                {
                    m_bordertop = new CT_Border();
                }
                return m_bordertop;
            
            }
            const CT_Border& bordertop(){

            if (m_bordertop)
            {
                return *m_bordertop;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderbottom(){

            return m_has_borderbottom;
        
            }
            CT_Border* mutable_borderbottom(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_borderbottom = true;
                if (!m_borderbottom)
                {
                    m_borderbottom = new CT_Border();
                }
                return m_borderbottom;
            
            }
            const CT_Border& borderbottom(){

            if (m_borderbottom)
            {
                return *m_borderbottom;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderleft(){

            return m_has_borderleft;
        
            }
            CT_Border* mutable_borderleft(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_borderleft = true;
                if (!m_borderleft)
                {
                    m_borderleft = new CT_Border();
                }
                return m_borderleft;
            
            }
            const CT_Border& borderleft(){

            if (m_borderleft)
            {
                return *m_borderleft;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderright(){

            return m_has_borderright;
        
            }
            CT_Border* mutable_borderright(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_borderright = true;
                if (!m_borderright)
                {
                    m_borderright = new CT_Border();
                }
                return m_borderright;
            
            }
            const CT_Border& borderright(){

            if (m_borderright)
            {
                return *m_borderright;
            }
            return CT_Border::default_instance();
        
            }
            bool has_ClientData(){

            return m_has_ClientData;
        
            }
            CT_ClientData* mutable_ClientData(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ClientData = true;
                if (!m_ClientData)
                {
                    m_ClientData = new CT_ClientData();
                }
                return m_ClientData;
            
            }
            const CT_ClientData& ClientData(){

            if (m_ClientData)
            {
                return *m_ClientData;
            }
            return CT_ClientData::default_instance();
        
            }
            bool has_textdata(){

            return m_has_textdata;
        
            }
            CT_Rel* mutable_textdata(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = true;
                if (!m_textdata)
                {
                    m_textdata = new CT_Rel();
                }
                return m_textdata;
            
            }
            const CT_Rel& textdata(){

            if (m_textdata)
            {
                return *m_textdata;
            }
            return CT_Rel::default_instance();
        
            }

        private:
            bool m_has_path ;
            CT_Path* m_path ;
            bool m_has_formulas ;
            CT_Formulas* m_formulas ;
            bool m_has_handles ;
            CT_Handles* m_handles ;
            bool m_has_fill ;
            CT_Fill* m_fill ;
            bool m_has_stroke ;
            CT_Stroke* m_stroke ;
            bool m_has_shadow ;
            CT_Shadow* m_shadow ;
            bool m_has_textbox ;
            CT_Textbox* m_textbox ;
            bool m_has_textpath ;
            CT_TextPath* m_textpath ;
            bool m_has_imagedata ;
            CT_ImageData* m_imagedata ;
            bool m_has_skew ;
            CT_Skew* m_skew ;
            bool m_has_extrusion ;
            CT_Extrusion* m_extrusion ;
            bool m_has_callout ;
            CT_Callout* m_callout ;
            bool m_has_lock ;
            CT_Lock* m_lock ;
            bool m_has_clippath ;
            CT_ClipPath* m_clippath ;
            bool m_has_signatureline ;
            CT_SignatureLine* m_signatureline ;
            bool m_has_wrap ;
            CT_Wrap* m_wrap ;
            bool m_has_anchorlock ;
            CT_AnchorLock* m_anchorlock ;
            bool m_has_bordertop ;
            CT_Border* m_bordertop ;
            bool m_has_borderbottom ;
            CT_Border* m_borderbottom ;
            bool m_has_borderleft ;
            CT_Border* m_borderleft ;
            bool m_has_borderright ;
            CT_Border* m_borderright ;
            bool m_has_ClientData ;
            CT_ClientData* m_ClientData ;
            bool m_has_textdata ;
            CT_Rel* m_textdata ;

        }


    }

    class CT_Oval : public XSD::ComplexType{
    public:
        CT_Path* add_path(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Path* pNewChild = pChildGroup->mutable_path();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Formulas* add_formulas(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Formulas* pNewChild = pChildGroup->mutable_formulas();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Handles* add_handles(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Handles* pNewChild = pChildGroup->mutable_handles();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Fill* add_fill(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Fill* pNewChild = pChildGroup->mutable_fill();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Stroke* add_stroke(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Stroke* pNewChild = pChildGroup->mutable_stroke();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Shadow* add_shadow(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Shadow* pNewChild = pChildGroup->mutable_shadow();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Textbox* add_textbox(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Textbox* pNewChild = pChildGroup->mutable_textbox();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_TextPath* add_textpath(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_TextPath* pNewChild = pChildGroup->mutable_textpath();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ImageData* add_imagedata(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ImageData* pNewChild = pChildGroup->mutable_imagedata();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Skew* add_skew(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Skew* pNewChild = pChildGroup->mutable_skew();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Extrusion* add_extrusion(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Extrusion* pNewChild = pChildGroup->mutable_extrusion();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Callout* add_callout(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Callout* pNewChild = pChildGroup->mutable_callout();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Lock* add_lock(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Lock* pNewChild = pChildGroup->mutable_lock();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ClipPath* add_clippath(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ClipPath* pNewChild = pChildGroup->mutable_clippath();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SignatureLine* add_signatureline(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SignatureLine* pNewChild = pChildGroup->mutable_signatureline();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Wrap* add_wrap(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Wrap* pNewChild = pChildGroup->mutable_wrap();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_AnchorLock* add_anchorlock(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_AnchorLock* pNewChild = pChildGroup->mutable_anchorlock();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_bordertop(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_bordertop();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderbottom(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderbottom();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderleft(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderleft();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderright(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderright();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ClientData* add_ClientData(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ClientData* pNewChild = pChildGroup->mutable_ClientData();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Rel* add_textdata(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Rel* pNewChild = pChildGroup->mutable_textdata();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        void clear(){

            vector<ChildGroup_1*>::iterator iter;
            for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
            {
                delete *iter;
            }
            m_childGroupList_1.clear();
        
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
        vector<ChildGroup_1*>::const_iterator iter;
        for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
        {
            if ((*iter)->has_path())
            {
                (*iter)->toXml(path, _outStream);
            }
            else if ((*iter)->has_formulas())
            {
                (*iter)->toXml(formulas, _outStream);
            }
            else if ((*iter)->has_handles())
            {
                (*iter)->toXml(handles, _outStream);
            }
            else if ((*iter)->has_fill())
            {
                (*iter)->toXml(fill, _outStream);
            }
            else if ((*iter)->has_stroke())
            {
                (*iter)->toXml(stroke, _outStream);
            }
            else if ((*iter)->has_shadow())
            {
                (*iter)->toXml(shadow, _outStream);
            }
            else if ((*iter)->has_textbox())
            {
                (*iter)->toXml(textbox, _outStream);
            }
            else if ((*iter)->has_textpath())
            {
                (*iter)->toXml(textpath, _outStream);
            }
            else if ((*iter)->has_imagedata())
            {
                (*iter)->toXml(imagedata, _outStream);
            }
            else if ((*iter)->has_skew())
            {
                (*iter)->toXml(skew, _outStream);
            }
            else if ((*iter)->has_extrusion())
            {
                (*iter)->toXml(extrusion, _outStream);
            }
            else if ((*iter)->has_callout())
            {
                (*iter)->toXml(callout, _outStream);
            }
            else if ((*iter)->has_lock())
            {
                (*iter)->toXml(lock, _outStream);
            }
            else if ((*iter)->has_clippath())
            {
                (*iter)->toXml(clippath, _outStream);
            }
            else if ((*iter)->has_signatureline())
            {
                (*iter)->toXml(signatureline, _outStream);
            }
            else if ((*iter)->has_wrap())
            {
                (*iter)->toXml(wrap, _outStream);
            }
            else if ((*iter)->has_anchorlock())
            {
                (*iter)->toXml(anchorlock, _outStream);
            }
            else if ((*iter)->has_bordertop())
            {
                (*iter)->toXml(bordertop, _outStream);
            }
            else if ((*iter)->has_borderbottom())
            {
                (*iter)->toXml(borderbottom, _outStream);
            }
            else if ((*iter)->has_borderleft())
            {
                (*iter)->toXml(borderleft, _outStream);
            }
            else if ((*iter)->has_borderright())
            {
                (*iter)->toXml(borderright, _outStream);
            }
            else if ((*iter)->has_ClientData())
            {
                (*iter)->toXml(ClientData, _outStream);
            }
            else if ((*iter)->has_textdata())
            {
                (*iter)->toXml(textdata, _outStream);
            }
        }
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Oval& default_instance(){

    if (!CT_Oval::default_instance_)
    {
        CT_Oval::default_instance_ = new CT_Oval();
    }
    return *CT_Oval::default_instance_;

        }

    private:
        vector<ChildGroup_1*> m_childGroupList_1 ;
        static CT_Oval* default_instance_ ;
        class ChildGroup_1{
        public:
            bool has_path(){

            return m_has_path;
        
            }
            CT_Path* mutable_path(){

                
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_path = true;
                if (!m_path)
                {
                    m_path = new CT_Path();
                }
                return m_path;
            
            }
            const CT_Path& path(){

            if (m_path)
            {
                return *m_path;
            }
            return CT_Path::default_instance();
        
            }
            bool has_formulas(){

            return m_has_formulas;
        
            }
            CT_Formulas* mutable_formulas(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_formulas = true;
                if (!m_formulas)
                {
                    m_formulas = new CT_Formulas();
                }
                return m_formulas;
            
            }
            const CT_Formulas& formulas(){

            if (m_formulas)
            {
                return *m_formulas;
            }
            return CT_Formulas::default_instance();
        
            }
            bool has_handles(){

            return m_has_handles;
        
            }
            CT_Handles* mutable_handles(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_handles = true;
                if (!m_handles)
                {
                    m_handles = new CT_Handles();
                }
                return m_handles;
            
            }
            const CT_Handles& handles(){

            if (m_handles)
            {
                return *m_handles;
            }
            return CT_Handles::default_instance();
        
            }
            bool has_fill(){

            return m_has_fill;
        
            }
            CT_Fill* mutable_fill(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_fill = true;
                if (!m_fill)
                {
                    m_fill = new CT_Fill();
                }
                return m_fill;
            
            }
            const CT_Fill& fill(){

            if (m_fill)
            {
                return *m_fill;
            }
            return CT_Fill::default_instance();
        
            }
            bool has_stroke(){

            return m_has_stroke;
        
            }
            CT_Stroke* mutable_stroke(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_stroke = true;
                if (!m_stroke)
                {
                    m_stroke = new CT_Stroke();
                }
                return m_stroke;
            
            }
            const CT_Stroke& stroke(){

            if (m_stroke)
            {
                return *m_stroke;
            }
            return CT_Stroke::default_instance();
        
            }
            bool has_shadow(){

            return m_has_shadow;
        
            }
            CT_Shadow* mutable_shadow(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_shadow = true;
                if (!m_shadow)
                {
                    m_shadow = new CT_Shadow();
                }
                return m_shadow;
            
            }
            const CT_Shadow& shadow(){

            if (m_shadow)
            {
                return *m_shadow;
            }
            return CT_Shadow::default_instance();
        
            }
            bool has_textbox(){

            return m_has_textbox;
        
            }
            CT_Textbox* mutable_textbox(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_textbox = true;
                if (!m_textbox)
                {
                    m_textbox = new CT_Textbox();
                }
                return m_textbox;
            
            }
            const CT_Textbox& textbox(){

            if (m_textbox)
            {
                return *m_textbox;
            }
            return CT_Textbox::default_instance();
        
            }
            bool has_textpath(){

            return m_has_textpath;
        
            }
            CT_TextPath* mutable_textpath(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_textpath = true;
                if (!m_textpath)
                {
                    m_textpath = new CT_TextPath();
                }
                return m_textpath;
            
            }
            const CT_TextPath& textpath(){

            if (m_textpath)
            {
                return *m_textpath;
            }
            return CT_TextPath::default_instance();
        
            }
            bool has_imagedata(){

            return m_has_imagedata;
        
            }
            CT_ImageData* mutable_imagedata(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_imagedata = true;
                if (!m_imagedata)
                {
                    m_imagedata = new CT_ImageData();
                }
                return m_imagedata;
            
            }
            const CT_ImageData& imagedata(){

            if (m_imagedata)
            {
                return *m_imagedata;
            }
            return CT_ImageData::default_instance();
        
            }
            bool has_skew(){

            return m_has_skew;
        
            }
            CT_Skew* mutable_skew(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_skew = true;
                if (!m_skew)
                {
                    m_skew = new CT_Skew();
                }
                return m_skew;
            
            }
            const CT_Skew& skew(){

            if (m_skew)
            {
                return *m_skew;
            }
            return CT_Skew::default_instance();
        
            }
            bool has_extrusion(){

            return m_has_extrusion;
        
            }
            CT_Extrusion* mutable_extrusion(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_extrusion = true;
                if (!m_extrusion)
                {
                    m_extrusion = new CT_Extrusion();
                }
                return m_extrusion;
            
            }
            const CT_Extrusion& extrusion(){

            if (m_extrusion)
            {
                return *m_extrusion;
            }
            return CT_Extrusion::default_instance();
        
            }
            bool has_callout(){

            return m_has_callout;
        
            }
            CT_Callout* mutable_callout(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_callout = true;
                if (!m_callout)
                {
                    m_callout = new CT_Callout();
                }
                return m_callout;
            
            }
            const CT_Callout& callout(){

            if (m_callout)
            {
                return *m_callout;
            }
            return CT_Callout::default_instance();
        
            }
            bool has_lock(){

            return m_has_lock;
        
            }
            CT_Lock* mutable_lock(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_lock = true;
                if (!m_lock)
                {
                    m_lock = new CT_Lock();
                }
                return m_lock;
            
            }
            const CT_Lock& lock(){

            if (m_lock)
            {
                return *m_lock;
            }
            return CT_Lock::default_instance();
        
            }
            bool has_clippath(){

            return m_has_clippath;
        
            }
            CT_ClipPath* mutable_clippath(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_clippath = true;
                if (!m_clippath)
                {
                    m_clippath = new CT_ClipPath();
                }
                return m_clippath;
            
            }
            const CT_ClipPath& clippath(){

            if (m_clippath)
            {
                return *m_clippath;
            }
            return CT_ClipPath::default_instance();
        
            }
            bool has_signatureline(){

            return m_has_signatureline;
        
            }
            CT_SignatureLine* mutable_signatureline(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_signatureline = true;
                if (!m_signatureline)
                {
                    m_signatureline = new CT_SignatureLine();
                }
                return m_signatureline;
            
            }
            const CT_SignatureLine& signatureline(){

            if (m_signatureline)
            {
                return *m_signatureline;
            }
            return CT_SignatureLine::default_instance();
        
            }
            bool has_wrap(){

            return m_has_wrap;
        
            }
            CT_Wrap* mutable_wrap(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_wrap = true;
                if (!m_wrap)
                {
                    m_wrap = new CT_Wrap();
                }
                return m_wrap;
            
            }
            const CT_Wrap& wrap(){

            if (m_wrap)
            {
                return *m_wrap;
            }
            return CT_Wrap::default_instance();
        
            }
            bool has_anchorlock(){

            return m_has_anchorlock;
        
            }
            CT_AnchorLock* mutable_anchorlock(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_anchorlock = true;
                if (!m_anchorlock)
                {
                    m_anchorlock = new CT_AnchorLock();
                }
                return m_anchorlock;
            
            }
            const CT_AnchorLock& anchorlock(){

            if (m_anchorlock)
            {
                return *m_anchorlock;
            }
            return CT_AnchorLock::default_instance();
        
            }
            bool has_bordertop(){

            return m_has_bordertop;
        
            }
            CT_Border* mutable_bordertop(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_bordertop = true;
                if (!m_bordertop)
                {
                    m_bordertop = new CT_Border();
                }
                return m_bordertop;
            
            }
            const CT_Border& bordertop(){

            if (m_bordertop)
            {
                return *m_bordertop;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderbottom(){

            return m_has_borderbottom;
        
            }
            CT_Border* mutable_borderbottom(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_borderbottom = true;
                if (!m_borderbottom)
                {
                    m_borderbottom = new CT_Border();
                }
                return m_borderbottom;
            
            }
            const CT_Border& borderbottom(){

            if (m_borderbottom)
            {
                return *m_borderbottom;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderleft(){

            return m_has_borderleft;
        
            }
            CT_Border* mutable_borderleft(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_borderleft = true;
                if (!m_borderleft)
                {
                    m_borderleft = new CT_Border();
                }
                return m_borderleft;
            
            }
            const CT_Border& borderleft(){

            if (m_borderleft)
            {
                return *m_borderleft;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderright(){

            return m_has_borderright;
        
            }
            CT_Border* mutable_borderright(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_borderright = true;
                if (!m_borderright)
                {
                    m_borderright = new CT_Border();
                }
                return m_borderright;
            
            }
            const CT_Border& borderright(){

            if (m_borderright)
            {
                return *m_borderright;
            }
            return CT_Border::default_instance();
        
            }
            bool has_ClientData(){

            return m_has_ClientData;
        
            }
            CT_ClientData* mutable_ClientData(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ClientData = true;
                if (!m_ClientData)
                {
                    m_ClientData = new CT_ClientData();
                }
                return m_ClientData;
            
            }
            const CT_ClientData& ClientData(){

            if (m_ClientData)
            {
                return *m_ClientData;
            }
            return CT_ClientData::default_instance();
        
            }
            bool has_textdata(){

            return m_has_textdata;
        
            }
            CT_Rel* mutable_textdata(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = true;
                if (!m_textdata)
                {
                    m_textdata = new CT_Rel();
                }
                return m_textdata;
            
            }
            const CT_Rel& textdata(){

            if (m_textdata)
            {
                return *m_textdata;
            }
            return CT_Rel::default_instance();
        
            }

        private:
            bool m_has_path ;
            CT_Path* m_path ;
            bool m_has_formulas ;
            CT_Formulas* m_formulas ;
            bool m_has_handles ;
            CT_Handles* m_handles ;
            bool m_has_fill ;
            CT_Fill* m_fill ;
            bool m_has_stroke ;
            CT_Stroke* m_stroke ;
            bool m_has_shadow ;
            CT_Shadow* m_shadow ;
            bool m_has_textbox ;
            CT_Textbox* m_textbox ;
            bool m_has_textpath ;
            CT_TextPath* m_textpath ;
            bool m_has_imagedata ;
            CT_ImageData* m_imagedata ;
            bool m_has_skew ;
            CT_Skew* m_skew ;
            bool m_has_extrusion ;
            CT_Extrusion* m_extrusion ;
            bool m_has_callout ;
            CT_Callout* m_callout ;
            bool m_has_lock ;
            CT_Lock* m_lock ;
            bool m_has_clippath ;
            CT_ClipPath* m_clippath ;
            bool m_has_signatureline ;
            CT_SignatureLine* m_signatureline ;
            bool m_has_wrap ;
            CT_Wrap* m_wrap ;
            bool m_has_anchorlock ;
            CT_AnchorLock* m_anchorlock ;
            bool m_has_bordertop ;
            CT_Border* m_bordertop ;
            bool m_has_borderbottom ;
            CT_Border* m_borderbottom ;
            bool m_has_borderleft ;
            CT_Border* m_borderleft ;
            bool m_has_borderright ;
            CT_Border* m_borderright ;
            bool m_has_ClientData ;
            CT_ClientData* m_ClientData ;
            bool m_has_textdata ;
            CT_Rel* m_textdata ;

        }


    }

    class CT_PolyLine : public XSD::ComplexType{
    public:
        CT_Path* add_path(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Path* pNewChild = pChildGroup->mutable_path();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Formulas* add_formulas(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Formulas* pNewChild = pChildGroup->mutable_formulas();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Handles* add_handles(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Handles* pNewChild = pChildGroup->mutable_handles();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Fill* add_fill(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Fill* pNewChild = pChildGroup->mutable_fill();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Stroke* add_stroke(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Stroke* pNewChild = pChildGroup->mutable_stroke();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Shadow* add_shadow(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Shadow* pNewChild = pChildGroup->mutable_shadow();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Textbox* add_textbox(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Textbox* pNewChild = pChildGroup->mutable_textbox();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_TextPath* add_textpath(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_TextPath* pNewChild = pChildGroup->mutable_textpath();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ImageData* add_imagedata(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ImageData* pNewChild = pChildGroup->mutable_imagedata();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Skew* add_skew(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Skew* pNewChild = pChildGroup->mutable_skew();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Extrusion* add_extrusion(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Extrusion* pNewChild = pChildGroup->mutable_extrusion();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Callout* add_callout(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Callout* pNewChild = pChildGroup->mutable_callout();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Lock* add_lock(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Lock* pNewChild = pChildGroup->mutable_lock();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ClipPath* add_clippath(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ClipPath* pNewChild = pChildGroup->mutable_clippath();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SignatureLine* add_signatureline(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SignatureLine* pNewChild = pChildGroup->mutable_signatureline();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Wrap* add_wrap(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Wrap* pNewChild = pChildGroup->mutable_wrap();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_AnchorLock* add_anchorlock(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_AnchorLock* pNewChild = pChildGroup->mutable_anchorlock();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_bordertop(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_bordertop();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderbottom(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderbottom();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderleft(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderleft();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderright(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderright();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ClientData* add_ClientData(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ClientData* pNewChild = pChildGroup->mutable_ClientData();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Rel* add_textdata(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Rel* pNewChild = pChildGroup->mutable_textdata();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Ink* add_ink(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Ink* pNewChild = pChildGroup->mutable_ink();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        void clear(){

                m_has_points_attr = false;
                m_points_attr.clear();
            
            vector<ChildGroup_1*>::iterator iter;
            for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
            {
                delete *iter;
            }
            m_childGroupList_1.clear();
        
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    _outStream << _attrName << \=\\ << m_points_attr << \\\;
        _outStream << \>\;
    
        vector<ChildGroup_1*>::const_iterator iter;
        for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
        {
            if ((*iter)->has_path())
            {
                (*iter)->toXml(path, _outStream);
            }
            else if ((*iter)->has_formulas())
            {
                (*iter)->toXml(formulas, _outStream);
            }
            else if ((*iter)->has_handles())
            {
                (*iter)->toXml(handles, _outStream);
            }
            else if ((*iter)->has_fill())
            {
                (*iter)->toXml(fill, _outStream);
            }
            else if ((*iter)->has_stroke())
            {
                (*iter)->toXml(stroke, _outStream);
            }
            else if ((*iter)->has_shadow())
            {
                (*iter)->toXml(shadow, _outStream);
            }
            else if ((*iter)->has_textbox())
            {
                (*iter)->toXml(textbox, _outStream);
            }
            else if ((*iter)->has_textpath())
            {
                (*iter)->toXml(textpath, _outStream);
            }
            else if ((*iter)->has_imagedata())
            {
                (*iter)->toXml(imagedata, _outStream);
            }
            else if ((*iter)->has_skew())
            {
                (*iter)->toXml(skew, _outStream);
            }
            else if ((*iter)->has_extrusion())
            {
                (*iter)->toXml(extrusion, _outStream);
            }
            else if ((*iter)->has_callout())
            {
                (*iter)->toXml(callout, _outStream);
            }
            else if ((*iter)->has_lock())
            {
                (*iter)->toXml(lock, _outStream);
            }
            else if ((*iter)->has_clippath())
            {
                (*iter)->toXml(clippath, _outStream);
            }
            else if ((*iter)->has_signatureline())
            {
                (*iter)->toXml(signatureline, _outStream);
            }
            else if ((*iter)->has_wrap())
            {
                (*iter)->toXml(wrap, _outStream);
            }
            else if ((*iter)->has_anchorlock())
            {
                (*iter)->toXml(anchorlock, _outStream);
            }
            else if ((*iter)->has_bordertop())
            {
                (*iter)->toXml(bordertop, _outStream);
            }
            else if ((*iter)->has_borderbottom())
            {
                (*iter)->toXml(borderbottom, _outStream);
            }
            else if ((*iter)->has_borderleft())
            {
                (*iter)->toXml(borderleft, _outStream);
            }
            else if ((*iter)->has_borderright())
            {
                (*iter)->toXml(borderright, _outStream);
            }
            else if ((*iter)->has_ClientData())
            {
                (*iter)->toXml(ClientData, _outStream);
            }
            else if ((*iter)->has_textdata())
            {
                (*iter)->toXml(textdata, _outStream);
            }
            else if ((*iter)->has_ink())
            {
                (*iter)->toXml(ink, _outStream);
            }
        }
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_PolyLine& default_instance(){

    if (!CT_PolyLine::default_instance_)
    {
        CT_PolyLine::default_instance_ = new CT_PolyLine();
    }
    return *CT_PolyLine::default_instance_;

        }
        bool has_points_attr(){

            return m_has_points_attr;
        
        }
        void set_points_attr(const string& _points_attr ){

        m_has_points_attr = true;
        m_points_attr = _points_attr;
        
        }
        const string& points_attr(){

            return type: \string\nname: \m_points_attr\n;
        
        }

    private:
        vector<ChildGroup_1*> m_childGroupList_1 ;
        static CT_PolyLine* default_instance_ ;
        bool m_has_points_attr ;
        string m_points_attr ;
        class ChildGroup_1{
        public:
            bool has_path(){

            return m_has_path;
        
            }
            CT_Path* mutable_path(){

                
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_path = true;
                if (!m_path)
                {
                    m_path = new CT_Path();
                }
                return m_path;
            
            }
            const CT_Path& path(){

            if (m_path)
            {
                return *m_path;
            }
            return CT_Path::default_instance();
        
            }
            bool has_formulas(){

            return m_has_formulas;
        
            }
            CT_Formulas* mutable_formulas(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_formulas = true;
                if (!m_formulas)
                {
                    m_formulas = new CT_Formulas();
                }
                return m_formulas;
            
            }
            const CT_Formulas& formulas(){

            if (m_formulas)
            {
                return *m_formulas;
            }
            return CT_Formulas::default_instance();
        
            }
            bool has_handles(){

            return m_has_handles;
        
            }
            CT_Handles* mutable_handles(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_handles = true;
                if (!m_handles)
                {
                    m_handles = new CT_Handles();
                }
                return m_handles;
            
            }
            const CT_Handles& handles(){

            if (m_handles)
            {
                return *m_handles;
            }
            return CT_Handles::default_instance();
        
            }
            bool has_fill(){

            return m_has_fill;
        
            }
            CT_Fill* mutable_fill(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_fill = true;
                if (!m_fill)
                {
                    m_fill = new CT_Fill();
                }
                return m_fill;
            
            }
            const CT_Fill& fill(){

            if (m_fill)
            {
                return *m_fill;
            }
            return CT_Fill::default_instance();
        
            }
            bool has_stroke(){

            return m_has_stroke;
        
            }
            CT_Stroke* mutable_stroke(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_stroke = true;
                if (!m_stroke)
                {
                    m_stroke = new CT_Stroke();
                }
                return m_stroke;
            
            }
            const CT_Stroke& stroke(){

            if (m_stroke)
            {
                return *m_stroke;
            }
            return CT_Stroke::default_instance();
        
            }
            bool has_shadow(){

            return m_has_shadow;
        
            }
            CT_Shadow* mutable_shadow(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_shadow = true;
                if (!m_shadow)
                {
                    m_shadow = new CT_Shadow();
                }
                return m_shadow;
            
            }
            const CT_Shadow& shadow(){

            if (m_shadow)
            {
                return *m_shadow;
            }
            return CT_Shadow::default_instance();
        
            }
            bool has_textbox(){

            return m_has_textbox;
        
            }
            CT_Textbox* mutable_textbox(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_textbox = true;
                if (!m_textbox)
                {
                    m_textbox = new CT_Textbox();
                }
                return m_textbox;
            
            }
            const CT_Textbox& textbox(){

            if (m_textbox)
            {
                return *m_textbox;
            }
            return CT_Textbox::default_instance();
        
            }
            bool has_textpath(){

            return m_has_textpath;
        
            }
            CT_TextPath* mutable_textpath(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_textpath = true;
                if (!m_textpath)
                {
                    m_textpath = new CT_TextPath();
                }
                return m_textpath;
            
            }
            const CT_TextPath& textpath(){

            if (m_textpath)
            {
                return *m_textpath;
            }
            return CT_TextPath::default_instance();
        
            }
            bool has_imagedata(){

            return m_has_imagedata;
        
            }
            CT_ImageData* mutable_imagedata(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_imagedata = true;
                if (!m_imagedata)
                {
                    m_imagedata = new CT_ImageData();
                }
                return m_imagedata;
            
            }
            const CT_ImageData& imagedata(){

            if (m_imagedata)
            {
                return *m_imagedata;
            }
            return CT_ImageData::default_instance();
        
            }
            bool has_skew(){

            return m_has_skew;
        
            }
            CT_Skew* mutable_skew(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_skew = true;
                if (!m_skew)
                {
                    m_skew = new CT_Skew();
                }
                return m_skew;
            
            }
            const CT_Skew& skew(){

            if (m_skew)
            {
                return *m_skew;
            }
            return CT_Skew::default_instance();
        
            }
            bool has_extrusion(){

            return m_has_extrusion;
        
            }
            CT_Extrusion* mutable_extrusion(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_extrusion = true;
                if (!m_extrusion)
                {
                    m_extrusion = new CT_Extrusion();
                }
                return m_extrusion;
            
            }
            const CT_Extrusion& extrusion(){

            if (m_extrusion)
            {
                return *m_extrusion;
            }
            return CT_Extrusion::default_instance();
        
            }
            bool has_callout(){

            return m_has_callout;
        
            }
            CT_Callout* mutable_callout(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_callout = true;
                if (!m_callout)
                {
                    m_callout = new CT_Callout();
                }
                return m_callout;
            
            }
            const CT_Callout& callout(){

            if (m_callout)
            {
                return *m_callout;
            }
            return CT_Callout::default_instance();
        
            }
            bool has_lock(){

            return m_has_lock;
        
            }
            CT_Lock* mutable_lock(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_lock = true;
                if (!m_lock)
                {
                    m_lock = new CT_Lock();
                }
                return m_lock;
            
            }
            const CT_Lock& lock(){

            if (m_lock)
            {
                return *m_lock;
            }
            return CT_Lock::default_instance();
        
            }
            bool has_clippath(){

            return m_has_clippath;
        
            }
            CT_ClipPath* mutable_clippath(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_clippath = true;
                if (!m_clippath)
                {
                    m_clippath = new CT_ClipPath();
                }
                return m_clippath;
            
            }
            const CT_ClipPath& clippath(){

            if (m_clippath)
            {
                return *m_clippath;
            }
            return CT_ClipPath::default_instance();
        
            }
            bool has_signatureline(){

            return m_has_signatureline;
        
            }
            CT_SignatureLine* mutable_signatureline(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_signatureline = true;
                if (!m_signatureline)
                {
                    m_signatureline = new CT_SignatureLine();
                }
                return m_signatureline;
            
            }
            const CT_SignatureLine& signatureline(){

            if (m_signatureline)
            {
                return *m_signatureline;
            }
            return CT_SignatureLine::default_instance();
        
            }
            bool has_wrap(){

            return m_has_wrap;
        
            }
            CT_Wrap* mutable_wrap(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_wrap = true;
                if (!m_wrap)
                {
                    m_wrap = new CT_Wrap();
                }
                return m_wrap;
            
            }
            const CT_Wrap& wrap(){

            if (m_wrap)
            {
                return *m_wrap;
            }
            return CT_Wrap::default_instance();
        
            }
            bool has_anchorlock(){

            return m_has_anchorlock;
        
            }
            CT_AnchorLock* mutable_anchorlock(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_anchorlock = true;
                if (!m_anchorlock)
                {
                    m_anchorlock = new CT_AnchorLock();
                }
                return m_anchorlock;
            
            }
            const CT_AnchorLock& anchorlock(){

            if (m_anchorlock)
            {
                return *m_anchorlock;
            }
            return CT_AnchorLock::default_instance();
        
            }
            bool has_bordertop(){

            return m_has_bordertop;
        
            }
            CT_Border* mutable_bordertop(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_bordertop = true;
                if (!m_bordertop)
                {
                    m_bordertop = new CT_Border();
                }
                return m_bordertop;
            
            }
            const CT_Border& bordertop(){

            if (m_bordertop)
            {
                return *m_bordertop;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderbottom(){

            return m_has_borderbottom;
        
            }
            CT_Border* mutable_borderbottom(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_borderbottom = true;
                if (!m_borderbottom)
                {
                    m_borderbottom = new CT_Border();
                }
                return m_borderbottom;
            
            }
            const CT_Border& borderbottom(){

            if (m_borderbottom)
            {
                return *m_borderbottom;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderleft(){

            return m_has_borderleft;
        
            }
            CT_Border* mutable_borderleft(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_borderleft = true;
                if (!m_borderleft)
                {
                    m_borderleft = new CT_Border();
                }
                return m_borderleft;
            
            }
            const CT_Border& borderleft(){

            if (m_borderleft)
            {
                return *m_borderleft;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderright(){

            return m_has_borderright;
        
            }
            CT_Border* mutable_borderright(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_borderright = true;
                if (!m_borderright)
                {
                    m_borderright = new CT_Border();
                }
                return m_borderright;
            
            }
            const CT_Border& borderright(){

            if (m_borderright)
            {
                return *m_borderright;
            }
            return CT_Border::default_instance();
        
            }
            bool has_ClientData(){

            return m_has_ClientData;
        
            }
            CT_ClientData* mutable_ClientData(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_ClientData = true;
                if (!m_ClientData)
                {
                    m_ClientData = new CT_ClientData();
                }
                return m_ClientData;
            
            }
            const CT_ClientData& ClientData(){

            if (m_ClientData)
            {
                return *m_ClientData;
            }
            return CT_ClientData::default_instance();
        
            }
            bool has_textdata(){

            return m_has_textdata;
        
            }
            CT_Rel* mutable_textdata(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_ink = false;
                
        if (m_ink)
        {
            delete m_ink;
            m_ink = NULL;
        }
    ;
            
                m_has_textdata = true;
                if (!m_textdata)
                {
                    m_textdata = new CT_Rel();
                }
                return m_textdata;
            
            }
            const CT_Rel& textdata(){

            if (m_textdata)
            {
                return *m_textdata;
            }
            return CT_Rel::default_instance();
        
            }
            bool has_ink(){

            return m_has_ink;
        
            }
            CT_Ink* mutable_ink(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ink = true;
                if (!m_ink)
                {
                    m_ink = new CT_Ink();
                }
                return m_ink;
            
            }
            const CT_Ink& ink(){

            if (m_ink)
            {
                return *m_ink;
            }
            return CT_Ink::default_instance();
        
            }

        private:
            bool m_has_path ;
            CT_Path* m_path ;
            bool m_has_formulas ;
            CT_Formulas* m_formulas ;
            bool m_has_handles ;
            CT_Handles* m_handles ;
            bool m_has_fill ;
            CT_Fill* m_fill ;
            bool m_has_stroke ;
            CT_Stroke* m_stroke ;
            bool m_has_shadow ;
            CT_Shadow* m_shadow ;
            bool m_has_textbox ;
            CT_Textbox* m_textbox ;
            bool m_has_textpath ;
            CT_TextPath* m_textpath ;
            bool m_has_imagedata ;
            CT_ImageData* m_imagedata ;
            bool m_has_skew ;
            CT_Skew* m_skew ;
            bool m_has_extrusion ;
            CT_Extrusion* m_extrusion ;
            bool m_has_callout ;
            CT_Callout* m_callout ;
            bool m_has_lock ;
            CT_Lock* m_lock ;
            bool m_has_clippath ;
            CT_ClipPath* m_clippath ;
            bool m_has_signatureline ;
            CT_SignatureLine* m_signatureline ;
            bool m_has_wrap ;
            CT_Wrap* m_wrap ;
            bool m_has_anchorlock ;
            CT_AnchorLock* m_anchorlock ;
            bool m_has_bordertop ;
            CT_Border* m_bordertop ;
            bool m_has_borderbottom ;
            CT_Border* m_borderbottom ;
            bool m_has_borderleft ;
            CT_Border* m_borderleft ;
            bool m_has_borderright ;
            CT_Border* m_borderright ;
            bool m_has_ClientData ;
            CT_ClientData* m_ClientData ;
            bool m_has_textdata ;
            CT_Rel* m_textdata ;
            bool m_has_ink ;
            CT_Ink* m_ink ;

        }


    }

    class CT_Rect : public XSD::ComplexType{
    public:
        CT_Path* add_path(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Path* pNewChild = pChildGroup->mutable_path();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Formulas* add_formulas(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Formulas* pNewChild = pChildGroup->mutable_formulas();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Handles* add_handles(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Handles* pNewChild = pChildGroup->mutable_handles();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Fill* add_fill(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Fill* pNewChild = pChildGroup->mutable_fill();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Stroke* add_stroke(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Stroke* pNewChild = pChildGroup->mutable_stroke();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Shadow* add_shadow(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Shadow* pNewChild = pChildGroup->mutable_shadow();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Textbox* add_textbox(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Textbox* pNewChild = pChildGroup->mutable_textbox();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_TextPath* add_textpath(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_TextPath* pNewChild = pChildGroup->mutable_textpath();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ImageData* add_imagedata(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ImageData* pNewChild = pChildGroup->mutable_imagedata();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Skew* add_skew(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Skew* pNewChild = pChildGroup->mutable_skew();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Extrusion* add_extrusion(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Extrusion* pNewChild = pChildGroup->mutable_extrusion();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Callout* add_callout(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Callout* pNewChild = pChildGroup->mutable_callout();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Lock* add_lock(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Lock* pNewChild = pChildGroup->mutable_lock();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ClipPath* add_clippath(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ClipPath* pNewChild = pChildGroup->mutable_clippath();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SignatureLine* add_signatureline(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SignatureLine* pNewChild = pChildGroup->mutable_signatureline();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Wrap* add_wrap(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Wrap* pNewChild = pChildGroup->mutable_wrap();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_AnchorLock* add_anchorlock(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_AnchorLock* pNewChild = pChildGroup->mutable_anchorlock();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_bordertop(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_bordertop();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderbottom(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderbottom();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderleft(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderleft();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderright(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderright();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ClientData* add_ClientData(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ClientData* pNewChild = pChildGroup->mutable_ClientData();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Rel* add_textdata(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Rel* pNewChild = pChildGroup->mutable_textdata();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        void clear(){

            vector<ChildGroup_1*>::iterator iter;
            for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
            {
                delete *iter;
            }
            m_childGroupList_1.clear();
        
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
        vector<ChildGroup_1*>::const_iterator iter;
        for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
        {
            if ((*iter)->has_path())
            {
                (*iter)->toXml(path, _outStream);
            }
            else if ((*iter)->has_formulas())
            {
                (*iter)->toXml(formulas, _outStream);
            }
            else if ((*iter)->has_handles())
            {
                (*iter)->toXml(handles, _outStream);
            }
            else if ((*iter)->has_fill())
            {
                (*iter)->toXml(fill, _outStream);
            }
            else if ((*iter)->has_stroke())
            {
                (*iter)->toXml(stroke, _outStream);
            }
            else if ((*iter)->has_shadow())
            {
                (*iter)->toXml(shadow, _outStream);
            }
            else if ((*iter)->has_textbox())
            {
                (*iter)->toXml(textbox, _outStream);
            }
            else if ((*iter)->has_textpath())
            {
                (*iter)->toXml(textpath, _outStream);
            }
            else if ((*iter)->has_imagedata())
            {
                (*iter)->toXml(imagedata, _outStream);
            }
            else if ((*iter)->has_skew())
            {
                (*iter)->toXml(skew, _outStream);
            }
            else if ((*iter)->has_extrusion())
            {
                (*iter)->toXml(extrusion, _outStream);
            }
            else if ((*iter)->has_callout())
            {
                (*iter)->toXml(callout, _outStream);
            }
            else if ((*iter)->has_lock())
            {
                (*iter)->toXml(lock, _outStream);
            }
            else if ((*iter)->has_clippath())
            {
                (*iter)->toXml(clippath, _outStream);
            }
            else if ((*iter)->has_signatureline())
            {
                (*iter)->toXml(signatureline, _outStream);
            }
            else if ((*iter)->has_wrap())
            {
                (*iter)->toXml(wrap, _outStream);
            }
            else if ((*iter)->has_anchorlock())
            {
                (*iter)->toXml(anchorlock, _outStream);
            }
            else if ((*iter)->has_bordertop())
            {
                (*iter)->toXml(bordertop, _outStream);
            }
            else if ((*iter)->has_borderbottom())
            {
                (*iter)->toXml(borderbottom, _outStream);
            }
            else if ((*iter)->has_borderleft())
            {
                (*iter)->toXml(borderleft, _outStream);
            }
            else if ((*iter)->has_borderright())
            {
                (*iter)->toXml(borderright, _outStream);
            }
            else if ((*iter)->has_ClientData())
            {
                (*iter)->toXml(ClientData, _outStream);
            }
            else if ((*iter)->has_textdata())
            {
                (*iter)->toXml(textdata, _outStream);
            }
        }
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Rect& default_instance(){

    if (!CT_Rect::default_instance_)
    {
        CT_Rect::default_instance_ = new CT_Rect();
    }
    return *CT_Rect::default_instance_;

        }

    private:
        vector<ChildGroup_1*> m_childGroupList_1 ;
        static CT_Rect* default_instance_ ;
        class ChildGroup_1{
        public:
            bool has_path(){

            return m_has_path;
        
            }
            CT_Path* mutable_path(){

                
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_path = true;
                if (!m_path)
                {
                    m_path = new CT_Path();
                }
                return m_path;
            
            }
            const CT_Path& path(){

            if (m_path)
            {
                return *m_path;
            }
            return CT_Path::default_instance();
        
            }
            bool has_formulas(){

            return m_has_formulas;
        
            }
            CT_Formulas* mutable_formulas(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_formulas = true;
                if (!m_formulas)
                {
                    m_formulas = new CT_Formulas();
                }
                return m_formulas;
            
            }
            const CT_Formulas& formulas(){

            if (m_formulas)
            {
                return *m_formulas;
            }
            return CT_Formulas::default_instance();
        
            }
            bool has_handles(){

            return m_has_handles;
        
            }
            CT_Handles* mutable_handles(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_handles = true;
                if (!m_handles)
                {
                    m_handles = new CT_Handles();
                }
                return m_handles;
            
            }
            const CT_Handles& handles(){

            if (m_handles)
            {
                return *m_handles;
            }
            return CT_Handles::default_instance();
        
            }
            bool has_fill(){

            return m_has_fill;
        
            }
            CT_Fill* mutable_fill(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_fill = true;
                if (!m_fill)
                {
                    m_fill = new CT_Fill();
                }
                return m_fill;
            
            }
            const CT_Fill& fill(){

            if (m_fill)
            {
                return *m_fill;
            }
            return CT_Fill::default_instance();
        
            }
            bool has_stroke(){

            return m_has_stroke;
        
            }
            CT_Stroke* mutable_stroke(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_stroke = true;
                if (!m_stroke)
                {
                    m_stroke = new CT_Stroke();
                }
                return m_stroke;
            
            }
            const CT_Stroke& stroke(){

            if (m_stroke)
            {
                return *m_stroke;
            }
            return CT_Stroke::default_instance();
        
            }
            bool has_shadow(){

            return m_has_shadow;
        
            }
            CT_Shadow* mutable_shadow(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_shadow = true;
                if (!m_shadow)
                {
                    m_shadow = new CT_Shadow();
                }
                return m_shadow;
            
            }
            const CT_Shadow& shadow(){

            if (m_shadow)
            {
                return *m_shadow;
            }
            return CT_Shadow::default_instance();
        
            }
            bool has_textbox(){

            return m_has_textbox;
        
            }
            CT_Textbox* mutable_textbox(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_textbox = true;
                if (!m_textbox)
                {
                    m_textbox = new CT_Textbox();
                }
                return m_textbox;
            
            }
            const CT_Textbox& textbox(){

            if (m_textbox)
            {
                return *m_textbox;
            }
            return CT_Textbox::default_instance();
        
            }
            bool has_textpath(){

            return m_has_textpath;
        
            }
            CT_TextPath* mutable_textpath(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_textpath = true;
                if (!m_textpath)
                {
                    m_textpath = new CT_TextPath();
                }
                return m_textpath;
            
            }
            const CT_TextPath& textpath(){

            if (m_textpath)
            {
                return *m_textpath;
            }
            return CT_TextPath::default_instance();
        
            }
            bool has_imagedata(){

            return m_has_imagedata;
        
            }
            CT_ImageData* mutable_imagedata(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_imagedata = true;
                if (!m_imagedata)
                {
                    m_imagedata = new CT_ImageData();
                }
                return m_imagedata;
            
            }
            const CT_ImageData& imagedata(){

            if (m_imagedata)
            {
                return *m_imagedata;
            }
            return CT_ImageData::default_instance();
        
            }
            bool has_skew(){

            return m_has_skew;
        
            }
            CT_Skew* mutable_skew(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_skew = true;
                if (!m_skew)
                {
                    m_skew = new CT_Skew();
                }
                return m_skew;
            
            }
            const CT_Skew& skew(){

            if (m_skew)
            {
                return *m_skew;
            }
            return CT_Skew::default_instance();
        
            }
            bool has_extrusion(){

            return m_has_extrusion;
        
            }
            CT_Extrusion* mutable_extrusion(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_extrusion = true;
                if (!m_extrusion)
                {
                    m_extrusion = new CT_Extrusion();
                }
                return m_extrusion;
            
            }
            const CT_Extrusion& extrusion(){

            if (m_extrusion)
            {
                return *m_extrusion;
            }
            return CT_Extrusion::default_instance();
        
            }
            bool has_callout(){

            return m_has_callout;
        
            }
            CT_Callout* mutable_callout(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_callout = true;
                if (!m_callout)
                {
                    m_callout = new CT_Callout();
                }
                return m_callout;
            
            }
            const CT_Callout& callout(){

            if (m_callout)
            {
                return *m_callout;
            }
            return CT_Callout::default_instance();
        
            }
            bool has_lock(){

            return m_has_lock;
        
            }
            CT_Lock* mutable_lock(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_lock = true;
                if (!m_lock)
                {
                    m_lock = new CT_Lock();
                }
                return m_lock;
            
            }
            const CT_Lock& lock(){

            if (m_lock)
            {
                return *m_lock;
            }
            return CT_Lock::default_instance();
        
            }
            bool has_clippath(){

            return m_has_clippath;
        
            }
            CT_ClipPath* mutable_clippath(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_clippath = true;
                if (!m_clippath)
                {
                    m_clippath = new CT_ClipPath();
                }
                return m_clippath;
            
            }
            const CT_ClipPath& clippath(){

            if (m_clippath)
            {
                return *m_clippath;
            }
            return CT_ClipPath::default_instance();
        
            }
            bool has_signatureline(){

            return m_has_signatureline;
        
            }
            CT_SignatureLine* mutable_signatureline(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_signatureline = true;
                if (!m_signatureline)
                {
                    m_signatureline = new CT_SignatureLine();
                }
                return m_signatureline;
            
            }
            const CT_SignatureLine& signatureline(){

            if (m_signatureline)
            {
                return *m_signatureline;
            }
            return CT_SignatureLine::default_instance();
        
            }
            bool has_wrap(){

            return m_has_wrap;
        
            }
            CT_Wrap* mutable_wrap(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_wrap = true;
                if (!m_wrap)
                {
                    m_wrap = new CT_Wrap();
                }
                return m_wrap;
            
            }
            const CT_Wrap& wrap(){

            if (m_wrap)
            {
                return *m_wrap;
            }
            return CT_Wrap::default_instance();
        
            }
            bool has_anchorlock(){

            return m_has_anchorlock;
        
            }
            CT_AnchorLock* mutable_anchorlock(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_anchorlock = true;
                if (!m_anchorlock)
                {
                    m_anchorlock = new CT_AnchorLock();
                }
                return m_anchorlock;
            
            }
            const CT_AnchorLock& anchorlock(){

            if (m_anchorlock)
            {
                return *m_anchorlock;
            }
            return CT_AnchorLock::default_instance();
        
            }
            bool has_bordertop(){

            return m_has_bordertop;
        
            }
            CT_Border* mutable_bordertop(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_bordertop = true;
                if (!m_bordertop)
                {
                    m_bordertop = new CT_Border();
                }
                return m_bordertop;
            
            }
            const CT_Border& bordertop(){

            if (m_bordertop)
            {
                return *m_bordertop;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderbottom(){

            return m_has_borderbottom;
        
            }
            CT_Border* mutable_borderbottom(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_borderbottom = true;
                if (!m_borderbottom)
                {
                    m_borderbottom = new CT_Border();
                }
                return m_borderbottom;
            
            }
            const CT_Border& borderbottom(){

            if (m_borderbottom)
            {
                return *m_borderbottom;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderleft(){

            return m_has_borderleft;
        
            }
            CT_Border* mutable_borderleft(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_borderleft = true;
                if (!m_borderleft)
                {
                    m_borderleft = new CT_Border();
                }
                return m_borderleft;
            
            }
            const CT_Border& borderleft(){

            if (m_borderleft)
            {
                return *m_borderleft;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderright(){

            return m_has_borderright;
        
            }
            CT_Border* mutable_borderright(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_borderright = true;
                if (!m_borderright)
                {
                    m_borderright = new CT_Border();
                }
                return m_borderright;
            
            }
            const CT_Border& borderright(){

            if (m_borderright)
            {
                return *m_borderright;
            }
            return CT_Border::default_instance();
        
            }
            bool has_ClientData(){

            return m_has_ClientData;
        
            }
            CT_ClientData* mutable_ClientData(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ClientData = true;
                if (!m_ClientData)
                {
                    m_ClientData = new CT_ClientData();
                }
                return m_ClientData;
            
            }
            const CT_ClientData& ClientData(){

            if (m_ClientData)
            {
                return *m_ClientData;
            }
            return CT_ClientData::default_instance();
        
            }
            bool has_textdata(){

            return m_has_textdata;
        
            }
            CT_Rel* mutable_textdata(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = true;
                if (!m_textdata)
                {
                    m_textdata = new CT_Rel();
                }
                return m_textdata;
            
            }
            const CT_Rel& textdata(){

            if (m_textdata)
            {
                return *m_textdata;
            }
            return CT_Rel::default_instance();
        
            }

        private:
            bool m_has_path ;
            CT_Path* m_path ;
            bool m_has_formulas ;
            CT_Formulas* m_formulas ;
            bool m_has_handles ;
            CT_Handles* m_handles ;
            bool m_has_fill ;
            CT_Fill* m_fill ;
            bool m_has_stroke ;
            CT_Stroke* m_stroke ;
            bool m_has_shadow ;
            CT_Shadow* m_shadow ;
            bool m_has_textbox ;
            CT_Textbox* m_textbox ;
            bool m_has_textpath ;
            CT_TextPath* m_textpath ;
            bool m_has_imagedata ;
            CT_ImageData* m_imagedata ;
            bool m_has_skew ;
            CT_Skew* m_skew ;
            bool m_has_extrusion ;
            CT_Extrusion* m_extrusion ;
            bool m_has_callout ;
            CT_Callout* m_callout ;
            bool m_has_lock ;
            CT_Lock* m_lock ;
            bool m_has_clippath ;
            CT_ClipPath* m_clippath ;
            bool m_has_signatureline ;
            CT_SignatureLine* m_signatureline ;
            bool m_has_wrap ;
            CT_Wrap* m_wrap ;
            bool m_has_anchorlock ;
            CT_AnchorLock* m_anchorlock ;
            bool m_has_bordertop ;
            CT_Border* m_bordertop ;
            bool m_has_borderbottom ;
            CT_Border* m_borderbottom ;
            bool m_has_borderleft ;
            CT_Border* m_borderleft ;
            bool m_has_borderright ;
            CT_Border* m_borderright ;
            bool m_has_ClientData ;
            CT_ClientData* m_ClientData ;
            bool m_has_textdata ;
            CT_Rel* m_textdata ;

        }


    }

    class CT_RoundRect : public XSD::ComplexType{
    public:
        CT_Path* add_path(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Path* pNewChild = pChildGroup->mutable_path();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Formulas* add_formulas(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Formulas* pNewChild = pChildGroup->mutable_formulas();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Handles* add_handles(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Handles* pNewChild = pChildGroup->mutable_handles();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Fill* add_fill(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Fill* pNewChild = pChildGroup->mutable_fill();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Stroke* add_stroke(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Stroke* pNewChild = pChildGroup->mutable_stroke();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Shadow* add_shadow(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Shadow* pNewChild = pChildGroup->mutable_shadow();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Textbox* add_textbox(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Textbox* pNewChild = pChildGroup->mutable_textbox();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_TextPath* add_textpath(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_TextPath* pNewChild = pChildGroup->mutable_textpath();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ImageData* add_imagedata(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ImageData* pNewChild = pChildGroup->mutable_imagedata();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Skew* add_skew(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Skew* pNewChild = pChildGroup->mutable_skew();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Extrusion* add_extrusion(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Extrusion* pNewChild = pChildGroup->mutable_extrusion();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Callout* add_callout(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Callout* pNewChild = pChildGroup->mutable_callout();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Lock* add_lock(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Lock* pNewChild = pChildGroup->mutable_lock();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ClipPath* add_clippath(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ClipPath* pNewChild = pChildGroup->mutable_clippath();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SignatureLine* add_signatureline(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SignatureLine* pNewChild = pChildGroup->mutable_signatureline();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Wrap* add_wrap(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Wrap* pNewChild = pChildGroup->mutable_wrap();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_AnchorLock* add_anchorlock(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_AnchorLock* pNewChild = pChildGroup->mutable_anchorlock();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_bordertop(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_bordertop();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderbottom(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderbottom();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderleft(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderleft();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Border* add_borderright(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Border* pNewChild = pChildGroup->mutable_borderright();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ClientData* add_ClientData(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ClientData* pNewChild = pChildGroup->mutable_ClientData();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Rel* add_textdata(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Rel* pNewChild = pChildGroup->mutable_textdata();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        void clear(){

                m_has_arcsize_attr = false;
                m_arcsize_attr.clear();
            
            vector<ChildGroup_1*>::iterator iter;
            for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
            {
                delete *iter;
            }
            m_childGroupList_1.clear();
        
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    _outStream << _attrName << \=\\ << m_arcsize_attr << \\\;
        _outStream << \>\;
    
        vector<ChildGroup_1*>::const_iterator iter;
        for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
        {
            if ((*iter)->has_path())
            {
                (*iter)->toXml(path, _outStream);
            }
            else if ((*iter)->has_formulas())
            {
                (*iter)->toXml(formulas, _outStream);
            }
            else if ((*iter)->has_handles())
            {
                (*iter)->toXml(handles, _outStream);
            }
            else if ((*iter)->has_fill())
            {
                (*iter)->toXml(fill, _outStream);
            }
            else if ((*iter)->has_stroke())
            {
                (*iter)->toXml(stroke, _outStream);
            }
            else if ((*iter)->has_shadow())
            {
                (*iter)->toXml(shadow, _outStream);
            }
            else if ((*iter)->has_textbox())
            {
                (*iter)->toXml(textbox, _outStream);
            }
            else if ((*iter)->has_textpath())
            {
                (*iter)->toXml(textpath, _outStream);
            }
            else if ((*iter)->has_imagedata())
            {
                (*iter)->toXml(imagedata, _outStream);
            }
            else if ((*iter)->has_skew())
            {
                (*iter)->toXml(skew, _outStream);
            }
            else if ((*iter)->has_extrusion())
            {
                (*iter)->toXml(extrusion, _outStream);
            }
            else if ((*iter)->has_callout())
            {
                (*iter)->toXml(callout, _outStream);
            }
            else if ((*iter)->has_lock())
            {
                (*iter)->toXml(lock, _outStream);
            }
            else if ((*iter)->has_clippath())
            {
                (*iter)->toXml(clippath, _outStream);
            }
            else if ((*iter)->has_signatureline())
            {
                (*iter)->toXml(signatureline, _outStream);
            }
            else if ((*iter)->has_wrap())
            {
                (*iter)->toXml(wrap, _outStream);
            }
            else if ((*iter)->has_anchorlock())
            {
                (*iter)->toXml(anchorlock, _outStream);
            }
            else if ((*iter)->has_bordertop())
            {
                (*iter)->toXml(bordertop, _outStream);
            }
            else if ((*iter)->has_borderbottom())
            {
                (*iter)->toXml(borderbottom, _outStream);
            }
            else if ((*iter)->has_borderleft())
            {
                (*iter)->toXml(borderleft, _outStream);
            }
            else if ((*iter)->has_borderright())
            {
                (*iter)->toXml(borderright, _outStream);
            }
            else if ((*iter)->has_ClientData())
            {
                (*iter)->toXml(ClientData, _outStream);
            }
            else if ((*iter)->has_textdata())
            {
                (*iter)->toXml(textdata, _outStream);
            }
        }
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_RoundRect& default_instance(){

    if (!CT_RoundRect::default_instance_)
    {
        CT_RoundRect::default_instance_ = new CT_RoundRect();
    }
    return *CT_RoundRect::default_instance_;

        }
        bool has_arcsize_attr(){

            return m_has_arcsize_attr;
        
        }
        void set_arcsize_attr(const string& _arcsize_attr ){

        m_has_arcsize_attr = true;
        m_arcsize_attr = _arcsize_attr;
        
        }
        const string& arcsize_attr(){

            return type: \string\nname: \m_arcsize_attr\n;
        
        }

    private:
        vector<ChildGroup_1*> m_childGroupList_1 ;
        static CT_RoundRect* default_instance_ ;
        bool m_has_arcsize_attr ;
        string m_arcsize_attr ;
        class ChildGroup_1{
        public:
            bool has_path(){

            return m_has_path;
        
            }
            CT_Path* mutable_path(){

                
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_path = true;
                if (!m_path)
                {
                    m_path = new CT_Path();
                }
                return m_path;
            
            }
            const CT_Path& path(){

            if (m_path)
            {
                return *m_path;
            }
            return CT_Path::default_instance();
        
            }
            bool has_formulas(){

            return m_has_formulas;
        
            }
            CT_Formulas* mutable_formulas(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_formulas = true;
                if (!m_formulas)
                {
                    m_formulas = new CT_Formulas();
                }
                return m_formulas;
            
            }
            const CT_Formulas& formulas(){

            if (m_formulas)
            {
                return *m_formulas;
            }
            return CT_Formulas::default_instance();
        
            }
            bool has_handles(){

            return m_has_handles;
        
            }
            CT_Handles* mutable_handles(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_handles = true;
                if (!m_handles)
                {
                    m_handles = new CT_Handles();
                }
                return m_handles;
            
            }
            const CT_Handles& handles(){

            if (m_handles)
            {
                return *m_handles;
            }
            return CT_Handles::default_instance();
        
            }
            bool has_fill(){

            return m_has_fill;
        
            }
            CT_Fill* mutable_fill(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_fill = true;
                if (!m_fill)
                {
                    m_fill = new CT_Fill();
                }
                return m_fill;
            
            }
            const CT_Fill& fill(){

            if (m_fill)
            {
                return *m_fill;
            }
            return CT_Fill::default_instance();
        
            }
            bool has_stroke(){

            return m_has_stroke;
        
            }
            CT_Stroke* mutable_stroke(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_stroke = true;
                if (!m_stroke)
                {
                    m_stroke = new CT_Stroke();
                }
                return m_stroke;
            
            }
            const CT_Stroke& stroke(){

            if (m_stroke)
            {
                return *m_stroke;
            }
            return CT_Stroke::default_instance();
        
            }
            bool has_shadow(){

            return m_has_shadow;
        
            }
            CT_Shadow* mutable_shadow(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_shadow = true;
                if (!m_shadow)
                {
                    m_shadow = new CT_Shadow();
                }
                return m_shadow;
            
            }
            const CT_Shadow& shadow(){

            if (m_shadow)
            {
                return *m_shadow;
            }
            return CT_Shadow::default_instance();
        
            }
            bool has_textbox(){

            return m_has_textbox;
        
            }
            CT_Textbox* mutable_textbox(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_textbox = true;
                if (!m_textbox)
                {
                    m_textbox = new CT_Textbox();
                }
                return m_textbox;
            
            }
            const CT_Textbox& textbox(){

            if (m_textbox)
            {
                return *m_textbox;
            }
            return CT_Textbox::default_instance();
        
            }
            bool has_textpath(){

            return m_has_textpath;
        
            }
            CT_TextPath* mutable_textpath(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_textpath = true;
                if (!m_textpath)
                {
                    m_textpath = new CT_TextPath();
                }
                return m_textpath;
            
            }
            const CT_TextPath& textpath(){

            if (m_textpath)
            {
                return *m_textpath;
            }
            return CT_TextPath::default_instance();
        
            }
            bool has_imagedata(){

            return m_has_imagedata;
        
            }
            CT_ImageData* mutable_imagedata(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_imagedata = true;
                if (!m_imagedata)
                {
                    m_imagedata = new CT_ImageData();
                }
                return m_imagedata;
            
            }
            const CT_ImageData& imagedata(){

            if (m_imagedata)
            {
                return *m_imagedata;
            }
            return CT_ImageData::default_instance();
        
            }
            bool has_skew(){

            return m_has_skew;
        
            }
            CT_Skew* mutable_skew(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_skew = true;
                if (!m_skew)
                {
                    m_skew = new CT_Skew();
                }
                return m_skew;
            
            }
            const CT_Skew& skew(){

            if (m_skew)
            {
                return *m_skew;
            }
            return CT_Skew::default_instance();
        
            }
            bool has_extrusion(){

            return m_has_extrusion;
        
            }
            CT_Extrusion* mutable_extrusion(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_extrusion = true;
                if (!m_extrusion)
                {
                    m_extrusion = new CT_Extrusion();
                }
                return m_extrusion;
            
            }
            const CT_Extrusion& extrusion(){

            if (m_extrusion)
            {
                return *m_extrusion;
            }
            return CT_Extrusion::default_instance();
        
            }
            bool has_callout(){

            return m_has_callout;
        
            }
            CT_Callout* mutable_callout(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_callout = true;
                if (!m_callout)
                {
                    m_callout = new CT_Callout();
                }
                return m_callout;
            
            }
            const CT_Callout& callout(){

            if (m_callout)
            {
                return *m_callout;
            }
            return CT_Callout::default_instance();
        
            }
            bool has_lock(){

            return m_has_lock;
        
            }
            CT_Lock* mutable_lock(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_lock = true;
                if (!m_lock)
                {
                    m_lock = new CT_Lock();
                }
                return m_lock;
            
            }
            const CT_Lock& lock(){

            if (m_lock)
            {
                return *m_lock;
            }
            return CT_Lock::default_instance();
        
            }
            bool has_clippath(){

            return m_has_clippath;
        
            }
            CT_ClipPath* mutable_clippath(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_clippath = true;
                if (!m_clippath)
                {
                    m_clippath = new CT_ClipPath();
                }
                return m_clippath;
            
            }
            const CT_ClipPath& clippath(){

            if (m_clippath)
            {
                return *m_clippath;
            }
            return CT_ClipPath::default_instance();
        
            }
            bool has_signatureline(){

            return m_has_signatureline;
        
            }
            CT_SignatureLine* mutable_signatureline(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_signatureline = true;
                if (!m_signatureline)
                {
                    m_signatureline = new CT_SignatureLine();
                }
                return m_signatureline;
            
            }
            const CT_SignatureLine& signatureline(){

            if (m_signatureline)
            {
                return *m_signatureline;
            }
            return CT_SignatureLine::default_instance();
        
            }
            bool has_wrap(){

            return m_has_wrap;
        
            }
            CT_Wrap* mutable_wrap(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_wrap = true;
                if (!m_wrap)
                {
                    m_wrap = new CT_Wrap();
                }
                return m_wrap;
            
            }
            const CT_Wrap& wrap(){

            if (m_wrap)
            {
                return *m_wrap;
            }
            return CT_Wrap::default_instance();
        
            }
            bool has_anchorlock(){

            return m_has_anchorlock;
        
            }
            CT_AnchorLock* mutable_anchorlock(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_anchorlock = true;
                if (!m_anchorlock)
                {
                    m_anchorlock = new CT_AnchorLock();
                }
                return m_anchorlock;
            
            }
            const CT_AnchorLock& anchorlock(){

            if (m_anchorlock)
            {
                return *m_anchorlock;
            }
            return CT_AnchorLock::default_instance();
        
            }
            bool has_bordertop(){

            return m_has_bordertop;
        
            }
            CT_Border* mutable_bordertop(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_bordertop = true;
                if (!m_bordertop)
                {
                    m_bordertop = new CT_Border();
                }
                return m_bordertop;
            
            }
            const CT_Border& bordertop(){

            if (m_bordertop)
            {
                return *m_bordertop;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderbottom(){

            return m_has_borderbottom;
        
            }
            CT_Border* mutable_borderbottom(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_borderbottom = true;
                if (!m_borderbottom)
                {
                    m_borderbottom = new CT_Border();
                }
                return m_borderbottom;
            
            }
            const CT_Border& borderbottom(){

            if (m_borderbottom)
            {
                return *m_borderbottom;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderleft(){

            return m_has_borderleft;
        
            }
            CT_Border* mutable_borderleft(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_borderleft = true;
                if (!m_borderleft)
                {
                    m_borderleft = new CT_Border();
                }
                return m_borderleft;
            
            }
            const CT_Border& borderleft(){

            if (m_borderleft)
            {
                return *m_borderleft;
            }
            return CT_Border::default_instance();
        
            }
            bool has_borderright(){

            return m_has_borderright;
        
            }
            CT_Border* mutable_borderright(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_borderright = true;
                if (!m_borderright)
                {
                    m_borderright = new CT_Border();
                }
                return m_borderright;
            
            }
            const CT_Border& borderright(){

            if (m_borderright)
            {
                return *m_borderright;
            }
            return CT_Border::default_instance();
        
            }
            bool has_ClientData(){

            return m_has_ClientData;
        
            }
            CT_ClientData* mutable_ClientData(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_textdata = false;
                
        if (m_textdata)
        {
            delete m_textdata;
            m_textdata = NULL;
        }
    ;
            
                m_has_ClientData = true;
                if (!m_ClientData)
                {
                    m_ClientData = new CT_ClientData();
                }
                return m_ClientData;
            
            }
            const CT_ClientData& ClientData(){

            if (m_ClientData)
            {
                return *m_ClientData;
            }
            return CT_ClientData::default_instance();
        
            }
            bool has_textdata(){

            return m_has_textdata;
        
            }
            CT_Rel* mutable_textdata(){

                
                m_has_path = false;
                
        if (m_path)
        {
            delete m_path;
            m_path = NULL;
        }
    ;
            
                m_has_formulas = false;
                
        if (m_formulas)
        {
            delete m_formulas;
            m_formulas = NULL;
        }
    ;
            
                m_has_handles = false;
                
        if (m_handles)
        {
            delete m_handles;
            m_handles = NULL;
        }
    ;
            
                m_has_fill = false;
                
        if (m_fill)
        {
            delete m_fill;
            m_fill = NULL;
        }
    ;
            
                m_has_stroke = false;
                
        if (m_stroke)
        {
            delete m_stroke;
            m_stroke = NULL;
        }
    ;
            
                m_has_shadow = false;
                
        if (m_shadow)
        {
            delete m_shadow;
            m_shadow = NULL;
        }
    ;
            
                m_has_textbox = false;
                
        if (m_textbox)
        {
            delete m_textbox;
            m_textbox = NULL;
        }
    ;
            
                m_has_textpath = false;
                
        if (m_textpath)
        {
            delete m_textpath;
            m_textpath = NULL;
        }
    ;
            
                m_has_imagedata = false;
                
        if (m_imagedata)
        {
            delete m_imagedata;
            m_imagedata = NULL;
        }
    ;
            
                m_has_skew = false;
                
        if (m_skew)
        {
            delete m_skew;
            m_skew = NULL;
        }
    ;
            
                m_has_extrusion = false;
                
        if (m_extrusion)
        {
            delete m_extrusion;
            m_extrusion = NULL;
        }
    ;
            
                m_has_callout = false;
                
        if (m_callout)
        {
            delete m_callout;
            m_callout = NULL;
        }
    ;
            
                m_has_lock = false;
                
        if (m_lock)
        {
            delete m_lock;
            m_lock = NULL;
        }
    ;
            
                m_has_clippath = false;
                
        if (m_clippath)
        {
            delete m_clippath;
            m_clippath = NULL;
        }
    ;
            
                m_has_signatureline = false;
                
        if (m_signatureline)
        {
            delete m_signatureline;
            m_signatureline = NULL;
        }
    ;
            
                m_has_wrap = false;
                
        if (m_wrap)
        {
            delete m_wrap;
            m_wrap = NULL;
        }
    ;
            
                m_has_anchorlock = false;
                
        if (m_anchorlock)
        {
            delete m_anchorlock;
            m_anchorlock = NULL;
        }
    ;
            
                m_has_bordertop = false;
                
        if (m_bordertop)
        {
            delete m_bordertop;
            m_bordertop = NULL;
        }
    ;
            
                m_has_borderbottom = false;
                
        if (m_borderbottom)
        {
            delete m_borderbottom;
            m_borderbottom = NULL;
        }
    ;
            
                m_has_borderleft = false;
                
        if (m_borderleft)
        {
            delete m_borderleft;
            m_borderleft = NULL;
        }
    ;
            
                m_has_borderright = false;
                
        if (m_borderright)
        {
            delete m_borderright;
            m_borderright = NULL;
        }
    ;
            
                m_has_ClientData = false;
                
        if (m_ClientData)
        {
            delete m_ClientData;
            m_ClientData = NULL;
        }
    ;
            
                m_has_textdata = true;
                if (!m_textdata)
                {
                    m_textdata = new CT_Rel();
                }
                return m_textdata;
            
            }
            const CT_Rel& textdata(){

            if (m_textdata)
            {
                return *m_textdata;
            }
            return CT_Rel::default_instance();
        
            }

        private:
            bool m_has_path ;
            CT_Path* m_path ;
            bool m_has_formulas ;
            CT_Formulas* m_formulas ;
            bool m_has_handles ;
            CT_Handles* m_handles ;
            bool m_has_fill ;
            CT_Fill* m_fill ;
            bool m_has_stroke ;
            CT_Stroke* m_stroke ;
            bool m_has_shadow ;
            CT_Shadow* m_shadow ;
            bool m_has_textbox ;
            CT_Textbox* m_textbox ;
            bool m_has_textpath ;
            CT_TextPath* m_textpath ;
            bool m_has_imagedata ;
            CT_ImageData* m_imagedata ;
            bool m_has_skew ;
            CT_Skew* m_skew ;
            bool m_has_extrusion ;
            CT_Extrusion* m_extrusion ;
            bool m_has_callout ;
            CT_Callout* m_callout ;
            bool m_has_lock ;
            CT_Lock* m_lock ;
            bool m_has_clippath ;
            CT_ClipPath* m_clippath ;
            bool m_has_signatureline ;
            CT_SignatureLine* m_signatureline ;
            bool m_has_wrap ;
            CT_Wrap* m_wrap ;
            bool m_has_anchorlock ;
            CT_AnchorLock* m_anchorlock ;
            bool m_has_bordertop ;
            CT_Border* m_bordertop ;
            bool m_has_borderbottom ;
            CT_Border* m_borderbottom ;
            bool m_has_borderleft ;
            CT_Border* m_borderleft ;
            bool m_has_borderright ;
            CT_Border* m_borderright ;
            bool m_has_ClientData ;
            CT_ClientData* m_ClientData ;
            bool m_has_textdata ;
            CT_Rel* m_textdata ;

        }


    }

    class shape : public CT_Shape : public Element{
    public:
        void toXml(ostream& _outStream ){

        CT_Shape::toXml(\shape\, _outStream);
    
        }

    private:

    }

    class shapetype : public CT_Shapetype : public Element{
    public:
        void toXml(ostream& _outStream ){

        CT_Shapetype::toXml(\shapetype\, _outStream);
    
        }

    private:

    }

    class group : public CT_Group : public Element{
    public:
        void toXml(ostream& _outStream ){

        CT_Group::toXml(\group\, _outStream);
    
        }

    private:

    }

    class background : public CT_Background : public Element{
    public:
        void toXml(ostream& _outStream ){

        CT_Background::toXml(ackground\, _outStream);
    
        }

    private:

    }

    class fill : public CT_Fill : public Element{
    public:
        void toXml(ostream& _outStream ){

        CT_Fill::toXml(ill\, _outStream);
    
        }

    private:

    }

    class formulas : public CT_Formulas : public Element{
    public:
        void toXml(ostream& _outStream ){

        CT_Formulas::toXml(ormulas\, _outStream);
    
        }

    private:

    }

    class handles : public CT_Handles : public Element{
    public:
        void toXml(ostream& _outStream ){

        CT_Handles::toXml(\handles\, _outStream);
    
        }

    private:

    }

    class imagedata : public CT_ImageData : public Element{
    public:
        void toXml(ostream& _outStream ){

        CT_ImageData::toXml(\imagedata\, _outStream);
    
        }

    private:

    }

    class path : public CT_Path : public Element{
    public:
        void toXml(ostream& _outStream ){

        CT_Path::toXml(\path\, _outStream);
    
        }

    private:

    }

    class textbox : public CT_Textbox : public Element{
    public:
        void toXml(ostream& _outStream ){

        CT_Textbox::toXml(	extbox\, _outStream);
    
        }

    private:

    }

    class shadow : public CT_Shadow : public Element{
    public:
        void toXml(ostream& _outStream ){

        CT_Shadow::toXml(\shadow\, _outStream);
    
        }

    private:

    }

    class stroke : public CT_Stroke : public Element{
    public:
        void toXml(ostream& _outStream ){

        CT_Stroke::toXml(\stroke\, _outStream);
    
        }

    private:

    }

    class textpath : public CT_TextPath : public Element{
    public:
        void toXml(ostream& _outStream ){

        CT_TextPath::toXml(	extpath\, _outStream);
    
        }

    private:

    }

    class arc : public CT_Arc : public Element{
    public:
        void toXml(ostream& _outStream ){

        CT_Arc::toXml(rc\, _outStream);
    
        }

    private:

    }

    class curve : public CT_Curve : public Element{
    public:
        void toXml(ostream& _outStream ){

        CT_Curve::toXml(\curve\, _outStream);
    
        }

    private:

    }

    class image : public CT_Image : public Element{
    public:
        void toXml(ostream& _outStream ){

        CT_Image::toXml(\image\, _outStream);
    
        }

    private:

    }

    class line : public CT_Line : public Element{
    public:
        void toXml(ostream& _outStream ){

        CT_Line::toXml(\line\, _outStream);
    
        }

    private:

    }

    class oval : public CT_Oval : public Element{
    public:
        void toXml(ostream& _outStream ){

        CT_Oval::toXml(\oval\, _outStream);
    
        }

    private:

    }

    class polyline : public CT_PolyLine : public Element{
    public:
        void toXml(ostream& _outStream ){

        CT_PolyLine::toXml(\polyline\, _outStream);
    
        }

    private:

    }

    class rect : public CT_Rect : public Element{
    public:
        void toXml(ostream& _outStream ){

        CT_Rect::toXml(ect\, _outStream);
    
        }

    private:

    }

    class roundrect : public CT_RoundRect : public Element{
    public:
        void toXml(ostream& _outStream ){

        CT_RoundRect::toXml(oundrect\, _outStream);
    
        }

    private:

    }

}