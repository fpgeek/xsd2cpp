#include "shared-math_xsd.h"
#include <stdlib.h>
#include <sstream>
#include "wml_xsd.h"
#include "shared-commonSimpleTypes_xsd.h"
#include "xml.h"
namespace ns_m{
    class Element : public XSD::Element{
    public:

    private:

    }

    class Attribute : public XSD::Attribute{
    public:

    private:

    }

    class ST_Integer255 : public XSD::SimpleType{
    public:
        ST_Integer255(){
            m_has_integer = false
            m_integer = 0

        }
        ST_Integer255(const XSD::integer& _integer ){
            m_has_integer = true
            m_integer = _integer

        }
        bool has_integer(){

    return m_has_integer;

        }
        void set_integer(const integer& _integer ){

    m_has_integer = true;
    m_integer = _integer;

        }
        const integer& integer(){

    return m_integer;

        }
        void clear(){

    m_has_integer = false;
    m_integer = 0;;

        }
        void toXml(const string _attrName , ostream _outStream ){

    if (m_has_integer)
    {
        _outStream << _attrName << \=\\ << m_integer << \\\;;
    }

        }
        const ST_Integer255& default_instance(){

    if (!ST_Integer255::default_instance_)
    {
        ST_Integer255::default_instance_ = new ST_Integer255();
    }
    return *ST_Integer255::default_instance_;

        }

    private:
        static ST_Integer255* default_instance_ ;
        bool m_has_integer ;
        integer m_integer ;

    }

    class ST_Integer2 : public XSD::SimpleType{
    public:
        ST_Integer2(){
            m_has_integer = false
            m_integer = 0

        }
        ST_Integer2(const XSD::integer& _integer ){
            m_has_integer = true
            m_integer = _integer

        }
        bool has_integer(){

    return m_has_integer;

        }
        void set_integer(const integer& _integer ){

    m_has_integer = true;
    m_integer = _integer;

        }
        const integer& integer(){

    return m_integer;

        }
        void clear(){

    m_has_integer = false;
    m_integer = 0;;

        }
        void toXml(const string _attrName , ostream _outStream ){

    if (m_has_integer)
    {
        _outStream << _attrName << \=\\ << m_integer << \\\;;
    }

        }
        const ST_Integer2& default_instance(){

    if (!ST_Integer2::default_instance_)
    {
        ST_Integer2::default_instance_ = new ST_Integer2();
    }
    return *ST_Integer2::default_instance_;

        }

    private:
        static ST_Integer2* default_instance_ ;
        bool m_has_integer ;
        integer m_integer ;

    }

    class ST_SpacingRule : public XSD::SimpleType{
    public:
        ST_SpacingRule(){
            m_has_integer = false
            m_integer = 0

        }
        ST_SpacingRule(const XSD::integer& _integer ){
            m_has_integer = true
            m_integer = _integer

        }
        bool has_integer(){

    return m_has_integer;

        }
        void set_integer(const integer& _integer ){

    m_has_integer = true;
    m_integer = _integer;

        }
        const integer& integer(){

    return m_integer;

        }
        void clear(){

    m_has_integer = false;
    m_integer = 0;;

        }
        void toXml(const string _attrName , ostream _outStream ){

    if (m_has_integer)
    {
        _outStream << _attrName << \=\\ << m_integer << \\\;;
    }

        }
        const ST_SpacingRule& default_instance(){

    if (!ST_SpacingRule::default_instance_)
    {
        ST_SpacingRule::default_instance_ = new ST_SpacingRule();
    }
    return *ST_SpacingRule::default_instance_;

        }

    private:
        static ST_SpacingRule* default_instance_ ;
        bool m_has_integer ;
        integer m_integer ;

    }

    class ST_UnSignedInteger : public XSD::SimpleType{
    public:
        ST_UnSignedInteger(){
            m_has_unsignedInt = false
            m_unsignedInt = 0

        }
        ST_UnSignedInteger(const XSD::unsignedInt& _unsignedInt ){
            m_has_unsignedInt = true
            m_unsignedInt = _unsignedInt

        }
        bool has_unsignedInt(){

    return m_has_unsignedInt;

        }
        void set_unsignedInt(const unsignedInt& _unsignedInt ){

    m_has_unsignedInt = true;
    m_unsignedInt = _unsignedInt;

        }
        const unsignedInt& unsignedInt(){

    return m_unsignedInt;

        }
        void clear(){

    m_has_unsignedInt = false;
    m_unsignedInt = 0;;

        }
        void toXml(const string _attrName , ostream _outStream ){

    if (m_has_unsignedInt)
    {
        _outStream << _attrName << \=\\ << m_unsignedInt << \\\;;
    }

        }
        const ST_UnSignedInteger& default_instance(){

    if (!ST_UnSignedInteger::default_instance_)
    {
        ST_UnSignedInteger::default_instance_ = new ST_UnSignedInteger();
    }
    return *ST_UnSignedInteger::default_instance_;

        }

    private:
        static ST_UnSignedInteger* default_instance_ ;
        bool m_has_unsignedInt ;
        unsignedInt m_unsignedInt ;

    }

    class ST_Char : public XSD::SimpleType{
    public:
        ST_Char(){
            m_has_string = false
            m_string = 

        }
        ST_Char(const XSD::string& _string ){
            m_has_string = true
            m_string = _string

        }
        bool has_string(){

    return m_has_string;

        }
        void set_string(const string& _string ){

    m_has_string = true;
    m_string = _string;

        }
        const string& string(){

    return m_string;

        }
        void clear(){

    m_has_string = false;
    m_string.clear();;

        }
        void toXml(const string _attrName , ostream _outStream ){

    if (m_has_string)
    {
        _outStream << _attrName << \=\\ << m_string << \\\;;
    }

        }
        const ST_Char& default_instance(){

    if (!ST_Char::default_instance_)
    {
        ST_Char::default_instance_ = new ST_Char();
    }
    return *ST_Char::default_instance_;

        }

    private:
        static ST_Char* default_instance_ ;
        bool m_has_string ;
        string m_string ;

    }

    class ST_Shp : public XSD::SimpleType{
    public:
        ST_Shp(){
            m_has_type = false

        }
        ST_Shp(const Type _type ){
            m_has_type = true
            m_type = _type

        }
        bool has_type(){

            return m_has_type;
        
        }
        void set_type(const Type& _type ){

            m_has_type = true;
            m_type = _type;
        
        }
        const Type& type(){

            return m_type;
        
        }
        string toString(){

        return ST_Shp::TypeStrList[m_type];
    
        }
        void clear(){

            m_has_type = false;
        
        }
        void toXml(const string _attrName , ostream _outStream ){

            if (m_has_type)
            {
                '_outStream << _attrName << \=\\ << toString() << \\\;';
            }
        
        }
        const ST_Shp& default_instance(){

    if (!ST_Shp::default_instance_)
    {
        ST_Shp::default_instance_ = new ST_Shp();
    }
    return *ST_Shp::default_instance_;

        }
        enum Type{
            _centered_ = 1,
            _match_
        }

    private:
        static const string TypeStrList [];
        static ST_Shp* default_instance_ ;
        bool m_has_type ;
        Type m_type ;

    }

    class ST_FType : public XSD::SimpleType{
    public:
        ST_FType(){
            m_has_type = false

        }
        ST_FType(const Type _type ){
            m_has_type = true
            m_type = _type

        }
        bool has_type(){

            return m_has_type;
        
        }
        void set_type(const Type& _type ){

            m_has_type = true;
            m_type = _type;
        
        }
        const Type& type(){

            return m_type;
        
        }
        string toString(){

        return ST_FType::TypeStrList[m_type];
    
        }
        void clear(){

            m_has_type = false;
        
        }
        void toXml(const string _attrName , ostream _outStream ){

            if (m_has_type)
            {
                '_outStream << _attrName << \=\\ << toString() << \\\;';
            }
        
        }
        const ST_FType& default_instance(){

    if (!ST_FType::default_instance_)
    {
        ST_FType::default_instance_ = new ST_FType();
    }
    return *ST_FType::default_instance_;

        }
        enum Type{
            _bar_ = 1,
            _skw_,
            _lin_,
            _noBar_
        }

    private:
        static const string TypeStrList [];
        static ST_FType* default_instance_ ;
        bool m_has_type ;
        Type m_type ;

    }

    class ST_LimLoc : public XSD::SimpleType{
    public:
        ST_LimLoc(){
            m_has_type = false

        }
        ST_LimLoc(const Type _type ){
            m_has_type = true
            m_type = _type

        }
        bool has_type(){

            return m_has_type;
        
        }
        void set_type(const Type& _type ){

            m_has_type = true;
            m_type = _type;
        
        }
        const Type& type(){

            return m_type;
        
        }
        string toString(){

        return ST_LimLoc::TypeStrList[m_type];
    
        }
        void clear(){

            m_has_type = false;
        
        }
        void toXml(const string _attrName , ostream _outStream ){

            if (m_has_type)
            {
                '_outStream << _attrName << \=\\ << toString() << \\\;';
            }
        
        }
        const ST_LimLoc& default_instance(){

    if (!ST_LimLoc::default_instance_)
    {
        ST_LimLoc::default_instance_ = new ST_LimLoc();
    }
    return *ST_LimLoc::default_instance_;

        }
        enum Type{
            _undOvr_ = 1,
            _subSup_
        }

    private:
        static const string TypeStrList [];
        static ST_LimLoc* default_instance_ ;
        bool m_has_type ;
        Type m_type ;

    }

    class ST_TopBot : public XSD::SimpleType{
    public:
        ST_TopBot(){
            m_has_type = false

        }
        ST_TopBot(const Type _type ){
            m_has_type = true
            m_type = _type

        }
        bool has_type(){

            return m_has_type;
        
        }
        void set_type(const Type& _type ){

            m_has_type = true;
            m_type = _type;
        
        }
        const Type& type(){

            return m_type;
        
        }
        string toString(){

        return ST_TopBot::TypeStrList[m_type];
    
        }
        void clear(){

            m_has_type = false;
        
        }
        void toXml(const string _attrName , ostream _outStream ){

            if (m_has_type)
            {
                '_outStream << _attrName << \=\\ << toString() << \\\;';
            }
        
        }
        const ST_TopBot& default_instance(){

    if (!ST_TopBot::default_instance_)
    {
        ST_TopBot::default_instance_ = new ST_TopBot();
    }
    return *ST_TopBot::default_instance_;

        }
        enum Type{
            _top_ = 1,
            _bot_
        }

    private:
        static const string TypeStrList [];
        static ST_TopBot* default_instance_ ;
        bool m_has_type ;
        Type m_type ;

    }

    class ST_Script : public XSD::SimpleType{
    public:
        ST_Script(){
            m_has_type = false

        }
        ST_Script(const Type _type ){
            m_has_type = true
            m_type = _type

        }
        bool has_type(){

            return m_has_type;
        
        }
        void set_type(const Type& _type ){

            m_has_type = true;
            m_type = _type;
        
        }
        const Type& type(){

            return m_type;
        
        }
        string toString(){

        return ST_Script::TypeStrList[m_type];
    
        }
        void clear(){

            m_has_type = false;
        
        }
        void toXml(const string _attrName , ostream _outStream ){

            if (m_has_type)
            {
                '_outStream << _attrName << \=\\ << toString() << \\\;';
            }
        
        }
        const ST_Script& default_instance(){

    if (!ST_Script::default_instance_)
    {
        ST_Script::default_instance_ = new ST_Script();
    }
    return *ST_Script::default_instance_;

        }
        enum Type{
            _roman_ = 1,
            _script_,
            _fraktur_,
            _double-struck_,
            _sans-serif_,
            _monospace_
        }

    private:
        static const string TypeStrList [];
        static ST_Script* default_instance_ ;
        bool m_has_type ;
        Type m_type ;

    }

    class ST_Style : public XSD::SimpleType{
    public:
        ST_Style(){
            m_has_type = false

        }
        ST_Style(const Type _type ){
            m_has_type = true
            m_type = _type

        }
        bool has_type(){

            return m_has_type;
        
        }
        void set_type(const Type& _type ){

            m_has_type = true;
            m_type = _type;
        
        }
        const Type& type(){

            return m_type;
        
        }
        string toString(){

        return ST_Style::TypeStrList[m_type];
    
        }
        void clear(){

            m_has_type = false;
        
        }
        void toXml(const string _attrName , ostream _outStream ){

            if (m_has_type)
            {
                '_outStream << _attrName << \=\\ << toString() << \\\;';
            }
        
        }
        const ST_Style& default_instance(){

    if (!ST_Style::default_instance_)
    {
        ST_Style::default_instance_ = new ST_Style();
    }
    return *ST_Style::default_instance_;

        }
        enum Type{
            _p_ = 1,
            _b_,
            _i_,
            _bi_
        }

    private:
        static const string TypeStrList [];
        static ST_Style* default_instance_ ;
        bool m_has_type ;
        Type m_type ;

    }

    class ST_Jc : public XSD::SimpleType{
    public:
        ST_Jc(){
            m_has_type = false

        }
        ST_Jc(const Type _type ){
            m_has_type = true
            m_type = _type

        }
        bool has_type(){

            return m_has_type;
        
        }
        void set_type(const Type& _type ){

            m_has_type = true;
            m_type = _type;
        
        }
        const Type& type(){

            return m_type;
        
        }
        string toString(){

        return ST_Jc::TypeStrList[m_type];
    
        }
        void clear(){

            m_has_type = false;
        
        }
        void toXml(const string _attrName , ostream _outStream ){

            if (m_has_type)
            {
                '_outStream << _attrName << \=\\ << toString() << \\\;';
            }
        
        }
        const ST_Jc& default_instance(){

    if (!ST_Jc::default_instance_)
    {
        ST_Jc::default_instance_ = new ST_Jc();
    }
    return *ST_Jc::default_instance_;

        }
        enum Type{
            _left_ = 1,
            _right_,
            _center_,
            _centerGroup_
        }

    private:
        static const string TypeStrList [];
        static ST_Jc* default_instance_ ;
        bool m_has_type ;
        Type m_type ;

    }

    class ST_BreakBin : public XSD::SimpleType{
    public:
        ST_BreakBin(){
            m_has_type = false

        }
        ST_BreakBin(const Type _type ){
            m_has_type = true
            m_type = _type

        }
        bool has_type(){

            return m_has_type;
        
        }
        void set_type(const Type& _type ){

            m_has_type = true;
            m_type = _type;
        
        }
        const Type& type(){

            return m_type;
        
        }
        string toString(){

        return ST_BreakBin::TypeStrList[m_type];
    
        }
        void clear(){

            m_has_type = false;
        
        }
        void toXml(const string _attrName , ostream _outStream ){

            if (m_has_type)
            {
                '_outStream << _attrName << \=\\ << toString() << \\\;';
            }
        
        }
        const ST_BreakBin& default_instance(){

    if (!ST_BreakBin::default_instance_)
    {
        ST_BreakBin::default_instance_ = new ST_BreakBin();
    }
    return *ST_BreakBin::default_instance_;

        }
        enum Type{
            _before_ = 1,
            _after_,
            _repeat_
        }

    private:
        static const string TypeStrList [];
        static ST_BreakBin* default_instance_ ;
        bool m_has_type ;
        Type m_type ;

    }

    class ST_BreakBinSub : public XSD::SimpleType{
    public:
        ST_BreakBinSub(){
            m_has_type = false

        }
        ST_BreakBinSub(const Type _type ){
            m_has_type = true
            m_type = _type

        }
        bool has_type(){

            return m_has_type;
        
        }
        void set_type(const Type& _type ){

            m_has_type = true;
            m_type = _type;
        
        }
        const Type& type(){

            return m_type;
        
        }
        string toString(){

        return ST_BreakBinSub::TypeStrList[m_type];
    
        }
        void clear(){

            m_has_type = false;
        
        }
        void toXml(const string _attrName , ostream _outStream ){

            if (m_has_type)
            {
                '_outStream << _attrName << \=\\ << toString() << \\\;';
            }
        
        }
        const ST_BreakBinSub& default_instance(){

    if (!ST_BreakBinSub::default_instance_)
    {
        ST_BreakBinSub::default_instance_ = new ST_BreakBinSub();
    }
    return *ST_BreakBinSub::default_instance_;

        }
        enum Type{
            _--_ = 1,
            _-+_,
            _+-_
        }

    private:
        static const string TypeStrList [];
        static ST_BreakBinSub* default_instance_ ;
        bool m_has_type ;
        Type m_type ;

    }

    class CT_Integer255 : public XSD::ComplexType{
    public:
        void clear(){

                m_has_val_attr = false;
                
        if (m_val_attr)
        {
            delete m_val_attr;
            m_val_attr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    m_val_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Integer255& default_instance(){

    if (!CT_Integer255::default_instance_)
    {
        CT_Integer255::default_instance_ = new CT_Integer255();
    }
    return *CT_Integer255::default_instance_;

        }
        bool has_val_attr(){

            return m_has_val_attr;
        
        }
        void set_val_attr(const ST_Integer255& _val_attr ){

            m_has_val_attr = true;
            m_val_attr = new ST_Integer255(_val_attr);
        
        }
        const ST_Integer255& val_attr(){

            if (m_val_attr)
            {
                return *m_val_attr;
            }
            return ST_Integer255::default_instance();
        
        }

    private:
        static CT_Integer255* default_instance_ ;
        bool m_has_val_attr ;
        ST_Integer255* m_val_attr ;

    }

    class CT_Integer2 : public XSD::ComplexType{
    public:
        void clear(){

                m_has_val_attr = false;
                
        if (m_val_attr)
        {
            delete m_val_attr;
            m_val_attr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    m_val_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Integer2& default_instance(){

    if (!CT_Integer2::default_instance_)
    {
        CT_Integer2::default_instance_ = new CT_Integer2();
    }
    return *CT_Integer2::default_instance_;

        }
        bool has_val_attr(){

            return m_has_val_attr;
        
        }
        void set_val_attr(const ST_Integer2& _val_attr ){

            m_has_val_attr = true;
            m_val_attr = new ST_Integer2(_val_attr);
        
        }
        const ST_Integer2& val_attr(){

            if (m_val_attr)
            {
                return *m_val_attr;
            }
            return ST_Integer2::default_instance();
        
        }

    private:
        static CT_Integer2* default_instance_ ;
        bool m_has_val_attr ;
        ST_Integer2* m_val_attr ;

    }

    class CT_SpacingRule : public XSD::ComplexType{
    public:
        void clear(){

                m_has_val_attr = false;
                
        if (m_val_attr)
        {
            delete m_val_attr;
            m_val_attr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    m_val_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_SpacingRule& default_instance(){

    if (!CT_SpacingRule::default_instance_)
    {
        CT_SpacingRule::default_instance_ = new CT_SpacingRule();
    }
    return *CT_SpacingRule::default_instance_;

        }
        bool has_val_attr(){

            return m_has_val_attr;
        
        }
        void set_val_attr(const ST_SpacingRule& _val_attr ){

            m_has_val_attr = true;
            m_val_attr = new ST_SpacingRule(_val_attr);
        
        }
        const ST_SpacingRule& val_attr(){

            if (m_val_attr)
            {
                return *m_val_attr;
            }
            return ST_SpacingRule::default_instance();
        
        }

    private:
        static CT_SpacingRule* default_instance_ ;
        bool m_has_val_attr ;
        ST_SpacingRule* m_val_attr ;

    }

    class CT_UnSignedInteger : public XSD::ComplexType{
    public:
        void clear(){

                m_has_val_attr = false;
                
        if (m_val_attr)
        {
            delete m_val_attr;
            m_val_attr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    m_val_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_UnSignedInteger& default_instance(){

    if (!CT_UnSignedInteger::default_instance_)
    {
        CT_UnSignedInteger::default_instance_ = new CT_UnSignedInteger();
    }
    return *CT_UnSignedInteger::default_instance_;

        }
        bool has_val_attr(){

            return m_has_val_attr;
        
        }
        void set_val_attr(const ST_UnSignedInteger& _val_attr ){

            m_has_val_attr = true;
            m_val_attr = new ST_UnSignedInteger(_val_attr);
        
        }
        const ST_UnSignedInteger& val_attr(){

            if (m_val_attr)
            {
                return *m_val_attr;
            }
            return ST_UnSignedInteger::default_instance();
        
        }

    private:
        static CT_UnSignedInteger* default_instance_ ;
        bool m_has_val_attr ;
        ST_UnSignedInteger* m_val_attr ;

    }

    class CT_Char : public XSD::ComplexType{
    public:
        void clear(){

                m_has_val_attr = false;
                
        if (m_val_attr)
        {
            delete m_val_attr;
            m_val_attr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    m_val_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Char& default_instance(){

    if (!CT_Char::default_instance_)
    {
        CT_Char::default_instance_ = new CT_Char();
    }
    return *CT_Char::default_instance_;

        }
        bool has_val_attr(){

            return m_has_val_attr;
        
        }
        void set_val_attr(const ST_Char& _val_attr ){

            m_has_val_attr = true;
            m_val_attr = new ST_Char(_val_attr);
        
        }
        const ST_Char& val_attr(){

            if (m_val_attr)
            {
                return *m_val_attr;
            }
            return ST_Char::default_instance();
        
        }

    private:
        static CT_Char* default_instance_ ;
        bool m_has_val_attr ;
        ST_Char* m_val_attr ;

    }

    class CT_OnOff : public XSD::ComplexType{
    public:
        void clear(){

                m_has_val_attr = false;
                
        if (m_val_attr)
        {
            delete m_val_attr;
            m_val_attr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    m_val_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_OnOff& default_instance(){

    if (!CT_OnOff::default_instance_)
    {
        CT_OnOff::default_instance_ = new CT_OnOff();
    }
    return *CT_OnOff::default_instance_;

        }
        bool has_val_attr(){

            return m_has_val_attr;
        
        }
        void set_val_attr(const ns_s::ST_OnOff& _val_attr ){

            m_has_val_attr = true;
            m_val_attr = new ns_s::ST_OnOff(_val_attr);
        
        }
        const ns_s::ST_OnOff& val_attr(){

            if (m_val_attr)
            {
                return *m_val_attr;
            }
            return ns_s::ST_OnOff::default_instance();
        
        }

    private:
        static CT_OnOff* default_instance_ ;
        bool m_has_val_attr ;
        ns_s::ST_OnOff* m_val_attr ;

    }

    class CT_String : public XSD::ComplexType{
    public:
        void clear(){

                m_has_val_attr = false;
                
        if (m_val_attr)
        {
            delete m_val_attr;
            m_val_attr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    m_val_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_String& default_instance(){

    if (!CT_String::default_instance_)
    {
        CT_String::default_instance_ = new CT_String();
    }
    return *CT_String::default_instance_;

        }
        bool has_val_attr(){

            return m_has_val_attr;
        
        }
        void set_val_attr(const ns_s::ST_String& _val_attr ){

            m_has_val_attr = true;
            m_val_attr = new ns_s::ST_String(_val_attr);
        
        }
        const ns_s::ST_String& val_attr(){

            if (m_val_attr)
            {
                return *m_val_attr;
            }
            return ns_s::ST_String::default_instance();
        
        }

    private:
        static CT_String* default_instance_ ;
        bool m_has_val_attr ;
        ns_s::ST_String* m_val_attr ;

    }

    class CT_XAlign : public XSD::ComplexType{
    public:
        void clear(){

                m_has_val_attr = false;
                
        if (m_val_attr)
        {
            delete m_val_attr;
            m_val_attr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    m_val_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_XAlign& default_instance(){

    if (!CT_XAlign::default_instance_)
    {
        CT_XAlign::default_instance_ = new CT_XAlign();
    }
    return *CT_XAlign::default_instance_;

        }
        bool has_val_attr(){

            return m_has_val_attr;
        
        }
        void set_val_attr(const ns_s::ST_XAlign& _val_attr ){

            m_has_val_attr = true;
            m_val_attr = new ns_s::ST_XAlign(_val_attr);
        
        }
        const ns_s::ST_XAlign& val_attr(){

            if (m_val_attr)
            {
                return *m_val_attr;
            }
            return ns_s::ST_XAlign::default_instance();
        
        }

    private:
        static CT_XAlign* default_instance_ ;
        bool m_has_val_attr ;
        ns_s::ST_XAlign* m_val_attr ;

    }

    class CT_YAlign : public XSD::ComplexType{
    public:
        void clear(){

                m_has_val_attr = false;
                
        if (m_val_attr)
        {
            delete m_val_attr;
            m_val_attr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    m_val_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_YAlign& default_instance(){

    if (!CT_YAlign::default_instance_)
    {
        CT_YAlign::default_instance_ = new CT_YAlign();
    }
    return *CT_YAlign::default_instance_;

        }
        bool has_val_attr(){

            return m_has_val_attr;
        
        }
        void set_val_attr(const ns_s::ST_YAlign& _val_attr ){

            m_has_val_attr = true;
            m_val_attr = new ns_s::ST_YAlign(_val_attr);
        
        }
        const ns_s::ST_YAlign& val_attr(){

            if (m_val_attr)
            {
                return *m_val_attr;
            }
            return ns_s::ST_YAlign::default_instance();
        
        }

    private:
        static CT_YAlign* default_instance_ ;
        bool m_has_val_attr ;
        ns_s::ST_YAlign* m_val_attr ;

    }

    class CT_Shp : public XSD::ComplexType{
    public:
        void clear(){

                m_has_val_attr = false;
                
        if (m_val_attr)
        {
            delete m_val_attr;
            m_val_attr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    m_val_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Shp& default_instance(){

    if (!CT_Shp::default_instance_)
    {
        CT_Shp::default_instance_ = new CT_Shp();
    }
    return *CT_Shp::default_instance_;

        }
        bool has_val_attr(){

            return m_has_val_attr;
        
        }
        void set_val_attr(const ST_Shp& _val_attr ){

            m_has_val_attr = true;
            m_val_attr = new ST_Shp(_val_attr);
        
        }
        const ST_Shp& val_attr(){

            if (m_val_attr)
            {
                return *m_val_attr;
            }
            return ST_Shp::default_instance();
        
        }

    private:
        static CT_Shp* default_instance_ ;
        bool m_has_val_attr ;
        ST_Shp* m_val_attr ;

    }

    class CT_FType : public XSD::ComplexType{
    public:
        void clear(){

                m_has_val_attr = false;
                
        if (m_val_attr)
        {
            delete m_val_attr;
            m_val_attr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    m_val_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_FType& default_instance(){

    if (!CT_FType::default_instance_)
    {
        CT_FType::default_instance_ = new CT_FType();
    }
    return *CT_FType::default_instance_;

        }
        bool has_val_attr(){

            return m_has_val_attr;
        
        }
        void set_val_attr(const ST_FType& _val_attr ){

            m_has_val_attr = true;
            m_val_attr = new ST_FType(_val_attr);
        
        }
        const ST_FType& val_attr(){

            if (m_val_attr)
            {
                return *m_val_attr;
            }
            return ST_FType::default_instance();
        
        }

    private:
        static CT_FType* default_instance_ ;
        bool m_has_val_attr ;
        ST_FType* m_val_attr ;

    }

    class CT_LimLoc : public XSD::ComplexType{
    public:
        void clear(){

                m_has_val_attr = false;
                
        if (m_val_attr)
        {
            delete m_val_attr;
            m_val_attr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    m_val_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_LimLoc& default_instance(){

    if (!CT_LimLoc::default_instance_)
    {
        CT_LimLoc::default_instance_ = new CT_LimLoc();
    }
    return *CT_LimLoc::default_instance_;

        }
        bool has_val_attr(){

            return m_has_val_attr;
        
        }
        void set_val_attr(const ST_LimLoc& _val_attr ){

            m_has_val_attr = true;
            m_val_attr = new ST_LimLoc(_val_attr);
        
        }
        const ST_LimLoc& val_attr(){

            if (m_val_attr)
            {
                return *m_val_attr;
            }
            return ST_LimLoc::default_instance();
        
        }

    private:
        static CT_LimLoc* default_instance_ ;
        bool m_has_val_attr ;
        ST_LimLoc* m_val_attr ;

    }

    class CT_TopBot : public XSD::ComplexType{
    public:
        void clear(){

                m_has_val_attr = false;
                
        if (m_val_attr)
        {
            delete m_val_attr;
            m_val_attr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    m_val_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_TopBot& default_instance(){

    if (!CT_TopBot::default_instance_)
    {
        CT_TopBot::default_instance_ = new CT_TopBot();
    }
    return *CT_TopBot::default_instance_;

        }
        bool has_val_attr(){

            return m_has_val_attr;
        
        }
        void set_val_attr(const ST_TopBot& _val_attr ){

            m_has_val_attr = true;
            m_val_attr = new ST_TopBot(_val_attr);
        
        }
        const ST_TopBot& val_attr(){

            if (m_val_attr)
            {
                return *m_val_attr;
            }
            return ST_TopBot::default_instance();
        
        }

    private:
        static CT_TopBot* default_instance_ ;
        bool m_has_val_attr ;
        ST_TopBot* m_val_attr ;

    }

    class CT_Script : public XSD::ComplexType{
    public:
        void clear(){

                m_has_val_attr = false;
                
        if (m_val_attr)
        {
            delete m_val_attr;
            m_val_attr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    m_val_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Script& default_instance(){

    if (!CT_Script::default_instance_)
    {
        CT_Script::default_instance_ = new CT_Script();
    }
    return *CT_Script::default_instance_;

        }
        bool has_val_attr(){

            return m_has_val_attr;
        
        }
        void set_val_attr(const ST_Script& _val_attr ){

            m_has_val_attr = true;
            m_val_attr = new ST_Script(_val_attr);
        
        }
        const ST_Script& val_attr(){

            if (m_val_attr)
            {
                return *m_val_attr;
            }
            return ST_Script::default_instance();
        
        }

    private:
        static CT_Script* default_instance_ ;
        bool m_has_val_attr ;
        ST_Script* m_val_attr ;

    }

    class CT_Style : public XSD::ComplexType{
    public:
        void clear(){

                m_has_val_attr = false;
                
        if (m_val_attr)
        {
            delete m_val_attr;
            m_val_attr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    m_val_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Style& default_instance(){

    if (!CT_Style::default_instance_)
    {
        CT_Style::default_instance_ = new CT_Style();
    }
    return *CT_Style::default_instance_;

        }
        bool has_val_attr(){

            return m_has_val_attr;
        
        }
        void set_val_attr(const ST_Style& _val_attr ){

            m_has_val_attr = true;
            m_val_attr = new ST_Style(_val_attr);
        
        }
        const ST_Style& val_attr(){

            if (m_val_attr)
            {
                return *m_val_attr;
            }
            return ST_Style::default_instance();
        
        }

    private:
        static CT_Style* default_instance_ ;
        bool m_has_val_attr ;
        ST_Style* m_val_attr ;

    }

    class CT_ManualBreak : public XSD::ComplexType{
    public:
        void clear(){

                m_has_alnAt_attr = false;
                
        if (m_alnAt_attr)
        {
            delete m_alnAt_attr;
            m_alnAt_attr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    m_alnAt_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_ManualBreak& default_instance(){

    if (!CT_ManualBreak::default_instance_)
    {
        CT_ManualBreak::default_instance_ = new CT_ManualBreak();
    }
    return *CT_ManualBreak::default_instance_;

        }
        bool has_alnAt_attr(){

            return m_has_alnAt_attr;
        
        }
        void set_alnAt_attr(const ST_Integer255& _alnAt_attr ){

            m_has_alnAt_attr = true;
            m_alnAt_attr = new ST_Integer255(_alnAt_attr);
        
        }
        const ST_Integer255& alnAt_attr(){

            if (m_alnAt_attr)
            {
                return *m_alnAt_attr;
            }
            return ST_Integer255::default_instance();
        
        }

    private:
        static CT_ManualBreak* default_instance_ ;
        bool m_has_alnAt_attr ;
        ST_Integer255* m_alnAt_attr ;

    }

    class CT_RPR : public XSD::ComplexType{
    public:
        bool has_lit(){

            return m_has_lit;
        
        }
        CT_OnOff* mutable_lit(){

                m_has_lit = true;
                if (!m_lit)
                {
                    m_lit = new CT_OnOff();
                }
                return m_lit;
            
        }
        const CT_OnOff& lit(){

            if (m_lit)
            {
                return *m_lit;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_nor(){

            return m_has_nor;
        
        }
        CT_OnOff* mutable_nor(){

                
                m_has_scr = false;
                
        if (m_scr)
        {
            delete m_scr;
            m_scr = NULL;
        }
    ;
            
                m_has_sty = false;
                
        if (m_sty)
        {
            delete m_sty;
            m_sty = NULL;
        }
    ;
            
                m_has_nor = true;
                if (!m_nor)
                {
                    m_nor = new CT_OnOff();
                }
                return m_nor;
            
        }
        const CT_OnOff& nor(){

            if (m_nor)
            {
                return *m_nor;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_scr(){

            return m_has_scr;
        
        }
        CT_Script* mutable_scr(){

                
                m_has_nor = false;
                
        if (m_nor)
        {
            delete m_nor;
            m_nor = NULL;
        }
    ;
            
                m_has_sty = false;
                
        if (m_sty)
        {
            delete m_sty;
            m_sty = NULL;
        }
    ;
            
                m_has_scr = true;
                if (!m_scr)
                {
                    m_scr = new CT_Script();
                }
                return m_scr;
            
        }
        const CT_Script& scr(){

            if (m_scr)
            {
                return *m_scr;
            }
            return CT_Script::default_instance();
        
        }
        bool has_sty(){

            return m_has_sty;
        
        }
        CT_Style* mutable_sty(){

                
                m_has_nor = false;
                
        if (m_nor)
        {
            delete m_nor;
            m_nor = NULL;
        }
    ;
            
                m_has_scr = false;
                
        if (m_scr)
        {
            delete m_scr;
            m_scr = NULL;
        }
    ;
            
                m_has_sty = true;
                if (!m_sty)
                {
                    m_sty = new CT_Style();
                }
                return m_sty;
            
        }
        const CT_Style& sty(){

            if (m_sty)
            {
                return *m_sty;
            }
            return CT_Style::default_instance();
        
        }
        bool has_brk(){

            return m_has_brk;
        
        }
        CT_ManualBreak* mutable_brk(){

                m_has_brk = true;
                if (!m_brk)
                {
                    m_brk = new CT_ManualBreak();
                }
                return m_brk;
            
        }
        const CT_ManualBreak& brk(){

            if (m_brk)
            {
                return *m_brk;
            }
            return CT_ManualBreak::default_instance();
        
        }
        bool has_aln(){

            return m_has_aln;
        
        }
        CT_OnOff* mutable_aln(){

                m_has_aln = true;
                if (!m_aln)
                {
                    m_aln = new CT_OnOff();
                }
                return m_aln;
            
        }
        const CT_OnOff& aln(){

            if (m_aln)
            {
                return *m_aln;
            }
            return CT_OnOff::default_instance();
        
        }
        void clear(){

                m_has_lit = false;
                
        if (m_lit)
        {
            delete m_lit;
            m_lit = NULL;
        }
    
             
                m_has_nor = false;
                
        if (m_nor)
        {
            delete m_nor;
            m_nor = NULL;
        }
    
            
                m_has_scr = false;
                
        if (m_scr)
        {
            delete m_scr;
            m_scr = NULL;
        }
    
            
                m_has_sty = false;
                
        if (m_sty)
        {
            delete m_sty;
            m_sty = NULL;
        }
    
             
                m_has_brk = false;
                
        if (m_brk)
        {
            delete m_brk;
            m_brk = NULL;
        }
    
            
                m_has_aln = false;
                
        if (m_aln)
        {
            delete m_aln;
            m_aln = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_lit)
                {
                    m_lit->toXml(lit, _outStream);;
                }
             
                if (m_has_nor)
                {
                    m_nor->toXml(nor, _outStream);;
                }
            
                if (m_has_scr)
                {
                    m_nor->toXml(scr, _outStream);;
                }
            
                if (m_has_sty)
                {
                    m_nor->toXml(sty, _outStream);;
                }
             
                if (m_has_brk)
                {
                    m_brk->toXml(brk, _outStream);;
                }
            
                if (m_has_aln)
                {
                    m_brk->toXml(aln, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_RPR& default_instance(){

    if (!CT_RPR::default_instance_)
    {
        CT_RPR::default_instance_ = new CT_RPR();
    }
    return *CT_RPR::default_instance_;

        }

    private:
        bool m_has_lit ;
        CT_OnOff* m_lit ;
        bool m_has_nor ;
        CT_OnOff* m_nor ;
        bool m_has_scr ;
        CT_Script* m_scr ;
        bool m_has_sty ;
        CT_Style* m_sty ;
        bool m_has_brk ;
        CT_ManualBreak* m_brk ;
        bool m_has_aln ;
        CT_OnOff* m_aln ;
        static CT_RPR* default_instance_ ;

    }

    class CT_Text : public XSD::ComplexType{
    public:
        void clear(){

        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Text& default_instance(){

    if (!CT_Text::default_instance_)
    {
        CT_Text::default_instance_ = new CT_Text();
    }
    return *CT_Text::default_instance_;

        }

    private:
        static CT_Text* default_instance_ ;

    }

    class CT_R : public XSD::ComplexType{
    public:
        bool has_rPr(){

            return m_has_rPr;
        
        }
        CT_RPR* mutable_rPr(){

                m_has_rPr = true;
                if (!m_rPr)
                {
                    m_rPr = new CT_RPR();
                }
                return m_rPr;
            
        }
        const CT_RPR& rPr(){

            if (m_rPr)
            {
                return *m_rPr;
            }
            return CT_RPR::default_instance();
        
        }
        bool has_rPr(){

            return m_has_rPr;
        
        }
        CT_RPr* mutable_rPr(){

                m_has_rPr = true;
                if (!m_rPr)
                {
                    m_rPr = new CT_RPr();
                }
                return m_rPr;
            
        }
        const CT_RPr& rPr(){

            if (m_rPr)
            {
                return *m_rPr;
            }
            return CT_RPr::default_instance();
        
        }
        CT_Br* add_br(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Br* pNewChild = pChildGroup->mutable_br();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Text* add_t(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Text* pNewChild = pChildGroup->mutable_t();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Rel* add_contentPart(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Rel* pNewChild = pChildGroup->mutable_contentPart();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Text* add_delText(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Text* pNewChild = pChildGroup->mutable_delText();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Text* add_instrText(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Text* pNewChild = pChildGroup->mutable_instrText();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Text* add_delInstrText(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Text* pNewChild = pChildGroup->mutable_delInstrText();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Empty* add_noBreakHyphen(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Empty* pNewChild = pChildGroup->mutable_noBreakHyphen();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Empty* add_softHyphen(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Empty* pNewChild = pChildGroup->mutable_softHyphen();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Empty* add_dayShort(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Empty* pNewChild = pChildGroup->mutable_dayShort();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Empty* add_monthShort(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Empty* pNewChild = pChildGroup->mutable_monthShort();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Empty* add_yearShort(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Empty* pNewChild = pChildGroup->mutable_yearShort();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Empty* add_dayLong(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Empty* pNewChild = pChildGroup->mutable_dayLong();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Empty* add_monthLong(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Empty* pNewChild = pChildGroup->mutable_monthLong();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Empty* add_yearLong(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Empty* pNewChild = pChildGroup->mutable_yearLong();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Empty* add_annotationRef(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Empty* pNewChild = pChildGroup->mutable_annotationRef();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Empty* add_footnoteRef(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Empty* pNewChild = pChildGroup->mutable_footnoteRef();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Empty* add_endnoteRef(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Empty* pNewChild = pChildGroup->mutable_endnoteRef();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Empty* add_separator(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Empty* pNewChild = pChildGroup->mutable_separator();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Empty* add_continuationSeparator(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Empty* pNewChild = pChildGroup->mutable_continuationSeparator();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Sym* add_sym(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Sym* pNewChild = pChildGroup->mutable_sym();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Empty* add_pgNum(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Empty* pNewChild = pChildGroup->mutable_pgNum();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Empty* add_cr(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Empty* pNewChild = pChildGroup->mutable_cr();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Empty* add_tab(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Empty* pNewChild = pChildGroup->mutable_tab();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Object* add_object(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Object* pNewChild = pChildGroup->mutable_object();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Picture* add_pict(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Picture* pNewChild = pChildGroup->mutable_pict();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_FldChar* add_fldChar(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_FldChar* pNewChild = pChildGroup->mutable_fldChar();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Ruby* add_ruby(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Ruby* pNewChild = pChildGroup->mutable_ruby();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_FtnEdnRef* add_footnoteReference(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_FtnEdnRef* pNewChild = pChildGroup->mutable_footnoteReference();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_FtnEdnRef* add_endnoteReference(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_FtnEdnRef* pNewChild = pChildGroup->mutable_endnoteReference();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Markup* add_commentReference(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Markup* pNewChild = pChildGroup->mutable_commentReference();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Drawing* add_drawing(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Drawing* pNewChild = pChildGroup->mutable_drawing();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_PTab* add_ptab(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_PTab* pNewChild = pChildGroup->mutable_ptab();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Empty* add_lastRenderedPageBreak(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Empty* pNewChild = pChildGroup->mutable_lastRenderedPageBreak();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Text* add_t(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Text* pNewChild = pChildGroup->mutable_t();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        void clear(){

                m_has_rPr = false;
                
        if (m_rPr)
        {
            delete m_rPr;
            m_rPr = NULL;
        }
    
            
                m_has_rPr = false;
                
        if (m_rPr)
        {
            delete m_rPr;
            m_rPr = NULL;
        }
    
             
            vector<ChildGroup_1*>::iterator iter;
            for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
            {
                delete *iter;
            }
            m_childGroupList_1.clear();
        
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_rPr)
                {
                    m_rPr->toXml(rPr, _outStream);;
                }
            
                if (m_has_rPr)
                {
                    m_rPr->toXml(rPr, _outStream);;
                }
             
        vector<ChildGroup_1*>::const_iterator iter;
        for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
        {
            if ((*iter)->has_br())
            {
                (*iter)->toXml(br, _outStream);
            }
            else if ((*iter)->has_t())
            {
                (*iter)->toXml(t, _outStream);
            }
            else if ((*iter)->has_contentPart())
            {
                (*iter)->toXml(contentPart, _outStream);
            }
            else if ((*iter)->has_delText())
            {
                (*iter)->toXml(delText, _outStream);
            }
            else if ((*iter)->has_instrText())
            {
                (*iter)->toXml(instrText, _outStream);
            }
            else if ((*iter)->has_delInstrText())
            {
                (*iter)->toXml(delInstrText, _outStream);
            }
            else if ((*iter)->has_noBreakHyphen())
            {
                (*iter)->toXml(noBreakHyphen, _outStream);
            }
            else if ((*iter)->has_softHyphen())
            {
                (*iter)->toXml(softHyphen, _outStream);
            }
            else if ((*iter)->has_dayShort())
            {
                (*iter)->toXml(dayShort, _outStream);
            }
            else if ((*iter)->has_monthShort())
            {
                (*iter)->toXml(monthShort, _outStream);
            }
            else if ((*iter)->has_yearShort())
            {
                (*iter)->toXml(yearShort, _outStream);
            }
            else if ((*iter)->has_dayLong())
            {
                (*iter)->toXml(dayLong, _outStream);
            }
            else if ((*iter)->has_monthLong())
            {
                (*iter)->toXml(monthLong, _outStream);
            }
            else if ((*iter)->has_yearLong())
            {
                (*iter)->toXml(yearLong, _outStream);
            }
            else if ((*iter)->has_annotationRef())
            {
                (*iter)->toXml(annotationRef, _outStream);
            }
            else if ((*iter)->has_footnoteRef())
            {
                (*iter)->toXml(footnoteRef, _outStream);
            }
            else if ((*iter)->has_endnoteRef())
            {
                (*iter)->toXml(endnoteRef, _outStream);
            }
            else if ((*iter)->has_separator())
            {
                (*iter)->toXml(separator, _outStream);
            }
            else if ((*iter)->has_continuationSeparator())
            {
                (*iter)->toXml(continuationSeparator, _outStream);
            }
            else if ((*iter)->has_sym())
            {
                (*iter)->toXml(sym, _outStream);
            }
            else if ((*iter)->has_pgNum())
            {
                (*iter)->toXml(pgNum, _outStream);
            }
            else if ((*iter)->has_cr())
            {
                (*iter)->toXml(cr, _outStream);
            }
            else if ((*iter)->has_tab())
            {
                (*iter)->toXml(tab, _outStream);
            }
            else if ((*iter)->has_object())
            {
                (*iter)->toXml(object, _outStream);
            }
            else if ((*iter)->has_pict())
            {
                (*iter)->toXml(pict, _outStream);
            }
            else if ((*iter)->has_fldChar())
            {
                (*iter)->toXml(fldChar, _outStream);
            }
            else if ((*iter)->has_ruby())
            {
                (*iter)->toXml(ruby, _outStream);
            }
            else if ((*iter)->has_footnoteReference())
            {
                (*iter)->toXml(footnoteReference, _outStream);
            }
            else if ((*iter)->has_endnoteReference())
            {
                (*iter)->toXml(endnoteReference, _outStream);
            }
            else if ((*iter)->has_commentReference())
            {
                (*iter)->toXml(commentReference, _outStream);
            }
            else if ((*iter)->has_drawing())
            {
                (*iter)->toXml(drawing, _outStream);
            }
            else if ((*iter)->has_ptab())
            {
                (*iter)->toXml(ptab, _outStream);
            }
            else if ((*iter)->has_lastRenderedPageBreak())
            {
                (*iter)->toXml(lastRenderedPageBreak, _outStream);
            }
            else if ((*iter)->has_t())
            {
                (*iter)->toXml(t, _outStream);
            }
        }
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_R& default_instance(){

    if (!CT_R::default_instance_)
    {
        CT_R::default_instance_ = new CT_R();
    }
    return *CT_R::default_instance_;

        }

    private:
        bool m_has_rPr ;
        CT_RPR* m_rPr ;
        bool m_has_rPr ;
        CT_RPr* m_rPr ;
        vector<ChildGroup_1*> m_childGroupList_1 ;
        static CT_R* default_instance_ ;
        class ChildGroup_1{
        public:
            bool has_br(){

            return m_has_br;
        
            }
            CT_Br* mutable_br(){

                
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_br = true;
                if (!m_br)
                {
                    m_br = new CT_Br();
                }
                return m_br;
            
            }
            const CT_Br& br(){

            if (m_br)
            {
                return *m_br;
            }
            return CT_Br::default_instance();
        
            }
            bool has_t(){

            return m_has_t;
        
            }
            CT_Text* mutable_t(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = true;
                if (!m_t)
                {
                    m_t = new CT_Text();
                }
                return m_t;
            
            }
            const CT_Text& t(){

            if (m_t)
            {
                return *m_t;
            }
            return CT_Text::default_instance();
        
            }
            bool has_contentPart(){

            return m_has_contentPart;
        
            }
            CT_Rel* mutable_contentPart(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = true;
                if (!m_contentPart)
                {
                    m_contentPart = new CT_Rel();
                }
                return m_contentPart;
            
            }
            const CT_Rel& contentPart(){

            if (m_contentPart)
            {
                return *m_contentPart;
            }
            return CT_Rel::default_instance();
        
            }
            bool has_delText(){

            return m_has_delText;
        
            }
            CT_Text* mutable_delText(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_delText = true;
                if (!m_delText)
                {
                    m_delText = new CT_Text();
                }
                return m_delText;
            
            }
            const CT_Text& delText(){

            if (m_delText)
            {
                return *m_delText;
            }
            return CT_Text::default_instance();
        
            }
            bool has_instrText(){

            return m_has_instrText;
        
            }
            CT_Text* mutable_instrText(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_instrText = true;
                if (!m_instrText)
                {
                    m_instrText = new CT_Text();
                }
                return m_instrText;
            
            }
            const CT_Text& instrText(){

            if (m_instrText)
            {
                return *m_instrText;
            }
            return CT_Text::default_instance();
        
            }
            bool has_delInstrText(){

            return m_has_delInstrText;
        
            }
            CT_Text* mutable_delInstrText(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_delInstrText = true;
                if (!m_delInstrText)
                {
                    m_delInstrText = new CT_Text();
                }
                return m_delInstrText;
            
            }
            const CT_Text& delInstrText(){

            if (m_delInstrText)
            {
                return *m_delInstrText;
            }
            return CT_Text::default_instance();
        
            }
            bool has_noBreakHyphen(){

            return m_has_noBreakHyphen;
        
            }
            CT_Empty* mutable_noBreakHyphen(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_noBreakHyphen = true;
                if (!m_noBreakHyphen)
                {
                    m_noBreakHyphen = new CT_Empty();
                }
                return m_noBreakHyphen;
            
            }
            const CT_Empty& noBreakHyphen(){

            if (m_noBreakHyphen)
            {
                return *m_noBreakHyphen;
            }
            return CT_Empty::default_instance();
        
            }
            bool has_softHyphen(){

            return m_has_softHyphen;
        
            }
            CT_Empty* mutable_softHyphen(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_softHyphen = true;
                if (!m_softHyphen)
                {
                    m_softHyphen = new CT_Empty();
                }
                return m_softHyphen;
            
            }
            const CT_Empty& softHyphen(){

            if (m_softHyphen)
            {
                return *m_softHyphen;
            }
            return CT_Empty::default_instance();
        
            }
            bool has_dayShort(){

            return m_has_dayShort;
        
            }
            CT_Empty* mutable_dayShort(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_dayShort = true;
                if (!m_dayShort)
                {
                    m_dayShort = new CT_Empty();
                }
                return m_dayShort;
            
            }
            const CT_Empty& dayShort(){

            if (m_dayShort)
            {
                return *m_dayShort;
            }
            return CT_Empty::default_instance();
        
            }
            bool has_monthShort(){

            return m_has_monthShort;
        
            }
            CT_Empty* mutable_monthShort(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_monthShort = true;
                if (!m_monthShort)
                {
                    m_monthShort = new CT_Empty();
                }
                return m_monthShort;
            
            }
            const CT_Empty& monthShort(){

            if (m_monthShort)
            {
                return *m_monthShort;
            }
            return CT_Empty::default_instance();
        
            }
            bool has_yearShort(){

            return m_has_yearShort;
        
            }
            CT_Empty* mutable_yearShort(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_yearShort = true;
                if (!m_yearShort)
                {
                    m_yearShort = new CT_Empty();
                }
                return m_yearShort;
            
            }
            const CT_Empty& yearShort(){

            if (m_yearShort)
            {
                return *m_yearShort;
            }
            return CT_Empty::default_instance();
        
            }
            bool has_dayLong(){

            return m_has_dayLong;
        
            }
            CT_Empty* mutable_dayLong(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_dayLong = true;
                if (!m_dayLong)
                {
                    m_dayLong = new CT_Empty();
                }
                return m_dayLong;
            
            }
            const CT_Empty& dayLong(){

            if (m_dayLong)
            {
                return *m_dayLong;
            }
            return CT_Empty::default_instance();
        
            }
            bool has_monthLong(){

            return m_has_monthLong;
        
            }
            CT_Empty* mutable_monthLong(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_monthLong = true;
                if (!m_monthLong)
                {
                    m_monthLong = new CT_Empty();
                }
                return m_monthLong;
            
            }
            const CT_Empty& monthLong(){

            if (m_monthLong)
            {
                return *m_monthLong;
            }
            return CT_Empty::default_instance();
        
            }
            bool has_yearLong(){

            return m_has_yearLong;
        
            }
            CT_Empty* mutable_yearLong(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_yearLong = true;
                if (!m_yearLong)
                {
                    m_yearLong = new CT_Empty();
                }
                return m_yearLong;
            
            }
            const CT_Empty& yearLong(){

            if (m_yearLong)
            {
                return *m_yearLong;
            }
            return CT_Empty::default_instance();
        
            }
            bool has_annotationRef(){

            return m_has_annotationRef;
        
            }
            CT_Empty* mutable_annotationRef(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_annotationRef = true;
                if (!m_annotationRef)
                {
                    m_annotationRef = new CT_Empty();
                }
                return m_annotationRef;
            
            }
            const CT_Empty& annotationRef(){

            if (m_annotationRef)
            {
                return *m_annotationRef;
            }
            return CT_Empty::default_instance();
        
            }
            bool has_footnoteRef(){

            return m_has_footnoteRef;
        
            }
            CT_Empty* mutable_footnoteRef(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_footnoteRef = true;
                if (!m_footnoteRef)
                {
                    m_footnoteRef = new CT_Empty();
                }
                return m_footnoteRef;
            
            }
            const CT_Empty& footnoteRef(){

            if (m_footnoteRef)
            {
                return *m_footnoteRef;
            }
            return CT_Empty::default_instance();
        
            }
            bool has_endnoteRef(){

            return m_has_endnoteRef;
        
            }
            CT_Empty* mutable_endnoteRef(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_endnoteRef = true;
                if (!m_endnoteRef)
                {
                    m_endnoteRef = new CT_Empty();
                }
                return m_endnoteRef;
            
            }
            const CT_Empty& endnoteRef(){

            if (m_endnoteRef)
            {
                return *m_endnoteRef;
            }
            return CT_Empty::default_instance();
        
            }
            bool has_separator(){

            return m_has_separator;
        
            }
            CT_Empty* mutable_separator(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_separator = true;
                if (!m_separator)
                {
                    m_separator = new CT_Empty();
                }
                return m_separator;
            
            }
            const CT_Empty& separator(){

            if (m_separator)
            {
                return *m_separator;
            }
            return CT_Empty::default_instance();
        
            }
            bool has_continuationSeparator(){

            return m_has_continuationSeparator;
        
            }
            CT_Empty* mutable_continuationSeparator(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_continuationSeparator = true;
                if (!m_continuationSeparator)
                {
                    m_continuationSeparator = new CT_Empty();
                }
                return m_continuationSeparator;
            
            }
            const CT_Empty& continuationSeparator(){

            if (m_continuationSeparator)
            {
                return *m_continuationSeparator;
            }
            return CT_Empty::default_instance();
        
            }
            bool has_sym(){

            return m_has_sym;
        
            }
            CT_Sym* mutable_sym(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_sym = true;
                if (!m_sym)
                {
                    m_sym = new CT_Sym();
                }
                return m_sym;
            
            }
            const CT_Sym& sym(){

            if (m_sym)
            {
                return *m_sym;
            }
            return CT_Sym::default_instance();
        
            }
            bool has_pgNum(){

            return m_has_pgNum;
        
            }
            CT_Empty* mutable_pgNum(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_pgNum = true;
                if (!m_pgNum)
                {
                    m_pgNum = new CT_Empty();
                }
                return m_pgNum;
            
            }
            const CT_Empty& pgNum(){

            if (m_pgNum)
            {
                return *m_pgNum;
            }
            return CT_Empty::default_instance();
        
            }
            bool has_cr(){

            return m_has_cr;
        
            }
            CT_Empty* mutable_cr(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_cr = true;
                if (!m_cr)
                {
                    m_cr = new CT_Empty();
                }
                return m_cr;
            
            }
            const CT_Empty& cr(){

            if (m_cr)
            {
                return *m_cr;
            }
            return CT_Empty::default_instance();
        
            }
            bool has_tab(){

            return m_has_tab;
        
            }
            CT_Empty* mutable_tab(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_tab = true;
                if (!m_tab)
                {
                    m_tab = new CT_Empty();
                }
                return m_tab;
            
            }
            const CT_Empty& tab(){

            if (m_tab)
            {
                return *m_tab;
            }
            return CT_Empty::default_instance();
        
            }
            bool has_object(){

            return m_has_object;
        
            }
            CT_Object* mutable_object(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_object = true;
                if (!m_object)
                {
                    m_object = new CT_Object();
                }
                return m_object;
            
            }
            const CT_Object& object(){

            if (m_object)
            {
                return *m_object;
            }
            return CT_Object::default_instance();
        
            }
            bool has_pict(){

            return m_has_pict;
        
            }
            CT_Picture* mutable_pict(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_pict = true;
                if (!m_pict)
                {
                    m_pict = new CT_Picture();
                }
                return m_pict;
            
            }
            const CT_Picture& pict(){

            if (m_pict)
            {
                return *m_pict;
            }
            return CT_Picture::default_instance();
        
            }
            bool has_fldChar(){

            return m_has_fldChar;
        
            }
            CT_FldChar* mutable_fldChar(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_fldChar = true;
                if (!m_fldChar)
                {
                    m_fldChar = new CT_FldChar();
                }
                return m_fldChar;
            
            }
            const CT_FldChar& fldChar(){

            if (m_fldChar)
            {
                return *m_fldChar;
            }
            return CT_FldChar::default_instance();
        
            }
            bool has_ruby(){

            return m_has_ruby;
        
            }
            CT_Ruby* mutable_ruby(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_ruby = true;
                if (!m_ruby)
                {
                    m_ruby = new CT_Ruby();
                }
                return m_ruby;
            
            }
            const CT_Ruby& ruby(){

            if (m_ruby)
            {
                return *m_ruby;
            }
            return CT_Ruby::default_instance();
        
            }
            bool has_footnoteReference(){

            return m_has_footnoteReference;
        
            }
            CT_FtnEdnRef* mutable_footnoteReference(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_footnoteReference = true;
                if (!m_footnoteReference)
                {
                    m_footnoteReference = new CT_FtnEdnRef();
                }
                return m_footnoteReference;
            
            }
            const CT_FtnEdnRef& footnoteReference(){

            if (m_footnoteReference)
            {
                return *m_footnoteReference;
            }
            return CT_FtnEdnRef::default_instance();
        
            }
            bool has_endnoteReference(){

            return m_has_endnoteReference;
        
            }
            CT_FtnEdnRef* mutable_endnoteReference(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_endnoteReference = true;
                if (!m_endnoteReference)
                {
                    m_endnoteReference = new CT_FtnEdnRef();
                }
                return m_endnoteReference;
            
            }
            const CT_FtnEdnRef& endnoteReference(){

            if (m_endnoteReference)
            {
                return *m_endnoteReference;
            }
            return CT_FtnEdnRef::default_instance();
        
            }
            bool has_commentReference(){

            return m_has_commentReference;
        
            }
            CT_Markup* mutable_commentReference(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_commentReference = true;
                if (!m_commentReference)
                {
                    m_commentReference = new CT_Markup();
                }
                return m_commentReference;
            
            }
            const CT_Markup& commentReference(){

            if (m_commentReference)
            {
                return *m_commentReference;
            }
            return CT_Markup::default_instance();
        
            }
            bool has_drawing(){

            return m_has_drawing;
        
            }
            CT_Drawing* mutable_drawing(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_drawing = true;
                if (!m_drawing)
                {
                    m_drawing = new CT_Drawing();
                }
                return m_drawing;
            
            }
            const CT_Drawing& drawing(){

            if (m_drawing)
            {
                return *m_drawing;
            }
            return CT_Drawing::default_instance();
        
            }
            bool has_ptab(){

            return m_has_ptab;
        
            }
            CT_PTab* mutable_ptab(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_ptab = true;
                if (!m_ptab)
                {
                    m_ptab = new CT_PTab();
                }
                return m_ptab;
            
            }
            const CT_PTab& ptab(){

            if (m_ptab)
            {
                return *m_ptab;
            }
            return CT_PTab::default_instance();
        
            }
            bool has_lastRenderedPageBreak(){

            return m_has_lastRenderedPageBreak;
        
            }
            CT_Empty* mutable_lastRenderedPageBreak(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_t = false;
                
        if (m_t)
        {
            delete m_t;
            m_t = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = true;
                if (!m_lastRenderedPageBreak)
                {
                    m_lastRenderedPageBreak = new CT_Empty();
                }
                return m_lastRenderedPageBreak;
            
            }
            const CT_Empty& lastRenderedPageBreak(){

            if (m_lastRenderedPageBreak)
            {
                return *m_lastRenderedPageBreak;
            }
            return CT_Empty::default_instance();
        
            }
            bool has_t(){

            return m_has_t;
        
            }
            CT_Text* mutable_t(){

                
                m_has_br = false;
                
        if (m_br)
        {
            delete m_br;
            m_br = NULL;
        }
    ;
            
                m_has_contentPart = false;
                
        if (m_contentPart)
        {
            delete m_contentPart;
            m_contentPart = NULL;
        }
    ;
            
                m_has_delText = false;
                
        if (m_delText)
        {
            delete m_delText;
            m_delText = NULL;
        }
    ;
            
                m_has_instrText = false;
                
        if (m_instrText)
        {
            delete m_instrText;
            m_instrText = NULL;
        }
    ;
            
                m_has_delInstrText = false;
                
        if (m_delInstrText)
        {
            delete m_delInstrText;
            m_delInstrText = NULL;
        }
    ;
            
                m_has_noBreakHyphen = false;
                
        if (m_noBreakHyphen)
        {
            delete m_noBreakHyphen;
            m_noBreakHyphen = NULL;
        }
    ;
            
                m_has_softHyphen = false;
                
        if (m_softHyphen)
        {
            delete m_softHyphen;
            m_softHyphen = NULL;
        }
    ;
            
                m_has_dayShort = false;
                
        if (m_dayShort)
        {
            delete m_dayShort;
            m_dayShort = NULL;
        }
    ;
            
                m_has_monthShort = false;
                
        if (m_monthShort)
        {
            delete m_monthShort;
            m_monthShort = NULL;
        }
    ;
            
                m_has_yearShort = false;
                
        if (m_yearShort)
        {
            delete m_yearShort;
            m_yearShort = NULL;
        }
    ;
            
                m_has_dayLong = false;
                
        if (m_dayLong)
        {
            delete m_dayLong;
            m_dayLong = NULL;
        }
    ;
            
                m_has_monthLong = false;
                
        if (m_monthLong)
        {
            delete m_monthLong;
            m_monthLong = NULL;
        }
    ;
            
                m_has_yearLong = false;
                
        if (m_yearLong)
        {
            delete m_yearLong;
            m_yearLong = NULL;
        }
    ;
            
                m_has_annotationRef = false;
                
        if (m_annotationRef)
        {
            delete m_annotationRef;
            m_annotationRef = NULL;
        }
    ;
            
                m_has_footnoteRef = false;
                
        if (m_footnoteRef)
        {
            delete m_footnoteRef;
            m_footnoteRef = NULL;
        }
    ;
            
                m_has_endnoteRef = false;
                
        if (m_endnoteRef)
        {
            delete m_endnoteRef;
            m_endnoteRef = NULL;
        }
    ;
            
                m_has_separator = false;
                
        if (m_separator)
        {
            delete m_separator;
            m_separator = NULL;
        }
    ;
            
                m_has_continuationSeparator = false;
                
        if (m_continuationSeparator)
        {
            delete m_continuationSeparator;
            m_continuationSeparator = NULL;
        }
    ;
            
                m_has_sym = false;
                
        if (m_sym)
        {
            delete m_sym;
            m_sym = NULL;
        }
    ;
            
                m_has_pgNum = false;
                
        if (m_pgNum)
        {
            delete m_pgNum;
            m_pgNum = NULL;
        }
    ;
            
                m_has_cr = false;
                
        if (m_cr)
        {
            delete m_cr;
            m_cr = NULL;
        }
    ;
            
                m_has_tab = false;
                
        if (m_tab)
        {
            delete m_tab;
            m_tab = NULL;
        }
    ;
            
                m_has_object = false;
                
        if (m_object)
        {
            delete m_object;
            m_object = NULL;
        }
    ;
            
                m_has_pict = false;
                
        if (m_pict)
        {
            delete m_pict;
            m_pict = NULL;
        }
    ;
            
                m_has_fldChar = false;
                
        if (m_fldChar)
        {
            delete m_fldChar;
            m_fldChar = NULL;
        }
    ;
            
                m_has_ruby = false;
                
        if (m_ruby)
        {
            delete m_ruby;
            m_ruby = NULL;
        }
    ;
            
                m_has_footnoteReference = false;
                
        if (m_footnoteReference)
        {
            delete m_footnoteReference;
            m_footnoteReference = NULL;
        }
    ;
            
                m_has_endnoteReference = false;
                
        if (m_endnoteReference)
        {
            delete m_endnoteReference;
            m_endnoteReference = NULL;
        }
    ;
            
                m_has_commentReference = false;
                
        if (m_commentReference)
        {
            delete m_commentReference;
            m_commentReference = NULL;
        }
    ;
            
                m_has_drawing = false;
                
        if (m_drawing)
        {
            delete m_drawing;
            m_drawing = NULL;
        }
    ;
            
                m_has_ptab = false;
                
        if (m_ptab)
        {
            delete m_ptab;
            m_ptab = NULL;
        }
    ;
            
                m_has_lastRenderedPageBreak = false;
                
        if (m_lastRenderedPageBreak)
        {
            delete m_lastRenderedPageBreak;
            m_lastRenderedPageBreak = NULL;
        }
    ;
            
                m_has_t = true;
                if (!m_t)
                {
                    m_t = new CT_Text();
                }
                return m_t;
            
            }
            const CT_Text& t(){

            if (m_t)
            {
                return *m_t;
            }
            return CT_Text::default_instance();
        
            }

        private:
            bool m_has_br ;
            CT_Br* m_br ;
            bool m_has_t ;
            CT_Text* m_t ;
            bool m_has_contentPart ;
            CT_Rel* m_contentPart ;
            bool m_has_delText ;
            CT_Text* m_delText ;
            bool m_has_instrText ;
            CT_Text* m_instrText ;
            bool m_has_delInstrText ;
            CT_Text* m_delInstrText ;
            bool m_has_noBreakHyphen ;
            CT_Empty* m_noBreakHyphen ;
            bool m_has_softHyphen ;
            CT_Empty* m_softHyphen ;
            bool m_has_dayShort ;
            CT_Empty* m_dayShort ;
            bool m_has_monthShort ;
            CT_Empty* m_monthShort ;
            bool m_has_yearShort ;
            CT_Empty* m_yearShort ;
            bool m_has_dayLong ;
            CT_Empty* m_dayLong ;
            bool m_has_monthLong ;
            CT_Empty* m_monthLong ;
            bool m_has_yearLong ;
            CT_Empty* m_yearLong ;
            bool m_has_annotationRef ;
            CT_Empty* m_annotationRef ;
            bool m_has_footnoteRef ;
            CT_Empty* m_footnoteRef ;
            bool m_has_endnoteRef ;
            CT_Empty* m_endnoteRef ;
            bool m_has_separator ;
            CT_Empty* m_separator ;
            bool m_has_continuationSeparator ;
            CT_Empty* m_continuationSeparator ;
            bool m_has_sym ;
            CT_Sym* m_sym ;
            bool m_has_pgNum ;
            CT_Empty* m_pgNum ;
            bool m_has_cr ;
            CT_Empty* m_cr ;
            bool m_has_tab ;
            CT_Empty* m_tab ;
            bool m_has_object ;
            CT_Object* m_object ;
            bool m_has_pict ;
            CT_Picture* m_pict ;
            bool m_has_fldChar ;
            CT_FldChar* m_fldChar ;
            bool m_has_ruby ;
            CT_Ruby* m_ruby ;
            bool m_has_footnoteReference ;
            CT_FtnEdnRef* m_footnoteReference ;
            bool m_has_endnoteReference ;
            CT_FtnEdnRef* m_endnoteReference ;
            bool m_has_commentReference ;
            CT_Markup* m_commentReference ;
            bool m_has_drawing ;
            CT_Drawing* m_drawing ;
            bool m_has_ptab ;
            CT_PTab* m_ptab ;
            bool m_has_lastRenderedPageBreak ;
            CT_Empty* m_lastRenderedPageBreak ;
            bool m_has_t ;
            CT_Text* m_t ;

        }


    }

    class CT_CtrlPr : public XSD::ComplexType{
    public:
        bool has_rPr(){

            return m_has_rPr;
        
        }
        CT_RPr* mutable_rPr(){

                
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_rPr = true;
                if (!m_rPr)
                {
                    m_rPr = new CT_RPr();
                }
                return m_rPr;
            
        }
        const CT_RPr& rPr(){

            if (m_rPr)
            {
                return *m_rPr;
            }
            return CT_RPr::default_instance();
        
        }
        bool has_ins(){

            return m_has_ins;
        
        }
        CT_MathCtrlIns* mutable_ins(){

                
                m_has_rPr = false;
                
        if (m_rPr)
        {
            delete m_rPr;
            m_rPr = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_ins = true;
                if (!m_ins)
                {
                    m_ins = new CT_MathCtrlIns();
                }
                return m_ins;
            
        }
        const CT_MathCtrlIns& ins(){

            if (m_ins)
            {
                return *m_ins;
            }
            return CT_MathCtrlIns::default_instance();
        
        }
        bool has_del(){

            return m_has_del;
        
        }
        CT_MathCtrlDel* mutable_del(){

                
                m_has_rPr = false;
                
        if (m_rPr)
        {
            delete m_rPr;
            m_rPr = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = true;
                if (!m_del)
                {
                    m_del = new CT_MathCtrlDel();
                }
                return m_del;
            
        }
        const CT_MathCtrlDel& del(){

            if (m_del)
            {
                return *m_del;
            }
            return CT_MathCtrlDel::default_instance();
        
        }
        void clear(){

                m_has_rPr = false;
                
        if (m_rPr)
        {
            delete m_rPr;
            m_rPr = NULL;
        }
    
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_rPr)
                {
                    m_rPr->toXml(rPr, _outStream);;
                }
            
                if (m_has_ins)
                {
                    m_rPr->toXml(ins, _outStream);;
                }
            
                if (m_has_del)
                {
                    m_rPr->toXml(del, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_CtrlPr& default_instance(){

    if (!CT_CtrlPr::default_instance_)
    {
        CT_CtrlPr::default_instance_ = new CT_CtrlPr();
    }
    return *CT_CtrlPr::default_instance_;

        }

    private:
        bool m_has_rPr ;
        CT_RPr* m_rPr ;
        bool m_has_ins ;
        CT_MathCtrlIns* m_ins ;
        bool m_has_del ;
        CT_MathCtrlDel* m_del ;
        static CT_CtrlPr* default_instance_ ;

    }

    class CT_AccPr : public XSD::ComplexType{
    public:
        bool has_chr(){

            return m_has_chr;
        
        }
        CT_Char* mutable_chr(){

                m_has_chr = true;
                if (!m_chr)
                {
                    m_chr = new CT_Char();
                }
                return m_chr;
            
        }
        const CT_Char& chr(){

            if (m_chr)
            {
                return *m_chr;
            }
            return CT_Char::default_instance();
        
        }
        bool has_ctrlPr(){

            return m_has_ctrlPr;
        
        }
        CT_CtrlPr* mutable_ctrlPr(){

                m_has_ctrlPr = true;
                if (!m_ctrlPr)
                {
                    m_ctrlPr = new CT_CtrlPr();
                }
                return m_ctrlPr;
            
        }
        const CT_CtrlPr& ctrlPr(){

            if (m_ctrlPr)
            {
                return *m_ctrlPr;
            }
            return CT_CtrlPr::default_instance();
        
        }
        void clear(){

                m_has_chr = false;
                
        if (m_chr)
        {
            delete m_chr;
            m_chr = NULL;
        }
    
            
                m_has_ctrlPr = false;
                
        if (m_ctrlPr)
        {
            delete m_ctrlPr;
            m_ctrlPr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_chr)
                {
                    m_chr->toXml(chr, _outStream);;
                }
            
                if (m_has_ctrlPr)
                {
                    m_chr->toXml(ctrlPr, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_AccPr& default_instance(){

    if (!CT_AccPr::default_instance_)
    {
        CT_AccPr::default_instance_ = new CT_AccPr();
    }
    return *CT_AccPr::default_instance_;

        }

    private:
        bool m_has_chr ;
        CT_Char* m_chr ;
        bool m_has_ctrlPr ;
        CT_CtrlPr* m_ctrlPr ;
        static CT_AccPr* default_instance_ ;

    }

    class CT_Acc : public XSD::ComplexType{
    public:
        bool has_accPr(){

            return m_has_accPr;
        
        }
        CT_AccPr* mutable_accPr(){

                m_has_accPr = true;
                if (!m_accPr)
                {
                    m_accPr = new CT_AccPr();
                }
                return m_accPr;
            
        }
        const CT_AccPr& accPr(){

            if (m_accPr)
            {
                return *m_accPr;
            }
            return CT_AccPr::default_instance();
        
        }
        bool has_e(){

            return m_has_e;
        
        }
        CT_OMathArg* mutable_e(){

                m_has_e = true;
                if (!m_e)
                {
                    m_e = new CT_OMathArg();
                }
                return m_e;
            
        }
        const CT_OMathArg& e(){

            if (m_e)
            {
                return *m_e;
            }
            return CT_OMathArg::default_instance();
        
        }
        void clear(){

                m_has_accPr = false;
                
        if (m_accPr)
        {
            delete m_accPr;
            m_accPr = NULL;
        }
    
            
                m_has_e = false;
                
        if (m_e)
        {
            delete m_e;
            m_e = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_accPr)
                {
                    m_accPr->toXml(accPr, _outStream);;
                }
            
                if (m_has_e)
                {
                    m_accPr->toXml(e, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Acc& default_instance(){

    if (!CT_Acc::default_instance_)
    {
        CT_Acc::default_instance_ = new CT_Acc();
    }
    return *CT_Acc::default_instance_;

        }

    private:
        bool m_has_accPr ;
        CT_AccPr* m_accPr ;
        bool m_has_e ;
        CT_OMathArg* m_e ;
        static CT_Acc* default_instance_ ;

    }

    class CT_BarPr : public XSD::ComplexType{
    public:
        bool has_pos(){

            return m_has_pos;
        
        }
        CT_TopBot* mutable_pos(){

                m_has_pos = true;
                if (!m_pos)
                {
                    m_pos = new CT_TopBot();
                }
                return m_pos;
            
        }
        const CT_TopBot& pos(){

            if (m_pos)
            {
                return *m_pos;
            }
            return CT_TopBot::default_instance();
        
        }
        bool has_ctrlPr(){

            return m_has_ctrlPr;
        
        }
        CT_CtrlPr* mutable_ctrlPr(){

                m_has_ctrlPr = true;
                if (!m_ctrlPr)
                {
                    m_ctrlPr = new CT_CtrlPr();
                }
                return m_ctrlPr;
            
        }
        const CT_CtrlPr& ctrlPr(){

            if (m_ctrlPr)
            {
                return *m_ctrlPr;
            }
            return CT_CtrlPr::default_instance();
        
        }
        void clear(){

                m_has_pos = false;
                
        if (m_pos)
        {
            delete m_pos;
            m_pos = NULL;
        }
    
            
                m_has_ctrlPr = false;
                
        if (m_ctrlPr)
        {
            delete m_ctrlPr;
            m_ctrlPr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_pos)
                {
                    m_pos->toXml(pos, _outStream);;
                }
            
                if (m_has_ctrlPr)
                {
                    m_pos->toXml(ctrlPr, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_BarPr& default_instance(){

    if (!CT_BarPr::default_instance_)
    {
        CT_BarPr::default_instance_ = new CT_BarPr();
    }
    return *CT_BarPr::default_instance_;

        }

    private:
        bool m_has_pos ;
        CT_TopBot* m_pos ;
        bool m_has_ctrlPr ;
        CT_CtrlPr* m_ctrlPr ;
        static CT_BarPr* default_instance_ ;

    }

    class CT_Bar : public XSD::ComplexType{
    public:
        bool has_barPr(){

            return m_has_barPr;
        
        }
        CT_BarPr* mutable_barPr(){

                m_has_barPr = true;
                if (!m_barPr)
                {
                    m_barPr = new CT_BarPr();
                }
                return m_barPr;
            
        }
        const CT_BarPr& barPr(){

            if (m_barPr)
            {
                return *m_barPr;
            }
            return CT_BarPr::default_instance();
        
        }
        bool has_e(){

            return m_has_e;
        
        }
        CT_OMathArg* mutable_e(){

                m_has_e = true;
                if (!m_e)
                {
                    m_e = new CT_OMathArg();
                }
                return m_e;
            
        }
        const CT_OMathArg& e(){

            if (m_e)
            {
                return *m_e;
            }
            return CT_OMathArg::default_instance();
        
        }
        void clear(){

                m_has_barPr = false;
                
        if (m_barPr)
        {
            delete m_barPr;
            m_barPr = NULL;
        }
    
            
                m_has_e = false;
                
        if (m_e)
        {
            delete m_e;
            m_e = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_barPr)
                {
                    m_barPr->toXml(barPr, _outStream);;
                }
            
                if (m_has_e)
                {
                    m_barPr->toXml(e, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Bar& default_instance(){

    if (!CT_Bar::default_instance_)
    {
        CT_Bar::default_instance_ = new CT_Bar();
    }
    return *CT_Bar::default_instance_;

        }

    private:
        bool m_has_barPr ;
        CT_BarPr* m_barPr ;
        bool m_has_e ;
        CT_OMathArg* m_e ;
        static CT_Bar* default_instance_ ;

    }

    class CT_BoxPr : public XSD::ComplexType{
    public:
        bool has_opEmu(){

            return m_has_opEmu;
        
        }
        CT_OnOff* mutable_opEmu(){

                m_has_opEmu = true;
                if (!m_opEmu)
                {
                    m_opEmu = new CT_OnOff();
                }
                return m_opEmu;
            
        }
        const CT_OnOff& opEmu(){

            if (m_opEmu)
            {
                return *m_opEmu;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_noBreak(){

            return m_has_noBreak;
        
        }
        CT_OnOff* mutable_noBreak(){

                m_has_noBreak = true;
                if (!m_noBreak)
                {
                    m_noBreak = new CT_OnOff();
                }
                return m_noBreak;
            
        }
        const CT_OnOff& noBreak(){

            if (m_noBreak)
            {
                return *m_noBreak;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_diff(){

            return m_has_diff;
        
        }
        CT_OnOff* mutable_diff(){

                m_has_diff = true;
                if (!m_diff)
                {
                    m_diff = new CT_OnOff();
                }
                return m_diff;
            
        }
        const CT_OnOff& diff(){

            if (m_diff)
            {
                return *m_diff;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_brk(){

            return m_has_brk;
        
        }
        CT_ManualBreak* mutable_brk(){

                m_has_brk = true;
                if (!m_brk)
                {
                    m_brk = new CT_ManualBreak();
                }
                return m_brk;
            
        }
        const CT_ManualBreak& brk(){

            if (m_brk)
            {
                return *m_brk;
            }
            return CT_ManualBreak::default_instance();
        
        }
        bool has_aln(){

            return m_has_aln;
        
        }
        CT_OnOff* mutable_aln(){

                m_has_aln = true;
                if (!m_aln)
                {
                    m_aln = new CT_OnOff();
                }
                return m_aln;
            
        }
        const CT_OnOff& aln(){

            if (m_aln)
            {
                return *m_aln;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_ctrlPr(){

            return m_has_ctrlPr;
        
        }
        CT_CtrlPr* mutable_ctrlPr(){

                m_has_ctrlPr = true;
                if (!m_ctrlPr)
                {
                    m_ctrlPr = new CT_CtrlPr();
                }
                return m_ctrlPr;
            
        }
        const CT_CtrlPr& ctrlPr(){

            if (m_ctrlPr)
            {
                return *m_ctrlPr;
            }
            return CT_CtrlPr::default_instance();
        
        }
        void clear(){

                m_has_opEmu = false;
                
        if (m_opEmu)
        {
            delete m_opEmu;
            m_opEmu = NULL;
        }
    
            
                m_has_noBreak = false;
                
        if (m_noBreak)
        {
            delete m_noBreak;
            m_noBreak = NULL;
        }
    
            
                m_has_diff = false;
                
        if (m_diff)
        {
            delete m_diff;
            m_diff = NULL;
        }
    
            
                m_has_brk = false;
                
        if (m_brk)
        {
            delete m_brk;
            m_brk = NULL;
        }
    
            
                m_has_aln = false;
                
        if (m_aln)
        {
            delete m_aln;
            m_aln = NULL;
        }
    
            
                m_has_ctrlPr = false;
                
        if (m_ctrlPr)
        {
            delete m_ctrlPr;
            m_ctrlPr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_opEmu)
                {
                    m_opEmu->toXml(opEmu, _outStream);;
                }
            
                if (m_has_noBreak)
                {
                    m_opEmu->toXml(noBreak, _outStream);;
                }
            
                if (m_has_diff)
                {
                    m_opEmu->toXml(diff, _outStream);;
                }
            
                if (m_has_brk)
                {
                    m_opEmu->toXml(brk, _outStream);;
                }
            
                if (m_has_aln)
                {
                    m_opEmu->toXml(aln, _outStream);;
                }
            
                if (m_has_ctrlPr)
                {
                    m_opEmu->toXml(ctrlPr, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_BoxPr& default_instance(){

    if (!CT_BoxPr::default_instance_)
    {
        CT_BoxPr::default_instance_ = new CT_BoxPr();
    }
    return *CT_BoxPr::default_instance_;

        }

    private:
        bool m_has_opEmu ;
        CT_OnOff* m_opEmu ;
        bool m_has_noBreak ;
        CT_OnOff* m_noBreak ;
        bool m_has_diff ;
        CT_OnOff* m_diff ;
        bool m_has_brk ;
        CT_ManualBreak* m_brk ;
        bool m_has_aln ;
        CT_OnOff* m_aln ;
        bool m_has_ctrlPr ;
        CT_CtrlPr* m_ctrlPr ;
        static CT_BoxPr* default_instance_ ;

    }

    class CT_Box : public XSD::ComplexType{
    public:
        bool has_boxPr(){

            return m_has_boxPr;
        
        }
        CT_BoxPr* mutable_boxPr(){

                m_has_boxPr = true;
                if (!m_boxPr)
                {
                    m_boxPr = new CT_BoxPr();
                }
                return m_boxPr;
            
        }
        const CT_BoxPr& boxPr(){

            if (m_boxPr)
            {
                return *m_boxPr;
            }
            return CT_BoxPr::default_instance();
        
        }
        bool has_e(){

            return m_has_e;
        
        }
        CT_OMathArg* mutable_e(){

                m_has_e = true;
                if (!m_e)
                {
                    m_e = new CT_OMathArg();
                }
                return m_e;
            
        }
        const CT_OMathArg& e(){

            if (m_e)
            {
                return *m_e;
            }
            return CT_OMathArg::default_instance();
        
        }
        void clear(){

                m_has_boxPr = false;
                
        if (m_boxPr)
        {
            delete m_boxPr;
            m_boxPr = NULL;
        }
    
            
                m_has_e = false;
                
        if (m_e)
        {
            delete m_e;
            m_e = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_boxPr)
                {
                    m_boxPr->toXml(boxPr, _outStream);;
                }
            
                if (m_has_e)
                {
                    m_boxPr->toXml(e, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Box& default_instance(){

    if (!CT_Box::default_instance_)
    {
        CT_Box::default_instance_ = new CT_Box();
    }
    return *CT_Box::default_instance_;

        }

    private:
        bool m_has_boxPr ;
        CT_BoxPr* m_boxPr ;
        bool m_has_e ;
        CT_OMathArg* m_e ;
        static CT_Box* default_instance_ ;

    }

    class CT_BorderBoxPr : public XSD::ComplexType{
    public:
        bool has_hideTop(){

            return m_has_hideTop;
        
        }
        CT_OnOff* mutable_hideTop(){

                m_has_hideTop = true;
                if (!m_hideTop)
                {
                    m_hideTop = new CT_OnOff();
                }
                return m_hideTop;
            
        }
        const CT_OnOff& hideTop(){

            if (m_hideTop)
            {
                return *m_hideTop;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_hideBot(){

            return m_has_hideBot;
        
        }
        CT_OnOff* mutable_hideBot(){

                m_has_hideBot = true;
                if (!m_hideBot)
                {
                    m_hideBot = new CT_OnOff();
                }
                return m_hideBot;
            
        }
        const CT_OnOff& hideBot(){

            if (m_hideBot)
            {
                return *m_hideBot;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_hideLeft(){

            return m_has_hideLeft;
        
        }
        CT_OnOff* mutable_hideLeft(){

                m_has_hideLeft = true;
                if (!m_hideLeft)
                {
                    m_hideLeft = new CT_OnOff();
                }
                return m_hideLeft;
            
        }
        const CT_OnOff& hideLeft(){

            if (m_hideLeft)
            {
                return *m_hideLeft;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_hideRight(){

            return m_has_hideRight;
        
        }
        CT_OnOff* mutable_hideRight(){

                m_has_hideRight = true;
                if (!m_hideRight)
                {
                    m_hideRight = new CT_OnOff();
                }
                return m_hideRight;
            
        }
        const CT_OnOff& hideRight(){

            if (m_hideRight)
            {
                return *m_hideRight;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_strikeH(){

            return m_has_strikeH;
        
        }
        CT_OnOff* mutable_strikeH(){

                m_has_strikeH = true;
                if (!m_strikeH)
                {
                    m_strikeH = new CT_OnOff();
                }
                return m_strikeH;
            
        }
        const CT_OnOff& strikeH(){

            if (m_strikeH)
            {
                return *m_strikeH;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_strikeV(){

            return m_has_strikeV;
        
        }
        CT_OnOff* mutable_strikeV(){

                m_has_strikeV = true;
                if (!m_strikeV)
                {
                    m_strikeV = new CT_OnOff();
                }
                return m_strikeV;
            
        }
        const CT_OnOff& strikeV(){

            if (m_strikeV)
            {
                return *m_strikeV;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_strikeBLTR(){

            return m_has_strikeBLTR;
        
        }
        CT_OnOff* mutable_strikeBLTR(){

                m_has_strikeBLTR = true;
                if (!m_strikeBLTR)
                {
                    m_strikeBLTR = new CT_OnOff();
                }
                return m_strikeBLTR;
            
        }
        const CT_OnOff& strikeBLTR(){

            if (m_strikeBLTR)
            {
                return *m_strikeBLTR;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_strikeTLBR(){

            return m_has_strikeTLBR;
        
        }
        CT_OnOff* mutable_strikeTLBR(){

                m_has_strikeTLBR = true;
                if (!m_strikeTLBR)
                {
                    m_strikeTLBR = new CT_OnOff();
                }
                return m_strikeTLBR;
            
        }
        const CT_OnOff& strikeTLBR(){

            if (m_strikeTLBR)
            {
                return *m_strikeTLBR;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_ctrlPr(){

            return m_has_ctrlPr;
        
        }
        CT_CtrlPr* mutable_ctrlPr(){

                m_has_ctrlPr = true;
                if (!m_ctrlPr)
                {
                    m_ctrlPr = new CT_CtrlPr();
                }
                return m_ctrlPr;
            
        }
        const CT_CtrlPr& ctrlPr(){

            if (m_ctrlPr)
            {
                return *m_ctrlPr;
            }
            return CT_CtrlPr::default_instance();
        
        }
        void clear(){

                m_has_hideTop = false;
                
        if (m_hideTop)
        {
            delete m_hideTop;
            m_hideTop = NULL;
        }
    
            
                m_has_hideBot = false;
                
        if (m_hideBot)
        {
            delete m_hideBot;
            m_hideBot = NULL;
        }
    
            
                m_has_hideLeft = false;
                
        if (m_hideLeft)
        {
            delete m_hideLeft;
            m_hideLeft = NULL;
        }
    
            
                m_has_hideRight = false;
                
        if (m_hideRight)
        {
            delete m_hideRight;
            m_hideRight = NULL;
        }
    
            
                m_has_strikeH = false;
                
        if (m_strikeH)
        {
            delete m_strikeH;
            m_strikeH = NULL;
        }
    
            
                m_has_strikeV = false;
                
        if (m_strikeV)
        {
            delete m_strikeV;
            m_strikeV = NULL;
        }
    
            
                m_has_strikeBLTR = false;
                
        if (m_strikeBLTR)
        {
            delete m_strikeBLTR;
            m_strikeBLTR = NULL;
        }
    
            
                m_has_strikeTLBR = false;
                
        if (m_strikeTLBR)
        {
            delete m_strikeTLBR;
            m_strikeTLBR = NULL;
        }
    
            
                m_has_ctrlPr = false;
                
        if (m_ctrlPr)
        {
            delete m_ctrlPr;
            m_ctrlPr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_hideTop)
                {
                    m_hideTop->toXml(hideTop, _outStream);;
                }
            
                if (m_has_hideBot)
                {
                    m_hideTop->toXml(hideBot, _outStream);;
                }
            
                if (m_has_hideLeft)
                {
                    m_hideTop->toXml(hideLeft, _outStream);;
                }
            
                if (m_has_hideRight)
                {
                    m_hideTop->toXml(hideRight, _outStream);;
                }
            
                if (m_has_strikeH)
                {
                    m_hideTop->toXml(strikeH, _outStream);;
                }
            
                if (m_has_strikeV)
                {
                    m_hideTop->toXml(strikeV, _outStream);;
                }
            
                if (m_has_strikeBLTR)
                {
                    m_hideTop->toXml(strikeBLTR, _outStream);;
                }
            
                if (m_has_strikeTLBR)
                {
                    m_hideTop->toXml(strikeTLBR, _outStream);;
                }
            
                if (m_has_ctrlPr)
                {
                    m_hideTop->toXml(ctrlPr, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_BorderBoxPr& default_instance(){

    if (!CT_BorderBoxPr::default_instance_)
    {
        CT_BorderBoxPr::default_instance_ = new CT_BorderBoxPr();
    }
    return *CT_BorderBoxPr::default_instance_;

        }

    private:
        bool m_has_hideTop ;
        CT_OnOff* m_hideTop ;
        bool m_has_hideBot ;
        CT_OnOff* m_hideBot ;
        bool m_has_hideLeft ;
        CT_OnOff* m_hideLeft ;
        bool m_has_hideRight ;
        CT_OnOff* m_hideRight ;
        bool m_has_strikeH ;
        CT_OnOff* m_strikeH ;
        bool m_has_strikeV ;
        CT_OnOff* m_strikeV ;
        bool m_has_strikeBLTR ;
        CT_OnOff* m_strikeBLTR ;
        bool m_has_strikeTLBR ;
        CT_OnOff* m_strikeTLBR ;
        bool m_has_ctrlPr ;
        CT_CtrlPr* m_ctrlPr ;
        static CT_BorderBoxPr* default_instance_ ;

    }

    class CT_BorderBox : public XSD::ComplexType{
    public:
        bool has_borderBoxPr(){

            return m_has_borderBoxPr;
        
        }
        CT_BorderBoxPr* mutable_borderBoxPr(){

                m_has_borderBoxPr = true;
                if (!m_borderBoxPr)
                {
                    m_borderBoxPr = new CT_BorderBoxPr();
                }
                return m_borderBoxPr;
            
        }
        const CT_BorderBoxPr& borderBoxPr(){

            if (m_borderBoxPr)
            {
                return *m_borderBoxPr;
            }
            return CT_BorderBoxPr::default_instance();
        
        }
        bool has_e(){

            return m_has_e;
        
        }
        CT_OMathArg* mutable_e(){

                m_has_e = true;
                if (!m_e)
                {
                    m_e = new CT_OMathArg();
                }
                return m_e;
            
        }
        const CT_OMathArg& e(){

            if (m_e)
            {
                return *m_e;
            }
            return CT_OMathArg::default_instance();
        
        }
        void clear(){

                m_has_borderBoxPr = false;
                
        if (m_borderBoxPr)
        {
            delete m_borderBoxPr;
            m_borderBoxPr = NULL;
        }
    
            
                m_has_e = false;
                
        if (m_e)
        {
            delete m_e;
            m_e = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_borderBoxPr)
                {
                    m_borderBoxPr->toXml(borderBoxPr, _outStream);;
                }
            
                if (m_has_e)
                {
                    m_borderBoxPr->toXml(e, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_BorderBox& default_instance(){

    if (!CT_BorderBox::default_instance_)
    {
        CT_BorderBox::default_instance_ = new CT_BorderBox();
    }
    return *CT_BorderBox::default_instance_;

        }

    private:
        bool m_has_borderBoxPr ;
        CT_BorderBoxPr* m_borderBoxPr ;
        bool m_has_e ;
        CT_OMathArg* m_e ;
        static CT_BorderBox* default_instance_ ;

    }

    class CT_DPr : public XSD::ComplexType{
    public:
        bool has_begChr(){

            return m_has_begChr;
        
        }
        CT_Char* mutable_begChr(){

                m_has_begChr = true;
                if (!m_begChr)
                {
                    m_begChr = new CT_Char();
                }
                return m_begChr;
            
        }
        const CT_Char& begChr(){

            if (m_begChr)
            {
                return *m_begChr;
            }
            return CT_Char::default_instance();
        
        }
        bool has_sepChr(){

            return m_has_sepChr;
        
        }
        CT_Char* mutable_sepChr(){

                m_has_sepChr = true;
                if (!m_sepChr)
                {
                    m_sepChr = new CT_Char();
                }
                return m_sepChr;
            
        }
        const CT_Char& sepChr(){

            if (m_sepChr)
            {
                return *m_sepChr;
            }
            return CT_Char::default_instance();
        
        }
        bool has_endChr(){

            return m_has_endChr;
        
        }
        CT_Char* mutable_endChr(){

                m_has_endChr = true;
                if (!m_endChr)
                {
                    m_endChr = new CT_Char();
                }
                return m_endChr;
            
        }
        const CT_Char& endChr(){

            if (m_endChr)
            {
                return *m_endChr;
            }
            return CT_Char::default_instance();
        
        }
        bool has_grow(){

            return m_has_grow;
        
        }
        CT_OnOff* mutable_grow(){

                m_has_grow = true;
                if (!m_grow)
                {
                    m_grow = new CT_OnOff();
                }
                return m_grow;
            
        }
        const CT_OnOff& grow(){

            if (m_grow)
            {
                return *m_grow;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_shp(){

            return m_has_shp;
        
        }
        CT_Shp* mutable_shp(){

                m_has_shp = true;
                if (!m_shp)
                {
                    m_shp = new CT_Shp();
                }
                return m_shp;
            
        }
        const CT_Shp& shp(){

            if (m_shp)
            {
                return *m_shp;
            }
            return CT_Shp::default_instance();
        
        }
        bool has_ctrlPr(){

            return m_has_ctrlPr;
        
        }
        CT_CtrlPr* mutable_ctrlPr(){

                m_has_ctrlPr = true;
                if (!m_ctrlPr)
                {
                    m_ctrlPr = new CT_CtrlPr();
                }
                return m_ctrlPr;
            
        }
        const CT_CtrlPr& ctrlPr(){

            if (m_ctrlPr)
            {
                return *m_ctrlPr;
            }
            return CT_CtrlPr::default_instance();
        
        }
        void clear(){

                m_has_begChr = false;
                
        if (m_begChr)
        {
            delete m_begChr;
            m_begChr = NULL;
        }
    
            
                m_has_sepChr = false;
                
        if (m_sepChr)
        {
            delete m_sepChr;
            m_sepChr = NULL;
        }
    
            
                m_has_endChr = false;
                
        if (m_endChr)
        {
            delete m_endChr;
            m_endChr = NULL;
        }
    
            
                m_has_grow = false;
                
        if (m_grow)
        {
            delete m_grow;
            m_grow = NULL;
        }
    
            
                m_has_shp = false;
                
        if (m_shp)
        {
            delete m_shp;
            m_shp = NULL;
        }
    
            
                m_has_ctrlPr = false;
                
        if (m_ctrlPr)
        {
            delete m_ctrlPr;
            m_ctrlPr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_begChr)
                {
                    m_begChr->toXml(begChr, _outStream);;
                }
            
                if (m_has_sepChr)
                {
                    m_begChr->toXml(sepChr, _outStream);;
                }
            
                if (m_has_endChr)
                {
                    m_begChr->toXml(endChr, _outStream);;
                }
            
                if (m_has_grow)
                {
                    m_begChr->toXml(grow, _outStream);;
                }
            
                if (m_has_shp)
                {
                    m_begChr->toXml(shp, _outStream);;
                }
            
                if (m_has_ctrlPr)
                {
                    m_begChr->toXml(ctrlPr, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_DPr& default_instance(){

    if (!CT_DPr::default_instance_)
    {
        CT_DPr::default_instance_ = new CT_DPr();
    }
    return *CT_DPr::default_instance_;

        }

    private:
        bool m_has_begChr ;
        CT_Char* m_begChr ;
        bool m_has_sepChr ;
        CT_Char* m_sepChr ;
        bool m_has_endChr ;
        CT_Char* m_endChr ;
        bool m_has_grow ;
        CT_OnOff* m_grow ;
        bool m_has_shp ;
        CT_Shp* m_shp ;
        bool m_has_ctrlPr ;
        CT_CtrlPr* m_ctrlPr ;
        static CT_DPr* default_instance_ ;

    }

    class CT_D : public XSD::ComplexType{
    public:
        bool has_dPr(){

            return m_has_dPr;
        
        }
        CT_DPr* mutable_dPr(){

                m_has_dPr = true;
                if (!m_dPr)
                {
                    m_dPr = new CT_DPr();
                }
                return m_dPr;
            
        }
        const CT_DPr& dPr(){

            if (m_dPr)
            {
                return *m_dPr;
            }
            return CT_DPr::default_instance();
        
        }
        bool has_e(){

            return m_has_e;
        
        }
        CT_OMathArg* mutable_e(){

                m_has_e = true;
                if (!m_e)
                {
                    m_e = new CT_OMathArg();
                }
                return m_e;
            
        }
        const CT_OMathArg& e(){

            if (m_e)
            {
                return *m_e;
            }
            return CT_OMathArg::default_instance();
        
        }
        void clear(){

                m_has_dPr = false;
                
        if (m_dPr)
        {
            delete m_dPr;
            m_dPr = NULL;
        }
    
            
                m_has_e = false;
                
        if (m_e)
        {
            delete m_e;
            m_e = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_dPr)
                {
                    m_dPr->toXml(dPr, _outStream);;
                }
            
                if (m_has_e)
                {
                    m_dPr->toXml(e, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_D& default_instance(){

    if (!CT_D::default_instance_)
    {
        CT_D::default_instance_ = new CT_D();
    }
    return *CT_D::default_instance_;

        }

    private:
        bool m_has_dPr ;
        CT_DPr* m_dPr ;
        bool m_has_e ;
        CT_OMathArg* m_e ;
        static CT_D* default_instance_ ;

    }

    class CT_EqArrPr : public XSD::ComplexType{
    public:
        bool has_baseJc(){

            return m_has_baseJc;
        
        }
        CT_YAlign* mutable_baseJc(){

                m_has_baseJc = true;
                if (!m_baseJc)
                {
                    m_baseJc = new CT_YAlign();
                }
                return m_baseJc;
            
        }
        const CT_YAlign& baseJc(){

            if (m_baseJc)
            {
                return *m_baseJc;
            }
            return CT_YAlign::default_instance();
        
        }
        bool has_maxDist(){

            return m_has_maxDist;
        
        }
        CT_OnOff* mutable_maxDist(){

                m_has_maxDist = true;
                if (!m_maxDist)
                {
                    m_maxDist = new CT_OnOff();
                }
                return m_maxDist;
            
        }
        const CT_OnOff& maxDist(){

            if (m_maxDist)
            {
                return *m_maxDist;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_objDist(){

            return m_has_objDist;
        
        }
        CT_OnOff* mutable_objDist(){

                m_has_objDist = true;
                if (!m_objDist)
                {
                    m_objDist = new CT_OnOff();
                }
                return m_objDist;
            
        }
        const CT_OnOff& objDist(){

            if (m_objDist)
            {
                return *m_objDist;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_rSpRule(){

            return m_has_rSpRule;
        
        }
        CT_SpacingRule* mutable_rSpRule(){

                m_has_rSpRule = true;
                if (!m_rSpRule)
                {
                    m_rSpRule = new CT_SpacingRule();
                }
                return m_rSpRule;
            
        }
        const CT_SpacingRule& rSpRule(){

            if (m_rSpRule)
            {
                return *m_rSpRule;
            }
            return CT_SpacingRule::default_instance();
        
        }
        bool has_rSp(){

            return m_has_rSp;
        
        }
        CT_UnSignedInteger* mutable_rSp(){

                m_has_rSp = true;
                if (!m_rSp)
                {
                    m_rSp = new CT_UnSignedInteger();
                }
                return m_rSp;
            
        }
        const CT_UnSignedInteger& rSp(){

            if (m_rSp)
            {
                return *m_rSp;
            }
            return CT_UnSignedInteger::default_instance();
        
        }
        bool has_ctrlPr(){

            return m_has_ctrlPr;
        
        }
        CT_CtrlPr* mutable_ctrlPr(){

                m_has_ctrlPr = true;
                if (!m_ctrlPr)
                {
                    m_ctrlPr = new CT_CtrlPr();
                }
                return m_ctrlPr;
            
        }
        const CT_CtrlPr& ctrlPr(){

            if (m_ctrlPr)
            {
                return *m_ctrlPr;
            }
            return CT_CtrlPr::default_instance();
        
        }
        void clear(){

                m_has_baseJc = false;
                
        if (m_baseJc)
        {
            delete m_baseJc;
            m_baseJc = NULL;
        }
    
            
                m_has_maxDist = false;
                
        if (m_maxDist)
        {
            delete m_maxDist;
            m_maxDist = NULL;
        }
    
            
                m_has_objDist = false;
                
        if (m_objDist)
        {
            delete m_objDist;
            m_objDist = NULL;
        }
    
            
                m_has_rSpRule = false;
                
        if (m_rSpRule)
        {
            delete m_rSpRule;
            m_rSpRule = NULL;
        }
    
            
                m_has_rSp = false;
                
        if (m_rSp)
        {
            delete m_rSp;
            m_rSp = NULL;
        }
    
            
                m_has_ctrlPr = false;
                
        if (m_ctrlPr)
        {
            delete m_ctrlPr;
            m_ctrlPr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_baseJc)
                {
                    m_baseJc->toXml(baseJc, _outStream);;
                }
            
                if (m_has_maxDist)
                {
                    m_baseJc->toXml(maxDist, _outStream);;
                }
            
                if (m_has_objDist)
                {
                    m_baseJc->toXml(objDist, _outStream);;
                }
            
                if (m_has_rSpRule)
                {
                    m_baseJc->toXml(rSpRule, _outStream);;
                }
            
                if (m_has_rSp)
                {
                    m_baseJc->toXml(rSp, _outStream);;
                }
            
                if (m_has_ctrlPr)
                {
                    m_baseJc->toXml(ctrlPr, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_EqArrPr& default_instance(){

    if (!CT_EqArrPr::default_instance_)
    {
        CT_EqArrPr::default_instance_ = new CT_EqArrPr();
    }
    return *CT_EqArrPr::default_instance_;

        }

    private:
        bool m_has_baseJc ;
        CT_YAlign* m_baseJc ;
        bool m_has_maxDist ;
        CT_OnOff* m_maxDist ;
        bool m_has_objDist ;
        CT_OnOff* m_objDist ;
        bool m_has_rSpRule ;
        CT_SpacingRule* m_rSpRule ;
        bool m_has_rSp ;
        CT_UnSignedInteger* m_rSp ;
        bool m_has_ctrlPr ;
        CT_CtrlPr* m_ctrlPr ;
        static CT_EqArrPr* default_instance_ ;

    }

    class CT_EqArr : public XSD::ComplexType{
    public:
        bool has_eqArrPr(){

            return m_has_eqArrPr;
        
        }
        CT_EqArrPr* mutable_eqArrPr(){

                m_has_eqArrPr = true;
                if (!m_eqArrPr)
                {
                    m_eqArrPr = new CT_EqArrPr();
                }
                return m_eqArrPr;
            
        }
        const CT_EqArrPr& eqArrPr(){

            if (m_eqArrPr)
            {
                return *m_eqArrPr;
            }
            return CT_EqArrPr::default_instance();
        
        }
        bool has_e(){

            return m_has_e;
        
        }
        CT_OMathArg* mutable_e(){

                m_has_e = true;
                if (!m_e)
                {
                    m_e = new CT_OMathArg();
                }
                return m_e;
            
        }
        const CT_OMathArg& e(){

            if (m_e)
            {
                return *m_e;
            }
            return CT_OMathArg::default_instance();
        
        }
        void clear(){

                m_has_eqArrPr = false;
                
        if (m_eqArrPr)
        {
            delete m_eqArrPr;
            m_eqArrPr = NULL;
        }
    
            
                m_has_e = false;
                
        if (m_e)
        {
            delete m_e;
            m_e = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_eqArrPr)
                {
                    m_eqArrPr->toXml(eqArrPr, _outStream);;
                }
            
                if (m_has_e)
                {
                    m_eqArrPr->toXml(e, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_EqArr& default_instance(){

    if (!CT_EqArr::default_instance_)
    {
        CT_EqArr::default_instance_ = new CT_EqArr();
    }
    return *CT_EqArr::default_instance_;

        }

    private:
        bool m_has_eqArrPr ;
        CT_EqArrPr* m_eqArrPr ;
        bool m_has_e ;
        CT_OMathArg* m_e ;
        static CT_EqArr* default_instance_ ;

    }

    class CT_FPr : public XSD::ComplexType{
    public:
        bool has_type(){

            return m_has_type;
        
        }
        CT_FType* mutable_type(){

                m_has_type = true;
                if (!m_type)
                {
                    m_type = new CT_FType();
                }
                return m_type;
            
        }
        const CT_FType& type(){

            if (m_type)
            {
                return *m_type;
            }
            return CT_FType::default_instance();
        
        }
        bool has_ctrlPr(){

            return m_has_ctrlPr;
        
        }
        CT_CtrlPr* mutable_ctrlPr(){

                m_has_ctrlPr = true;
                if (!m_ctrlPr)
                {
                    m_ctrlPr = new CT_CtrlPr();
                }
                return m_ctrlPr;
            
        }
        const CT_CtrlPr& ctrlPr(){

            if (m_ctrlPr)
            {
                return *m_ctrlPr;
            }
            return CT_CtrlPr::default_instance();
        
        }
        void clear(){

                m_has_type = false;
                
        if (m_type)
        {
            delete m_type;
            m_type = NULL;
        }
    
            
                m_has_ctrlPr = false;
                
        if (m_ctrlPr)
        {
            delete m_ctrlPr;
            m_ctrlPr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_type)
                {
                    m_type->toXml(type, _outStream);;
                }
            
                if (m_has_ctrlPr)
                {
                    m_type->toXml(ctrlPr, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_FPr& default_instance(){

    if (!CT_FPr::default_instance_)
    {
        CT_FPr::default_instance_ = new CT_FPr();
    }
    return *CT_FPr::default_instance_;

        }

    private:
        bool m_has_type ;
        CT_FType* m_type ;
        bool m_has_ctrlPr ;
        CT_CtrlPr* m_ctrlPr ;
        static CT_FPr* default_instance_ ;

    }

    class CT_F : public XSD::ComplexType{
    public:
        bool has_fPr(){

            return m_has_fPr;
        
        }
        CT_FPr* mutable_fPr(){

                m_has_fPr = true;
                if (!m_fPr)
                {
                    m_fPr = new CT_FPr();
                }
                return m_fPr;
            
        }
        const CT_FPr& fPr(){

            if (m_fPr)
            {
                return *m_fPr;
            }
            return CT_FPr::default_instance();
        
        }
        bool has_num(){

            return m_has_num;
        
        }
        CT_OMathArg* mutable_num(){

                m_has_num = true;
                if (!m_num)
                {
                    m_num = new CT_OMathArg();
                }
                return m_num;
            
        }
        const CT_OMathArg& num(){

            if (m_num)
            {
                return *m_num;
            }
            return CT_OMathArg::default_instance();
        
        }
        bool has_den(){

            return m_has_den;
        
        }
        CT_OMathArg* mutable_den(){

                m_has_den = true;
                if (!m_den)
                {
                    m_den = new CT_OMathArg();
                }
                return m_den;
            
        }
        const CT_OMathArg& den(){

            if (m_den)
            {
                return *m_den;
            }
            return CT_OMathArg::default_instance();
        
        }
        void clear(){

                m_has_fPr = false;
                
        if (m_fPr)
        {
            delete m_fPr;
            m_fPr = NULL;
        }
    
            
                m_has_num = false;
                
        if (m_num)
        {
            delete m_num;
            m_num = NULL;
        }
    
            
                m_has_den = false;
                
        if (m_den)
        {
            delete m_den;
            m_den = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_fPr)
                {
                    m_fPr->toXml(fPr, _outStream);;
                }
            
                if (m_has_num)
                {
                    m_fPr->toXml(num, _outStream);;
                }
            
                if (m_has_den)
                {
                    m_fPr->toXml(den, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_F& default_instance(){

    if (!CT_F::default_instance_)
    {
        CT_F::default_instance_ = new CT_F();
    }
    return *CT_F::default_instance_;

        }

    private:
        bool m_has_fPr ;
        CT_FPr* m_fPr ;
        bool m_has_num ;
        CT_OMathArg* m_num ;
        bool m_has_den ;
        CT_OMathArg* m_den ;
        static CT_F* default_instance_ ;

    }

    class CT_FuncPr : public XSD::ComplexType{
    public:
        bool has_ctrlPr(){

            return m_has_ctrlPr;
        
        }
        CT_CtrlPr* mutable_ctrlPr(){

                m_has_ctrlPr = true;
                if (!m_ctrlPr)
                {
                    m_ctrlPr = new CT_CtrlPr();
                }
                return m_ctrlPr;
            
        }
        const CT_CtrlPr& ctrlPr(){

            if (m_ctrlPr)
            {
                return *m_ctrlPr;
            }
            return CT_CtrlPr::default_instance();
        
        }
        void clear(){

                m_has_ctrlPr = false;
                
        if (m_ctrlPr)
        {
            delete m_ctrlPr;
            m_ctrlPr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_ctrlPr)
                {
                    m_ctrlPr->toXml(ctrlPr, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_FuncPr& default_instance(){

    if (!CT_FuncPr::default_instance_)
    {
        CT_FuncPr::default_instance_ = new CT_FuncPr();
    }
    return *CT_FuncPr::default_instance_;

        }

    private:
        bool m_has_ctrlPr ;
        CT_CtrlPr* m_ctrlPr ;
        static CT_FuncPr* default_instance_ ;

    }

    class CT_Func : public XSD::ComplexType{
    public:
        bool has_funcPr(){

            return m_has_funcPr;
        
        }
        CT_FuncPr* mutable_funcPr(){

                m_has_funcPr = true;
                if (!m_funcPr)
                {
                    m_funcPr = new CT_FuncPr();
                }
                return m_funcPr;
            
        }
        const CT_FuncPr& funcPr(){

            if (m_funcPr)
            {
                return *m_funcPr;
            }
            return CT_FuncPr::default_instance();
        
        }
        bool has_fName(){

            return m_has_fName;
        
        }
        CT_OMathArg* mutable_fName(){

                m_has_fName = true;
                if (!m_fName)
                {
                    m_fName = new CT_OMathArg();
                }
                return m_fName;
            
        }
        const CT_OMathArg& fName(){

            if (m_fName)
            {
                return *m_fName;
            }
            return CT_OMathArg::default_instance();
        
        }
        bool has_e(){

            return m_has_e;
        
        }
        CT_OMathArg* mutable_e(){

                m_has_e = true;
                if (!m_e)
                {
                    m_e = new CT_OMathArg();
                }
                return m_e;
            
        }
        const CT_OMathArg& e(){

            if (m_e)
            {
                return *m_e;
            }
            return CT_OMathArg::default_instance();
        
        }
        void clear(){

                m_has_funcPr = false;
                
        if (m_funcPr)
        {
            delete m_funcPr;
            m_funcPr = NULL;
        }
    
            
                m_has_fName = false;
                
        if (m_fName)
        {
            delete m_fName;
            m_fName = NULL;
        }
    
            
                m_has_e = false;
                
        if (m_e)
        {
            delete m_e;
            m_e = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_funcPr)
                {
                    m_funcPr->toXml(funcPr, _outStream);;
                }
            
                if (m_has_fName)
                {
                    m_funcPr->toXml(fName, _outStream);;
                }
            
                if (m_has_e)
                {
                    m_funcPr->toXml(e, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Func& default_instance(){

    if (!CT_Func::default_instance_)
    {
        CT_Func::default_instance_ = new CT_Func();
    }
    return *CT_Func::default_instance_;

        }

    private:
        bool m_has_funcPr ;
        CT_FuncPr* m_funcPr ;
        bool m_has_fName ;
        CT_OMathArg* m_fName ;
        bool m_has_e ;
        CT_OMathArg* m_e ;
        static CT_Func* default_instance_ ;

    }

    class CT_GroupChrPr : public XSD::ComplexType{
    public:
        bool has_chr(){

            return m_has_chr;
        
        }
        CT_Char* mutable_chr(){

                m_has_chr = true;
                if (!m_chr)
                {
                    m_chr = new CT_Char();
                }
                return m_chr;
            
        }
        const CT_Char& chr(){

            if (m_chr)
            {
                return *m_chr;
            }
            return CT_Char::default_instance();
        
        }
        bool has_pos(){

            return m_has_pos;
        
        }
        CT_TopBot* mutable_pos(){

                m_has_pos = true;
                if (!m_pos)
                {
                    m_pos = new CT_TopBot();
                }
                return m_pos;
            
        }
        const CT_TopBot& pos(){

            if (m_pos)
            {
                return *m_pos;
            }
            return CT_TopBot::default_instance();
        
        }
        bool has_vertJc(){

            return m_has_vertJc;
        
        }
        CT_TopBot* mutable_vertJc(){

                m_has_vertJc = true;
                if (!m_vertJc)
                {
                    m_vertJc = new CT_TopBot();
                }
                return m_vertJc;
            
        }
        const CT_TopBot& vertJc(){

            if (m_vertJc)
            {
                return *m_vertJc;
            }
            return CT_TopBot::default_instance();
        
        }
        bool has_ctrlPr(){

            return m_has_ctrlPr;
        
        }
        CT_CtrlPr* mutable_ctrlPr(){

                m_has_ctrlPr = true;
                if (!m_ctrlPr)
                {
                    m_ctrlPr = new CT_CtrlPr();
                }
                return m_ctrlPr;
            
        }
        const CT_CtrlPr& ctrlPr(){

            if (m_ctrlPr)
            {
                return *m_ctrlPr;
            }
            return CT_CtrlPr::default_instance();
        
        }
        void clear(){

                m_has_chr = false;
                
        if (m_chr)
        {
            delete m_chr;
            m_chr = NULL;
        }
    
            
                m_has_pos = false;
                
        if (m_pos)
        {
            delete m_pos;
            m_pos = NULL;
        }
    
            
                m_has_vertJc = false;
                
        if (m_vertJc)
        {
            delete m_vertJc;
            m_vertJc = NULL;
        }
    
            
                m_has_ctrlPr = false;
                
        if (m_ctrlPr)
        {
            delete m_ctrlPr;
            m_ctrlPr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_chr)
                {
                    m_chr->toXml(chr, _outStream);;
                }
            
                if (m_has_pos)
                {
                    m_chr->toXml(pos, _outStream);;
                }
            
                if (m_has_vertJc)
                {
                    m_chr->toXml(vertJc, _outStream);;
                }
            
                if (m_has_ctrlPr)
                {
                    m_chr->toXml(ctrlPr, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_GroupChrPr& default_instance(){

    if (!CT_GroupChrPr::default_instance_)
    {
        CT_GroupChrPr::default_instance_ = new CT_GroupChrPr();
    }
    return *CT_GroupChrPr::default_instance_;

        }

    private:
        bool m_has_chr ;
        CT_Char* m_chr ;
        bool m_has_pos ;
        CT_TopBot* m_pos ;
        bool m_has_vertJc ;
        CT_TopBot* m_vertJc ;
        bool m_has_ctrlPr ;
        CT_CtrlPr* m_ctrlPr ;
        static CT_GroupChrPr* default_instance_ ;

    }

    class CT_GroupChr : public XSD::ComplexType{
    public:
        bool has_groupChrPr(){

            return m_has_groupChrPr;
        
        }
        CT_GroupChrPr* mutable_groupChrPr(){

                m_has_groupChrPr = true;
                if (!m_groupChrPr)
                {
                    m_groupChrPr = new CT_GroupChrPr();
                }
                return m_groupChrPr;
            
        }
        const CT_GroupChrPr& groupChrPr(){

            if (m_groupChrPr)
            {
                return *m_groupChrPr;
            }
            return CT_GroupChrPr::default_instance();
        
        }
        bool has_e(){

            return m_has_e;
        
        }
        CT_OMathArg* mutable_e(){

                m_has_e = true;
                if (!m_e)
                {
                    m_e = new CT_OMathArg();
                }
                return m_e;
            
        }
        const CT_OMathArg& e(){

            if (m_e)
            {
                return *m_e;
            }
            return CT_OMathArg::default_instance();
        
        }
        void clear(){

                m_has_groupChrPr = false;
                
        if (m_groupChrPr)
        {
            delete m_groupChrPr;
            m_groupChrPr = NULL;
        }
    
            
                m_has_e = false;
                
        if (m_e)
        {
            delete m_e;
            m_e = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_groupChrPr)
                {
                    m_groupChrPr->toXml(groupChrPr, _outStream);;
                }
            
                if (m_has_e)
                {
                    m_groupChrPr->toXml(e, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_GroupChr& default_instance(){

    if (!CT_GroupChr::default_instance_)
    {
        CT_GroupChr::default_instance_ = new CT_GroupChr();
    }
    return *CT_GroupChr::default_instance_;

        }

    private:
        bool m_has_groupChrPr ;
        CT_GroupChrPr* m_groupChrPr ;
        bool m_has_e ;
        CT_OMathArg* m_e ;
        static CT_GroupChr* default_instance_ ;

    }

    class CT_LimLowPr : public XSD::ComplexType{
    public:
        bool has_ctrlPr(){

            return m_has_ctrlPr;
        
        }
        CT_CtrlPr* mutable_ctrlPr(){

                m_has_ctrlPr = true;
                if (!m_ctrlPr)
                {
                    m_ctrlPr = new CT_CtrlPr();
                }
                return m_ctrlPr;
            
        }
        const CT_CtrlPr& ctrlPr(){

            if (m_ctrlPr)
            {
                return *m_ctrlPr;
            }
            return CT_CtrlPr::default_instance();
        
        }
        void clear(){

                m_has_ctrlPr = false;
                
        if (m_ctrlPr)
        {
            delete m_ctrlPr;
            m_ctrlPr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_ctrlPr)
                {
                    m_ctrlPr->toXml(ctrlPr, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_LimLowPr& default_instance(){

    if (!CT_LimLowPr::default_instance_)
    {
        CT_LimLowPr::default_instance_ = new CT_LimLowPr();
    }
    return *CT_LimLowPr::default_instance_;

        }

    private:
        bool m_has_ctrlPr ;
        CT_CtrlPr* m_ctrlPr ;
        static CT_LimLowPr* default_instance_ ;

    }

    class CT_LimLow : public XSD::ComplexType{
    public:
        bool has_limLowPr(){

            return m_has_limLowPr;
        
        }
        CT_LimLowPr* mutable_limLowPr(){

                m_has_limLowPr = true;
                if (!m_limLowPr)
                {
                    m_limLowPr = new CT_LimLowPr();
                }
                return m_limLowPr;
            
        }
        const CT_LimLowPr& limLowPr(){

            if (m_limLowPr)
            {
                return *m_limLowPr;
            }
            return CT_LimLowPr::default_instance();
        
        }
        bool has_e(){

            return m_has_e;
        
        }
        CT_OMathArg* mutable_e(){

                m_has_e = true;
                if (!m_e)
                {
                    m_e = new CT_OMathArg();
                }
                return m_e;
            
        }
        const CT_OMathArg& e(){

            if (m_e)
            {
                return *m_e;
            }
            return CT_OMathArg::default_instance();
        
        }
        bool has_lim(){

            return m_has_lim;
        
        }
        CT_OMathArg* mutable_lim(){

                m_has_lim = true;
                if (!m_lim)
                {
                    m_lim = new CT_OMathArg();
                }
                return m_lim;
            
        }
        const CT_OMathArg& lim(){

            if (m_lim)
            {
                return *m_lim;
            }
            return CT_OMathArg::default_instance();
        
        }
        void clear(){

                m_has_limLowPr = false;
                
        if (m_limLowPr)
        {
            delete m_limLowPr;
            m_limLowPr = NULL;
        }
    
            
                m_has_e = false;
                
        if (m_e)
        {
            delete m_e;
            m_e = NULL;
        }
    
            
                m_has_lim = false;
                
        if (m_lim)
        {
            delete m_lim;
            m_lim = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_limLowPr)
                {
                    m_limLowPr->toXml(limLowPr, _outStream);;
                }
            
                if (m_has_e)
                {
                    m_limLowPr->toXml(e, _outStream);;
                }
            
                if (m_has_lim)
                {
                    m_limLowPr->toXml(lim, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_LimLow& default_instance(){

    if (!CT_LimLow::default_instance_)
    {
        CT_LimLow::default_instance_ = new CT_LimLow();
    }
    return *CT_LimLow::default_instance_;

        }

    private:
        bool m_has_limLowPr ;
        CT_LimLowPr* m_limLowPr ;
        bool m_has_e ;
        CT_OMathArg* m_e ;
        bool m_has_lim ;
        CT_OMathArg* m_lim ;
        static CT_LimLow* default_instance_ ;

    }

    class CT_LimUppPr : public XSD::ComplexType{
    public:
        bool has_ctrlPr(){

            return m_has_ctrlPr;
        
        }
        CT_CtrlPr* mutable_ctrlPr(){

                m_has_ctrlPr = true;
                if (!m_ctrlPr)
                {
                    m_ctrlPr = new CT_CtrlPr();
                }
                return m_ctrlPr;
            
        }
        const CT_CtrlPr& ctrlPr(){

            if (m_ctrlPr)
            {
                return *m_ctrlPr;
            }
            return CT_CtrlPr::default_instance();
        
        }
        void clear(){

                m_has_ctrlPr = false;
                
        if (m_ctrlPr)
        {
            delete m_ctrlPr;
            m_ctrlPr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_ctrlPr)
                {
                    m_ctrlPr->toXml(ctrlPr, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_LimUppPr& default_instance(){

    if (!CT_LimUppPr::default_instance_)
    {
        CT_LimUppPr::default_instance_ = new CT_LimUppPr();
    }
    return *CT_LimUppPr::default_instance_;

        }

    private:
        bool m_has_ctrlPr ;
        CT_CtrlPr* m_ctrlPr ;
        static CT_LimUppPr* default_instance_ ;

    }

    class CT_LimUpp : public XSD::ComplexType{
    public:
        bool has_limUppPr(){

            return m_has_limUppPr;
        
        }
        CT_LimUppPr* mutable_limUppPr(){

                m_has_limUppPr = true;
                if (!m_limUppPr)
                {
                    m_limUppPr = new CT_LimUppPr();
                }
                return m_limUppPr;
            
        }
        const CT_LimUppPr& limUppPr(){

            if (m_limUppPr)
            {
                return *m_limUppPr;
            }
            return CT_LimUppPr::default_instance();
        
        }
        bool has_e(){

            return m_has_e;
        
        }
        CT_OMathArg* mutable_e(){

                m_has_e = true;
                if (!m_e)
                {
                    m_e = new CT_OMathArg();
                }
                return m_e;
            
        }
        const CT_OMathArg& e(){

            if (m_e)
            {
                return *m_e;
            }
            return CT_OMathArg::default_instance();
        
        }
        bool has_lim(){

            return m_has_lim;
        
        }
        CT_OMathArg* mutable_lim(){

                m_has_lim = true;
                if (!m_lim)
                {
                    m_lim = new CT_OMathArg();
                }
                return m_lim;
            
        }
        const CT_OMathArg& lim(){

            if (m_lim)
            {
                return *m_lim;
            }
            return CT_OMathArg::default_instance();
        
        }
        void clear(){

                m_has_limUppPr = false;
                
        if (m_limUppPr)
        {
            delete m_limUppPr;
            m_limUppPr = NULL;
        }
    
            
                m_has_e = false;
                
        if (m_e)
        {
            delete m_e;
            m_e = NULL;
        }
    
            
                m_has_lim = false;
                
        if (m_lim)
        {
            delete m_lim;
            m_lim = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_limUppPr)
                {
                    m_limUppPr->toXml(limUppPr, _outStream);;
                }
            
                if (m_has_e)
                {
                    m_limUppPr->toXml(e, _outStream);;
                }
            
                if (m_has_lim)
                {
                    m_limUppPr->toXml(lim, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_LimUpp& default_instance(){

    if (!CT_LimUpp::default_instance_)
    {
        CT_LimUpp::default_instance_ = new CT_LimUpp();
    }
    return *CT_LimUpp::default_instance_;

        }

    private:
        bool m_has_limUppPr ;
        CT_LimUppPr* m_limUppPr ;
        bool m_has_e ;
        CT_OMathArg* m_e ;
        bool m_has_lim ;
        CT_OMathArg* m_lim ;
        static CT_LimUpp* default_instance_ ;

    }

    class CT_MCPr : public XSD::ComplexType{
    public:
        bool has_count(){

            return m_has_count;
        
        }
        CT_Integer255* mutable_count(){

                m_has_count = true;
                if (!m_count)
                {
                    m_count = new CT_Integer255();
                }
                return m_count;
            
        }
        const CT_Integer255& count(){

            if (m_count)
            {
                return *m_count;
            }
            return CT_Integer255::default_instance();
        
        }
        bool has_mcJc(){

            return m_has_mcJc;
        
        }
        CT_XAlign* mutable_mcJc(){

                m_has_mcJc = true;
                if (!m_mcJc)
                {
                    m_mcJc = new CT_XAlign();
                }
                return m_mcJc;
            
        }
        const CT_XAlign& mcJc(){

            if (m_mcJc)
            {
                return *m_mcJc;
            }
            return CT_XAlign::default_instance();
        
        }
        void clear(){

                m_has_count = false;
                
        if (m_count)
        {
            delete m_count;
            m_count = NULL;
        }
    
            
                m_has_mcJc = false;
                
        if (m_mcJc)
        {
            delete m_mcJc;
            m_mcJc = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_count)
                {
                    m_count->toXml(count, _outStream);;
                }
            
                if (m_has_mcJc)
                {
                    m_count->toXml(mcJc, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_MCPr& default_instance(){

    if (!CT_MCPr::default_instance_)
    {
        CT_MCPr::default_instance_ = new CT_MCPr();
    }
    return *CT_MCPr::default_instance_;

        }

    private:
        bool m_has_count ;
        CT_Integer255* m_count ;
        bool m_has_mcJc ;
        CT_XAlign* m_mcJc ;
        static CT_MCPr* default_instance_ ;

    }

    class CT_MC : public XSD::ComplexType{
    public:
        bool has_mcPr(){

            return m_has_mcPr;
        
        }
        CT_MCPr* mutable_mcPr(){

                m_has_mcPr = true;
                if (!m_mcPr)
                {
                    m_mcPr = new CT_MCPr();
                }
                return m_mcPr;
            
        }
        const CT_MCPr& mcPr(){

            if (m_mcPr)
            {
                return *m_mcPr;
            }
            return CT_MCPr::default_instance();
        
        }
        void clear(){

                m_has_mcPr = false;
                
        if (m_mcPr)
        {
            delete m_mcPr;
            m_mcPr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_mcPr)
                {
                    m_mcPr->toXml(mcPr, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_MC& default_instance(){

    if (!CT_MC::default_instance_)
    {
        CT_MC::default_instance_ = new CT_MC();
    }
    return *CT_MC::default_instance_;

        }

    private:
        bool m_has_mcPr ;
        CT_MCPr* m_mcPr ;
        static CT_MC* default_instance_ ;

    }

    class CT_MCS : public XSD::ComplexType{
    public:
        bool has_mc(){

            return m_has_mc;
        
        }
        CT_MC* mutable_mc(){

                m_has_mc = true;
                if (!m_mc)
                {
                    m_mc = new CT_MC();
                }
                return m_mc;
            
        }
        const CT_MC& mc(){

            if (m_mc)
            {
                return *m_mc;
            }
            return CT_MC::default_instance();
        
        }
        void clear(){

                m_has_mc = false;
                
        if (m_mc)
        {
            delete m_mc;
            m_mc = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_mc)
                {
                    m_mc->toXml(mc, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_MCS& default_instance(){

    if (!CT_MCS::default_instance_)
    {
        CT_MCS::default_instance_ = new CT_MCS();
    }
    return *CT_MCS::default_instance_;

        }

    private:
        bool m_has_mc ;
        CT_MC* m_mc ;
        static CT_MCS* default_instance_ ;

    }

    class CT_MPr : public XSD::ComplexType{
    public:
        bool has_baseJc(){

            return m_has_baseJc;
        
        }
        CT_YAlign* mutable_baseJc(){

                m_has_baseJc = true;
                if (!m_baseJc)
                {
                    m_baseJc = new CT_YAlign();
                }
                return m_baseJc;
            
        }
        const CT_YAlign& baseJc(){

            if (m_baseJc)
            {
                return *m_baseJc;
            }
            return CT_YAlign::default_instance();
        
        }
        bool has_plcHide(){

            return m_has_plcHide;
        
        }
        CT_OnOff* mutable_plcHide(){

                m_has_plcHide = true;
                if (!m_plcHide)
                {
                    m_plcHide = new CT_OnOff();
                }
                return m_plcHide;
            
        }
        const CT_OnOff& plcHide(){

            if (m_plcHide)
            {
                return *m_plcHide;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_rSpRule(){

            return m_has_rSpRule;
        
        }
        CT_SpacingRule* mutable_rSpRule(){

                m_has_rSpRule = true;
                if (!m_rSpRule)
                {
                    m_rSpRule = new CT_SpacingRule();
                }
                return m_rSpRule;
            
        }
        const CT_SpacingRule& rSpRule(){

            if (m_rSpRule)
            {
                return *m_rSpRule;
            }
            return CT_SpacingRule::default_instance();
        
        }
        bool has_cGpRule(){

            return m_has_cGpRule;
        
        }
        CT_SpacingRule* mutable_cGpRule(){

                m_has_cGpRule = true;
                if (!m_cGpRule)
                {
                    m_cGpRule = new CT_SpacingRule();
                }
                return m_cGpRule;
            
        }
        const CT_SpacingRule& cGpRule(){

            if (m_cGpRule)
            {
                return *m_cGpRule;
            }
            return CT_SpacingRule::default_instance();
        
        }
        bool has_rSp(){

            return m_has_rSp;
        
        }
        CT_UnSignedInteger* mutable_rSp(){

                m_has_rSp = true;
                if (!m_rSp)
                {
                    m_rSp = new CT_UnSignedInteger();
                }
                return m_rSp;
            
        }
        const CT_UnSignedInteger& rSp(){

            if (m_rSp)
            {
                return *m_rSp;
            }
            return CT_UnSignedInteger::default_instance();
        
        }
        bool has_cSp(){

            return m_has_cSp;
        
        }
        CT_UnSignedInteger* mutable_cSp(){

                m_has_cSp = true;
                if (!m_cSp)
                {
                    m_cSp = new CT_UnSignedInteger();
                }
                return m_cSp;
            
        }
        const CT_UnSignedInteger& cSp(){

            if (m_cSp)
            {
                return *m_cSp;
            }
            return CT_UnSignedInteger::default_instance();
        
        }
        bool has_cGp(){

            return m_has_cGp;
        
        }
        CT_UnSignedInteger* mutable_cGp(){

                m_has_cGp = true;
                if (!m_cGp)
                {
                    m_cGp = new CT_UnSignedInteger();
                }
                return m_cGp;
            
        }
        const CT_UnSignedInteger& cGp(){

            if (m_cGp)
            {
                return *m_cGp;
            }
            return CT_UnSignedInteger::default_instance();
        
        }
        bool has_mcs(){

            return m_has_mcs;
        
        }
        CT_MCS* mutable_mcs(){

                m_has_mcs = true;
                if (!m_mcs)
                {
                    m_mcs = new CT_MCS();
                }
                return m_mcs;
            
        }
        const CT_MCS& mcs(){

            if (m_mcs)
            {
                return *m_mcs;
            }
            return CT_MCS::default_instance();
        
        }
        bool has_ctrlPr(){

            return m_has_ctrlPr;
        
        }
        CT_CtrlPr* mutable_ctrlPr(){

                m_has_ctrlPr = true;
                if (!m_ctrlPr)
                {
                    m_ctrlPr = new CT_CtrlPr();
                }
                return m_ctrlPr;
            
        }
        const CT_CtrlPr& ctrlPr(){

            if (m_ctrlPr)
            {
                return *m_ctrlPr;
            }
            return CT_CtrlPr::default_instance();
        
        }
        void clear(){

                m_has_baseJc = false;
                
        if (m_baseJc)
        {
            delete m_baseJc;
            m_baseJc = NULL;
        }
    
            
                m_has_plcHide = false;
                
        if (m_plcHide)
        {
            delete m_plcHide;
            m_plcHide = NULL;
        }
    
            
                m_has_rSpRule = false;
                
        if (m_rSpRule)
        {
            delete m_rSpRule;
            m_rSpRule = NULL;
        }
    
            
                m_has_cGpRule = false;
                
        if (m_cGpRule)
        {
            delete m_cGpRule;
            m_cGpRule = NULL;
        }
    
            
                m_has_rSp = false;
                
        if (m_rSp)
        {
            delete m_rSp;
            m_rSp = NULL;
        }
    
            
                m_has_cSp = false;
                
        if (m_cSp)
        {
            delete m_cSp;
            m_cSp = NULL;
        }
    
            
                m_has_cGp = false;
                
        if (m_cGp)
        {
            delete m_cGp;
            m_cGp = NULL;
        }
    
            
                m_has_mcs = false;
                
        if (m_mcs)
        {
            delete m_mcs;
            m_mcs = NULL;
        }
    
            
                m_has_ctrlPr = false;
                
        if (m_ctrlPr)
        {
            delete m_ctrlPr;
            m_ctrlPr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_baseJc)
                {
                    m_baseJc->toXml(baseJc, _outStream);;
                }
            
                if (m_has_plcHide)
                {
                    m_baseJc->toXml(plcHide, _outStream);;
                }
            
                if (m_has_rSpRule)
                {
                    m_baseJc->toXml(rSpRule, _outStream);;
                }
            
                if (m_has_cGpRule)
                {
                    m_baseJc->toXml(cGpRule, _outStream);;
                }
            
                if (m_has_rSp)
                {
                    m_baseJc->toXml(rSp, _outStream);;
                }
            
                if (m_has_cSp)
                {
                    m_baseJc->toXml(cSp, _outStream);;
                }
            
                if (m_has_cGp)
                {
                    m_baseJc->toXml(cGp, _outStream);;
                }
            
                if (m_has_mcs)
                {
                    m_baseJc->toXml(mcs, _outStream);;
                }
            
                if (m_has_ctrlPr)
                {
                    m_baseJc->toXml(ctrlPr, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_MPr& default_instance(){

    if (!CT_MPr::default_instance_)
    {
        CT_MPr::default_instance_ = new CT_MPr();
    }
    return *CT_MPr::default_instance_;

        }

    private:
        bool m_has_baseJc ;
        CT_YAlign* m_baseJc ;
        bool m_has_plcHide ;
        CT_OnOff* m_plcHide ;
        bool m_has_rSpRule ;
        CT_SpacingRule* m_rSpRule ;
        bool m_has_cGpRule ;
        CT_SpacingRule* m_cGpRule ;
        bool m_has_rSp ;
        CT_UnSignedInteger* m_rSp ;
        bool m_has_cSp ;
        CT_UnSignedInteger* m_cSp ;
        bool m_has_cGp ;
        CT_UnSignedInteger* m_cGp ;
        bool m_has_mcs ;
        CT_MCS* m_mcs ;
        bool m_has_ctrlPr ;
        CT_CtrlPr* m_ctrlPr ;
        static CT_MPr* default_instance_ ;

    }

    class CT_MR : public XSD::ComplexType{
    public:
        bool has_e(){

            return m_has_e;
        
        }
        CT_OMathArg* mutable_e(){

                m_has_e = true;
                if (!m_e)
                {
                    m_e = new CT_OMathArg();
                }
                return m_e;
            
        }
        const CT_OMathArg& e(){

            if (m_e)
            {
                return *m_e;
            }
            return CT_OMathArg::default_instance();
        
        }
        void clear(){

                m_has_e = false;
                
        if (m_e)
        {
            delete m_e;
            m_e = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_e)
                {
                    m_e->toXml(e, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_MR& default_instance(){

    if (!CT_MR::default_instance_)
    {
        CT_MR::default_instance_ = new CT_MR();
    }
    return *CT_MR::default_instance_;

        }

    private:
        bool m_has_e ;
        CT_OMathArg* m_e ;
        static CT_MR* default_instance_ ;

    }

    class CT_M : public XSD::ComplexType{
    public:
        bool has_mPr(){

            return m_has_mPr;
        
        }
        CT_MPr* mutable_mPr(){

                m_has_mPr = true;
                if (!m_mPr)
                {
                    m_mPr = new CT_MPr();
                }
                return m_mPr;
            
        }
        const CT_MPr& mPr(){

            if (m_mPr)
            {
                return *m_mPr;
            }
            return CT_MPr::default_instance();
        
        }
        bool has_mr(){

            return m_has_mr;
        
        }
        CT_MR* mutable_mr(){

                m_has_mr = true;
                if (!m_mr)
                {
                    m_mr = new CT_MR();
                }
                return m_mr;
            
        }
        const CT_MR& mr(){

            if (m_mr)
            {
                return *m_mr;
            }
            return CT_MR::default_instance();
        
        }
        void clear(){

                m_has_mPr = false;
                
        if (m_mPr)
        {
            delete m_mPr;
            m_mPr = NULL;
        }
    
            
                m_has_mr = false;
                
        if (m_mr)
        {
            delete m_mr;
            m_mr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_mPr)
                {
                    m_mPr->toXml(mPr, _outStream);;
                }
            
                if (m_has_mr)
                {
                    m_mPr->toXml(mr, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_M& default_instance(){

    if (!CT_M::default_instance_)
    {
        CT_M::default_instance_ = new CT_M();
    }
    return *CT_M::default_instance_;

        }

    private:
        bool m_has_mPr ;
        CT_MPr* m_mPr ;
        bool m_has_mr ;
        CT_MR* m_mr ;
        static CT_M* default_instance_ ;

    }

    class CT_NaryPr : public XSD::ComplexType{
    public:
        bool has_chr(){

            return m_has_chr;
        
        }
        CT_Char* mutable_chr(){

                m_has_chr = true;
                if (!m_chr)
                {
                    m_chr = new CT_Char();
                }
                return m_chr;
            
        }
        const CT_Char& chr(){

            if (m_chr)
            {
                return *m_chr;
            }
            return CT_Char::default_instance();
        
        }
        bool has_limLoc(){

            return m_has_limLoc;
        
        }
        CT_LimLoc* mutable_limLoc(){

                m_has_limLoc = true;
                if (!m_limLoc)
                {
                    m_limLoc = new CT_LimLoc();
                }
                return m_limLoc;
            
        }
        const CT_LimLoc& limLoc(){

            if (m_limLoc)
            {
                return *m_limLoc;
            }
            return CT_LimLoc::default_instance();
        
        }
        bool has_grow(){

            return m_has_grow;
        
        }
        CT_OnOff* mutable_grow(){

                m_has_grow = true;
                if (!m_grow)
                {
                    m_grow = new CT_OnOff();
                }
                return m_grow;
            
        }
        const CT_OnOff& grow(){

            if (m_grow)
            {
                return *m_grow;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_subHide(){

            return m_has_subHide;
        
        }
        CT_OnOff* mutable_subHide(){

                m_has_subHide = true;
                if (!m_subHide)
                {
                    m_subHide = new CT_OnOff();
                }
                return m_subHide;
            
        }
        const CT_OnOff& subHide(){

            if (m_subHide)
            {
                return *m_subHide;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_supHide(){

            return m_has_supHide;
        
        }
        CT_OnOff* mutable_supHide(){

                m_has_supHide = true;
                if (!m_supHide)
                {
                    m_supHide = new CT_OnOff();
                }
                return m_supHide;
            
        }
        const CT_OnOff& supHide(){

            if (m_supHide)
            {
                return *m_supHide;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_ctrlPr(){

            return m_has_ctrlPr;
        
        }
        CT_CtrlPr* mutable_ctrlPr(){

                m_has_ctrlPr = true;
                if (!m_ctrlPr)
                {
                    m_ctrlPr = new CT_CtrlPr();
                }
                return m_ctrlPr;
            
        }
        const CT_CtrlPr& ctrlPr(){

            if (m_ctrlPr)
            {
                return *m_ctrlPr;
            }
            return CT_CtrlPr::default_instance();
        
        }
        void clear(){

                m_has_chr = false;
                
        if (m_chr)
        {
            delete m_chr;
            m_chr = NULL;
        }
    
            
                m_has_limLoc = false;
                
        if (m_limLoc)
        {
            delete m_limLoc;
            m_limLoc = NULL;
        }
    
            
                m_has_grow = false;
                
        if (m_grow)
        {
            delete m_grow;
            m_grow = NULL;
        }
    
            
                m_has_subHide = false;
                
        if (m_subHide)
        {
            delete m_subHide;
            m_subHide = NULL;
        }
    
            
                m_has_supHide = false;
                
        if (m_supHide)
        {
            delete m_supHide;
            m_supHide = NULL;
        }
    
            
                m_has_ctrlPr = false;
                
        if (m_ctrlPr)
        {
            delete m_ctrlPr;
            m_ctrlPr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_chr)
                {
                    m_chr->toXml(chr, _outStream);;
                }
            
                if (m_has_limLoc)
                {
                    m_chr->toXml(limLoc, _outStream);;
                }
            
                if (m_has_grow)
                {
                    m_chr->toXml(grow, _outStream);;
                }
            
                if (m_has_subHide)
                {
                    m_chr->toXml(subHide, _outStream);;
                }
            
                if (m_has_supHide)
                {
                    m_chr->toXml(supHide, _outStream);;
                }
            
                if (m_has_ctrlPr)
                {
                    m_chr->toXml(ctrlPr, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_NaryPr& default_instance(){

    if (!CT_NaryPr::default_instance_)
    {
        CT_NaryPr::default_instance_ = new CT_NaryPr();
    }
    return *CT_NaryPr::default_instance_;

        }

    private:
        bool m_has_chr ;
        CT_Char* m_chr ;
        bool m_has_limLoc ;
        CT_LimLoc* m_limLoc ;
        bool m_has_grow ;
        CT_OnOff* m_grow ;
        bool m_has_subHide ;
        CT_OnOff* m_subHide ;
        bool m_has_supHide ;
        CT_OnOff* m_supHide ;
        bool m_has_ctrlPr ;
        CT_CtrlPr* m_ctrlPr ;
        static CT_NaryPr* default_instance_ ;

    }

    class CT_Nary : public XSD::ComplexType{
    public:
        bool has_naryPr(){

            return m_has_naryPr;
        
        }
        CT_NaryPr* mutable_naryPr(){

                m_has_naryPr = true;
                if (!m_naryPr)
                {
                    m_naryPr = new CT_NaryPr();
                }
                return m_naryPr;
            
        }
        const CT_NaryPr& naryPr(){

            if (m_naryPr)
            {
                return *m_naryPr;
            }
            return CT_NaryPr::default_instance();
        
        }
        bool has_sub(){

            return m_has_sub;
        
        }
        CT_OMathArg* mutable_sub(){

                m_has_sub = true;
                if (!m_sub)
                {
                    m_sub = new CT_OMathArg();
                }
                return m_sub;
            
        }
        const CT_OMathArg& sub(){

            if (m_sub)
            {
                return *m_sub;
            }
            return CT_OMathArg::default_instance();
        
        }
        bool has_sup(){

            return m_has_sup;
        
        }
        CT_OMathArg* mutable_sup(){

                m_has_sup = true;
                if (!m_sup)
                {
                    m_sup = new CT_OMathArg();
                }
                return m_sup;
            
        }
        const CT_OMathArg& sup(){

            if (m_sup)
            {
                return *m_sup;
            }
            return CT_OMathArg::default_instance();
        
        }
        bool has_e(){

            return m_has_e;
        
        }
        CT_OMathArg* mutable_e(){

                m_has_e = true;
                if (!m_e)
                {
                    m_e = new CT_OMathArg();
                }
                return m_e;
            
        }
        const CT_OMathArg& e(){

            if (m_e)
            {
                return *m_e;
            }
            return CT_OMathArg::default_instance();
        
        }
        void clear(){

                m_has_naryPr = false;
                
        if (m_naryPr)
        {
            delete m_naryPr;
            m_naryPr = NULL;
        }
    
            
                m_has_sub = false;
                
        if (m_sub)
        {
            delete m_sub;
            m_sub = NULL;
        }
    
            
                m_has_sup = false;
                
        if (m_sup)
        {
            delete m_sup;
            m_sup = NULL;
        }
    
            
                m_has_e = false;
                
        if (m_e)
        {
            delete m_e;
            m_e = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_naryPr)
                {
                    m_naryPr->toXml(naryPr, _outStream);;
                }
            
                if (m_has_sub)
                {
                    m_naryPr->toXml(sub, _outStream);;
                }
            
                if (m_has_sup)
                {
                    m_naryPr->toXml(sup, _outStream);;
                }
            
                if (m_has_e)
                {
                    m_naryPr->toXml(e, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Nary& default_instance(){

    if (!CT_Nary::default_instance_)
    {
        CT_Nary::default_instance_ = new CT_Nary();
    }
    return *CT_Nary::default_instance_;

        }

    private:
        bool m_has_naryPr ;
        CT_NaryPr* m_naryPr ;
        bool m_has_sub ;
        CT_OMathArg* m_sub ;
        bool m_has_sup ;
        CT_OMathArg* m_sup ;
        bool m_has_e ;
        CT_OMathArg* m_e ;
        static CT_Nary* default_instance_ ;

    }

    class CT_PhantPr : public XSD::ComplexType{
    public:
        bool has_show(){

            return m_has_show;
        
        }
        CT_OnOff* mutable_show(){

                m_has_show = true;
                if (!m_show)
                {
                    m_show = new CT_OnOff();
                }
                return m_show;
            
        }
        const CT_OnOff& show(){

            if (m_show)
            {
                return *m_show;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_zeroWid(){

            return m_has_zeroWid;
        
        }
        CT_OnOff* mutable_zeroWid(){

                m_has_zeroWid = true;
                if (!m_zeroWid)
                {
                    m_zeroWid = new CT_OnOff();
                }
                return m_zeroWid;
            
        }
        const CT_OnOff& zeroWid(){

            if (m_zeroWid)
            {
                return *m_zeroWid;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_zeroAsc(){

            return m_has_zeroAsc;
        
        }
        CT_OnOff* mutable_zeroAsc(){

                m_has_zeroAsc = true;
                if (!m_zeroAsc)
                {
                    m_zeroAsc = new CT_OnOff();
                }
                return m_zeroAsc;
            
        }
        const CT_OnOff& zeroAsc(){

            if (m_zeroAsc)
            {
                return *m_zeroAsc;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_zeroDesc(){

            return m_has_zeroDesc;
        
        }
        CT_OnOff* mutable_zeroDesc(){

                m_has_zeroDesc = true;
                if (!m_zeroDesc)
                {
                    m_zeroDesc = new CT_OnOff();
                }
                return m_zeroDesc;
            
        }
        const CT_OnOff& zeroDesc(){

            if (m_zeroDesc)
            {
                return *m_zeroDesc;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_transp(){

            return m_has_transp;
        
        }
        CT_OnOff* mutable_transp(){

                m_has_transp = true;
                if (!m_transp)
                {
                    m_transp = new CT_OnOff();
                }
                return m_transp;
            
        }
        const CT_OnOff& transp(){

            if (m_transp)
            {
                return *m_transp;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_ctrlPr(){

            return m_has_ctrlPr;
        
        }
        CT_CtrlPr* mutable_ctrlPr(){

                m_has_ctrlPr = true;
                if (!m_ctrlPr)
                {
                    m_ctrlPr = new CT_CtrlPr();
                }
                return m_ctrlPr;
            
        }
        const CT_CtrlPr& ctrlPr(){

            if (m_ctrlPr)
            {
                return *m_ctrlPr;
            }
            return CT_CtrlPr::default_instance();
        
        }
        void clear(){

                m_has_show = false;
                
        if (m_show)
        {
            delete m_show;
            m_show = NULL;
        }
    
            
                m_has_zeroWid = false;
                
        if (m_zeroWid)
        {
            delete m_zeroWid;
            m_zeroWid = NULL;
        }
    
            
                m_has_zeroAsc = false;
                
        if (m_zeroAsc)
        {
            delete m_zeroAsc;
            m_zeroAsc = NULL;
        }
    
            
                m_has_zeroDesc = false;
                
        if (m_zeroDesc)
        {
            delete m_zeroDesc;
            m_zeroDesc = NULL;
        }
    
            
                m_has_transp = false;
                
        if (m_transp)
        {
            delete m_transp;
            m_transp = NULL;
        }
    
            
                m_has_ctrlPr = false;
                
        if (m_ctrlPr)
        {
            delete m_ctrlPr;
            m_ctrlPr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_show)
                {
                    m_show->toXml(show, _outStream);;
                }
            
                if (m_has_zeroWid)
                {
                    m_show->toXml(zeroWid, _outStream);;
                }
            
                if (m_has_zeroAsc)
                {
                    m_show->toXml(zeroAsc, _outStream);;
                }
            
                if (m_has_zeroDesc)
                {
                    m_show->toXml(zeroDesc, _outStream);;
                }
            
                if (m_has_transp)
                {
                    m_show->toXml(transp, _outStream);;
                }
            
                if (m_has_ctrlPr)
                {
                    m_show->toXml(ctrlPr, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_PhantPr& default_instance(){

    if (!CT_PhantPr::default_instance_)
    {
        CT_PhantPr::default_instance_ = new CT_PhantPr();
    }
    return *CT_PhantPr::default_instance_;

        }

    private:
        bool m_has_show ;
        CT_OnOff* m_show ;
        bool m_has_zeroWid ;
        CT_OnOff* m_zeroWid ;
        bool m_has_zeroAsc ;
        CT_OnOff* m_zeroAsc ;
        bool m_has_zeroDesc ;
        CT_OnOff* m_zeroDesc ;
        bool m_has_transp ;
        CT_OnOff* m_transp ;
        bool m_has_ctrlPr ;
        CT_CtrlPr* m_ctrlPr ;
        static CT_PhantPr* default_instance_ ;

    }

    class CT_Phant : public XSD::ComplexType{
    public:
        bool has_phantPr(){

            return m_has_phantPr;
        
        }
        CT_PhantPr* mutable_phantPr(){

                m_has_phantPr = true;
                if (!m_phantPr)
                {
                    m_phantPr = new CT_PhantPr();
                }
                return m_phantPr;
            
        }
        const CT_PhantPr& phantPr(){

            if (m_phantPr)
            {
                return *m_phantPr;
            }
            return CT_PhantPr::default_instance();
        
        }
        bool has_e(){

            return m_has_e;
        
        }
        CT_OMathArg* mutable_e(){

                m_has_e = true;
                if (!m_e)
                {
                    m_e = new CT_OMathArg();
                }
                return m_e;
            
        }
        const CT_OMathArg& e(){

            if (m_e)
            {
                return *m_e;
            }
            return CT_OMathArg::default_instance();
        
        }
        void clear(){

                m_has_phantPr = false;
                
        if (m_phantPr)
        {
            delete m_phantPr;
            m_phantPr = NULL;
        }
    
            
                m_has_e = false;
                
        if (m_e)
        {
            delete m_e;
            m_e = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_phantPr)
                {
                    m_phantPr->toXml(phantPr, _outStream);;
                }
            
                if (m_has_e)
                {
                    m_phantPr->toXml(e, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Phant& default_instance(){

    if (!CT_Phant::default_instance_)
    {
        CT_Phant::default_instance_ = new CT_Phant();
    }
    return *CT_Phant::default_instance_;

        }

    private:
        bool m_has_phantPr ;
        CT_PhantPr* m_phantPr ;
        bool m_has_e ;
        CT_OMathArg* m_e ;
        static CT_Phant* default_instance_ ;

    }

    class CT_RadPr : public XSD::ComplexType{
    public:
        bool has_degHide(){

            return m_has_degHide;
        
        }
        CT_OnOff* mutable_degHide(){

                m_has_degHide = true;
                if (!m_degHide)
                {
                    m_degHide = new CT_OnOff();
                }
                return m_degHide;
            
        }
        const CT_OnOff& degHide(){

            if (m_degHide)
            {
                return *m_degHide;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_ctrlPr(){

            return m_has_ctrlPr;
        
        }
        CT_CtrlPr* mutable_ctrlPr(){

                m_has_ctrlPr = true;
                if (!m_ctrlPr)
                {
                    m_ctrlPr = new CT_CtrlPr();
                }
                return m_ctrlPr;
            
        }
        const CT_CtrlPr& ctrlPr(){

            if (m_ctrlPr)
            {
                return *m_ctrlPr;
            }
            return CT_CtrlPr::default_instance();
        
        }
        void clear(){

                m_has_degHide = false;
                
        if (m_degHide)
        {
            delete m_degHide;
            m_degHide = NULL;
        }
    
            
                m_has_ctrlPr = false;
                
        if (m_ctrlPr)
        {
            delete m_ctrlPr;
            m_ctrlPr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_degHide)
                {
                    m_degHide->toXml(degHide, _outStream);;
                }
            
                if (m_has_ctrlPr)
                {
                    m_degHide->toXml(ctrlPr, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_RadPr& default_instance(){

    if (!CT_RadPr::default_instance_)
    {
        CT_RadPr::default_instance_ = new CT_RadPr();
    }
    return *CT_RadPr::default_instance_;

        }

    private:
        bool m_has_degHide ;
        CT_OnOff* m_degHide ;
        bool m_has_ctrlPr ;
        CT_CtrlPr* m_ctrlPr ;
        static CT_RadPr* default_instance_ ;

    }

    class CT_Rad : public XSD::ComplexType{
    public:
        bool has_radPr(){

            return m_has_radPr;
        
        }
        CT_RadPr* mutable_radPr(){

                m_has_radPr = true;
                if (!m_radPr)
                {
                    m_radPr = new CT_RadPr();
                }
                return m_radPr;
            
        }
        const CT_RadPr& radPr(){

            if (m_radPr)
            {
                return *m_radPr;
            }
            return CT_RadPr::default_instance();
        
        }
        bool has_deg(){

            return m_has_deg;
        
        }
        CT_OMathArg* mutable_deg(){

                m_has_deg = true;
                if (!m_deg)
                {
                    m_deg = new CT_OMathArg();
                }
                return m_deg;
            
        }
        const CT_OMathArg& deg(){

            if (m_deg)
            {
                return *m_deg;
            }
            return CT_OMathArg::default_instance();
        
        }
        bool has_e(){

            return m_has_e;
        
        }
        CT_OMathArg* mutable_e(){

                m_has_e = true;
                if (!m_e)
                {
                    m_e = new CT_OMathArg();
                }
                return m_e;
            
        }
        const CT_OMathArg& e(){

            if (m_e)
            {
                return *m_e;
            }
            return CT_OMathArg::default_instance();
        
        }
        void clear(){

                m_has_radPr = false;
                
        if (m_radPr)
        {
            delete m_radPr;
            m_radPr = NULL;
        }
    
            
                m_has_deg = false;
                
        if (m_deg)
        {
            delete m_deg;
            m_deg = NULL;
        }
    
            
                m_has_e = false;
                
        if (m_e)
        {
            delete m_e;
            m_e = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_radPr)
                {
                    m_radPr->toXml(radPr, _outStream);;
                }
            
                if (m_has_deg)
                {
                    m_radPr->toXml(deg, _outStream);;
                }
            
                if (m_has_e)
                {
                    m_radPr->toXml(e, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_Rad& default_instance(){

    if (!CT_Rad::default_instance_)
    {
        CT_Rad::default_instance_ = new CT_Rad();
    }
    return *CT_Rad::default_instance_;

        }

    private:
        bool m_has_radPr ;
        CT_RadPr* m_radPr ;
        bool m_has_deg ;
        CT_OMathArg* m_deg ;
        bool m_has_e ;
        CT_OMathArg* m_e ;
        static CT_Rad* default_instance_ ;

    }

    class CT_SPrePr : public XSD::ComplexType{
    public:
        bool has_ctrlPr(){

            return m_has_ctrlPr;
        
        }
        CT_CtrlPr* mutable_ctrlPr(){

                m_has_ctrlPr = true;
                if (!m_ctrlPr)
                {
                    m_ctrlPr = new CT_CtrlPr();
                }
                return m_ctrlPr;
            
        }
        const CT_CtrlPr& ctrlPr(){

            if (m_ctrlPr)
            {
                return *m_ctrlPr;
            }
            return CT_CtrlPr::default_instance();
        
        }
        void clear(){

                m_has_ctrlPr = false;
                
        if (m_ctrlPr)
        {
            delete m_ctrlPr;
            m_ctrlPr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_ctrlPr)
                {
                    m_ctrlPr->toXml(ctrlPr, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_SPrePr& default_instance(){

    if (!CT_SPrePr::default_instance_)
    {
        CT_SPrePr::default_instance_ = new CT_SPrePr();
    }
    return *CT_SPrePr::default_instance_;

        }

    private:
        bool m_has_ctrlPr ;
        CT_CtrlPr* m_ctrlPr ;
        static CT_SPrePr* default_instance_ ;

    }

    class CT_SPre : public XSD::ComplexType{
    public:
        bool has_sPrePr(){

            return m_has_sPrePr;
        
        }
        CT_SPrePr* mutable_sPrePr(){

                m_has_sPrePr = true;
                if (!m_sPrePr)
                {
                    m_sPrePr = new CT_SPrePr();
                }
                return m_sPrePr;
            
        }
        const CT_SPrePr& sPrePr(){

            if (m_sPrePr)
            {
                return *m_sPrePr;
            }
            return CT_SPrePr::default_instance();
        
        }
        bool has_sub(){

            return m_has_sub;
        
        }
        CT_OMathArg* mutable_sub(){

                m_has_sub = true;
                if (!m_sub)
                {
                    m_sub = new CT_OMathArg();
                }
                return m_sub;
            
        }
        const CT_OMathArg& sub(){

            if (m_sub)
            {
                return *m_sub;
            }
            return CT_OMathArg::default_instance();
        
        }
        bool has_sup(){

            return m_has_sup;
        
        }
        CT_OMathArg* mutable_sup(){

                m_has_sup = true;
                if (!m_sup)
                {
                    m_sup = new CT_OMathArg();
                }
                return m_sup;
            
        }
        const CT_OMathArg& sup(){

            if (m_sup)
            {
                return *m_sup;
            }
            return CT_OMathArg::default_instance();
        
        }
        bool has_e(){

            return m_has_e;
        
        }
        CT_OMathArg* mutable_e(){

                m_has_e = true;
                if (!m_e)
                {
                    m_e = new CT_OMathArg();
                }
                return m_e;
            
        }
        const CT_OMathArg& e(){

            if (m_e)
            {
                return *m_e;
            }
            return CT_OMathArg::default_instance();
        
        }
        void clear(){

                m_has_sPrePr = false;
                
        if (m_sPrePr)
        {
            delete m_sPrePr;
            m_sPrePr = NULL;
        }
    
            
                m_has_sub = false;
                
        if (m_sub)
        {
            delete m_sub;
            m_sub = NULL;
        }
    
            
                m_has_sup = false;
                
        if (m_sup)
        {
            delete m_sup;
            m_sup = NULL;
        }
    
            
                m_has_e = false;
                
        if (m_e)
        {
            delete m_e;
            m_e = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_sPrePr)
                {
                    m_sPrePr->toXml(sPrePr, _outStream);;
                }
            
                if (m_has_sub)
                {
                    m_sPrePr->toXml(sub, _outStream);;
                }
            
                if (m_has_sup)
                {
                    m_sPrePr->toXml(sup, _outStream);;
                }
            
                if (m_has_e)
                {
                    m_sPrePr->toXml(e, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_SPre& default_instance(){

    if (!CT_SPre::default_instance_)
    {
        CT_SPre::default_instance_ = new CT_SPre();
    }
    return *CT_SPre::default_instance_;

        }

    private:
        bool m_has_sPrePr ;
        CT_SPrePr* m_sPrePr ;
        bool m_has_sub ;
        CT_OMathArg* m_sub ;
        bool m_has_sup ;
        CT_OMathArg* m_sup ;
        bool m_has_e ;
        CT_OMathArg* m_e ;
        static CT_SPre* default_instance_ ;

    }

    class CT_SSubPr : public XSD::ComplexType{
    public:
        bool has_ctrlPr(){

            return m_has_ctrlPr;
        
        }
        CT_CtrlPr* mutable_ctrlPr(){

                m_has_ctrlPr = true;
                if (!m_ctrlPr)
                {
                    m_ctrlPr = new CT_CtrlPr();
                }
                return m_ctrlPr;
            
        }
        const CT_CtrlPr& ctrlPr(){

            if (m_ctrlPr)
            {
                return *m_ctrlPr;
            }
            return CT_CtrlPr::default_instance();
        
        }
        void clear(){

                m_has_ctrlPr = false;
                
        if (m_ctrlPr)
        {
            delete m_ctrlPr;
            m_ctrlPr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_ctrlPr)
                {
                    m_ctrlPr->toXml(ctrlPr, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_SSubPr& default_instance(){

    if (!CT_SSubPr::default_instance_)
    {
        CT_SSubPr::default_instance_ = new CT_SSubPr();
    }
    return *CT_SSubPr::default_instance_;

        }

    private:
        bool m_has_ctrlPr ;
        CT_CtrlPr* m_ctrlPr ;
        static CT_SSubPr* default_instance_ ;

    }

    class CT_SSub : public XSD::ComplexType{
    public:
        bool has_sSubPr(){

            return m_has_sSubPr;
        
        }
        CT_SSubPr* mutable_sSubPr(){

                m_has_sSubPr = true;
                if (!m_sSubPr)
                {
                    m_sSubPr = new CT_SSubPr();
                }
                return m_sSubPr;
            
        }
        const CT_SSubPr& sSubPr(){

            if (m_sSubPr)
            {
                return *m_sSubPr;
            }
            return CT_SSubPr::default_instance();
        
        }
        bool has_e(){

            return m_has_e;
        
        }
        CT_OMathArg* mutable_e(){

                m_has_e = true;
                if (!m_e)
                {
                    m_e = new CT_OMathArg();
                }
                return m_e;
            
        }
        const CT_OMathArg& e(){

            if (m_e)
            {
                return *m_e;
            }
            return CT_OMathArg::default_instance();
        
        }
        bool has_sub(){

            return m_has_sub;
        
        }
        CT_OMathArg* mutable_sub(){

                m_has_sub = true;
                if (!m_sub)
                {
                    m_sub = new CT_OMathArg();
                }
                return m_sub;
            
        }
        const CT_OMathArg& sub(){

            if (m_sub)
            {
                return *m_sub;
            }
            return CT_OMathArg::default_instance();
        
        }
        void clear(){

                m_has_sSubPr = false;
                
        if (m_sSubPr)
        {
            delete m_sSubPr;
            m_sSubPr = NULL;
        }
    
            
                m_has_e = false;
                
        if (m_e)
        {
            delete m_e;
            m_e = NULL;
        }
    
            
                m_has_sub = false;
                
        if (m_sub)
        {
            delete m_sub;
            m_sub = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_sSubPr)
                {
                    m_sSubPr->toXml(sSubPr, _outStream);;
                }
            
                if (m_has_e)
                {
                    m_sSubPr->toXml(e, _outStream);;
                }
            
                if (m_has_sub)
                {
                    m_sSubPr->toXml(sub, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_SSub& default_instance(){

    if (!CT_SSub::default_instance_)
    {
        CT_SSub::default_instance_ = new CT_SSub();
    }
    return *CT_SSub::default_instance_;

        }

    private:
        bool m_has_sSubPr ;
        CT_SSubPr* m_sSubPr ;
        bool m_has_e ;
        CT_OMathArg* m_e ;
        bool m_has_sub ;
        CT_OMathArg* m_sub ;
        static CT_SSub* default_instance_ ;

    }

    class CT_SSubSupPr : public XSD::ComplexType{
    public:
        bool has_alnScr(){

            return m_has_alnScr;
        
        }
        CT_OnOff* mutable_alnScr(){

                m_has_alnScr = true;
                if (!m_alnScr)
                {
                    m_alnScr = new CT_OnOff();
                }
                return m_alnScr;
            
        }
        const CT_OnOff& alnScr(){

            if (m_alnScr)
            {
                return *m_alnScr;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_ctrlPr(){

            return m_has_ctrlPr;
        
        }
        CT_CtrlPr* mutable_ctrlPr(){

                m_has_ctrlPr = true;
                if (!m_ctrlPr)
                {
                    m_ctrlPr = new CT_CtrlPr();
                }
                return m_ctrlPr;
            
        }
        const CT_CtrlPr& ctrlPr(){

            if (m_ctrlPr)
            {
                return *m_ctrlPr;
            }
            return CT_CtrlPr::default_instance();
        
        }
        void clear(){

                m_has_alnScr = false;
                
        if (m_alnScr)
        {
            delete m_alnScr;
            m_alnScr = NULL;
        }
    
            
                m_has_ctrlPr = false;
                
        if (m_ctrlPr)
        {
            delete m_ctrlPr;
            m_ctrlPr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_alnScr)
                {
                    m_alnScr->toXml(alnScr, _outStream);;
                }
            
                if (m_has_ctrlPr)
                {
                    m_alnScr->toXml(ctrlPr, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_SSubSupPr& default_instance(){

    if (!CT_SSubSupPr::default_instance_)
    {
        CT_SSubSupPr::default_instance_ = new CT_SSubSupPr();
    }
    return *CT_SSubSupPr::default_instance_;

        }

    private:
        bool m_has_alnScr ;
        CT_OnOff* m_alnScr ;
        bool m_has_ctrlPr ;
        CT_CtrlPr* m_ctrlPr ;
        static CT_SSubSupPr* default_instance_ ;

    }

    class CT_SSubSup : public XSD::ComplexType{
    public:
        bool has_sSubSupPr(){

            return m_has_sSubSupPr;
        
        }
        CT_SSubSupPr* mutable_sSubSupPr(){

                m_has_sSubSupPr = true;
                if (!m_sSubSupPr)
                {
                    m_sSubSupPr = new CT_SSubSupPr();
                }
                return m_sSubSupPr;
            
        }
        const CT_SSubSupPr& sSubSupPr(){

            if (m_sSubSupPr)
            {
                return *m_sSubSupPr;
            }
            return CT_SSubSupPr::default_instance();
        
        }
        bool has_e(){

            return m_has_e;
        
        }
        CT_OMathArg* mutable_e(){

                m_has_e = true;
                if (!m_e)
                {
                    m_e = new CT_OMathArg();
                }
                return m_e;
            
        }
        const CT_OMathArg& e(){

            if (m_e)
            {
                return *m_e;
            }
            return CT_OMathArg::default_instance();
        
        }
        bool has_sub(){

            return m_has_sub;
        
        }
        CT_OMathArg* mutable_sub(){

                m_has_sub = true;
                if (!m_sub)
                {
                    m_sub = new CT_OMathArg();
                }
                return m_sub;
            
        }
        const CT_OMathArg& sub(){

            if (m_sub)
            {
                return *m_sub;
            }
            return CT_OMathArg::default_instance();
        
        }
        bool has_sup(){

            return m_has_sup;
        
        }
        CT_OMathArg* mutable_sup(){

                m_has_sup = true;
                if (!m_sup)
                {
                    m_sup = new CT_OMathArg();
                }
                return m_sup;
            
        }
        const CT_OMathArg& sup(){

            if (m_sup)
            {
                return *m_sup;
            }
            return CT_OMathArg::default_instance();
        
        }
        void clear(){

                m_has_sSubSupPr = false;
                
        if (m_sSubSupPr)
        {
            delete m_sSubSupPr;
            m_sSubSupPr = NULL;
        }
    
            
                m_has_e = false;
                
        if (m_e)
        {
            delete m_e;
            m_e = NULL;
        }
    
            
                m_has_sub = false;
                
        if (m_sub)
        {
            delete m_sub;
            m_sub = NULL;
        }
    
            
                m_has_sup = false;
                
        if (m_sup)
        {
            delete m_sup;
            m_sup = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_sSubSupPr)
                {
                    m_sSubSupPr->toXml(sSubSupPr, _outStream);;
                }
            
                if (m_has_e)
                {
                    m_sSubSupPr->toXml(e, _outStream);;
                }
            
                if (m_has_sub)
                {
                    m_sSubSupPr->toXml(sub, _outStream);;
                }
            
                if (m_has_sup)
                {
                    m_sSubSupPr->toXml(sup, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_SSubSup& default_instance(){

    if (!CT_SSubSup::default_instance_)
    {
        CT_SSubSup::default_instance_ = new CT_SSubSup();
    }
    return *CT_SSubSup::default_instance_;

        }

    private:
        bool m_has_sSubSupPr ;
        CT_SSubSupPr* m_sSubSupPr ;
        bool m_has_e ;
        CT_OMathArg* m_e ;
        bool m_has_sub ;
        CT_OMathArg* m_sub ;
        bool m_has_sup ;
        CT_OMathArg* m_sup ;
        static CT_SSubSup* default_instance_ ;

    }

    class CT_SSupPr : public XSD::ComplexType{
    public:
        bool has_ctrlPr(){

            return m_has_ctrlPr;
        
        }
        CT_CtrlPr* mutable_ctrlPr(){

                m_has_ctrlPr = true;
                if (!m_ctrlPr)
                {
                    m_ctrlPr = new CT_CtrlPr();
                }
                return m_ctrlPr;
            
        }
        const CT_CtrlPr& ctrlPr(){

            if (m_ctrlPr)
            {
                return *m_ctrlPr;
            }
            return CT_CtrlPr::default_instance();
        
        }
        void clear(){

                m_has_ctrlPr = false;
                
        if (m_ctrlPr)
        {
            delete m_ctrlPr;
            m_ctrlPr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_ctrlPr)
                {
                    m_ctrlPr->toXml(ctrlPr, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_SSupPr& default_instance(){

    if (!CT_SSupPr::default_instance_)
    {
        CT_SSupPr::default_instance_ = new CT_SSupPr();
    }
    return *CT_SSupPr::default_instance_;

        }

    private:
        bool m_has_ctrlPr ;
        CT_CtrlPr* m_ctrlPr ;
        static CT_SSupPr* default_instance_ ;

    }

    class CT_SSup : public XSD::ComplexType{
    public:
        bool has_sSupPr(){

            return m_has_sSupPr;
        
        }
        CT_SSupPr* mutable_sSupPr(){

                m_has_sSupPr = true;
                if (!m_sSupPr)
                {
                    m_sSupPr = new CT_SSupPr();
                }
                return m_sSupPr;
            
        }
        const CT_SSupPr& sSupPr(){

            if (m_sSupPr)
            {
                return *m_sSupPr;
            }
            return CT_SSupPr::default_instance();
        
        }
        bool has_e(){

            return m_has_e;
        
        }
        CT_OMathArg* mutable_e(){

                m_has_e = true;
                if (!m_e)
                {
                    m_e = new CT_OMathArg();
                }
                return m_e;
            
        }
        const CT_OMathArg& e(){

            if (m_e)
            {
                return *m_e;
            }
            return CT_OMathArg::default_instance();
        
        }
        bool has_sup(){

            return m_has_sup;
        
        }
        CT_OMathArg* mutable_sup(){

                m_has_sup = true;
                if (!m_sup)
                {
                    m_sup = new CT_OMathArg();
                }
                return m_sup;
            
        }
        const CT_OMathArg& sup(){

            if (m_sup)
            {
                return *m_sup;
            }
            return CT_OMathArg::default_instance();
        
        }
        void clear(){

                m_has_sSupPr = false;
                
        if (m_sSupPr)
        {
            delete m_sSupPr;
            m_sSupPr = NULL;
        }
    
            
                m_has_e = false;
                
        if (m_e)
        {
            delete m_e;
            m_e = NULL;
        }
    
            
                m_has_sup = false;
                
        if (m_sup)
        {
            delete m_sup;
            m_sup = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_sSupPr)
                {
                    m_sSupPr->toXml(sSupPr, _outStream);;
                }
            
                if (m_has_e)
                {
                    m_sSupPr->toXml(e, _outStream);;
                }
            
                if (m_has_sup)
                {
                    m_sSupPr->toXml(sup, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_SSup& default_instance(){

    if (!CT_SSup::default_instance_)
    {
        CT_SSup::default_instance_ = new CT_SSup();
    }
    return *CT_SSup::default_instance_;

        }

    private:
        bool m_has_sSupPr ;
        CT_SSupPr* m_sSupPr ;
        bool m_has_e ;
        CT_OMathArg* m_e ;
        bool m_has_sup ;
        CT_OMathArg* m_sup ;
        static CT_SSup* default_instance_ ;

    }

    class CT_OMathArgPr : public XSD::ComplexType{
    public:
        bool has_argSz(){

            return m_has_argSz;
        
        }
        CT_Integer2* mutable_argSz(){

                m_has_argSz = true;
                if (!m_argSz)
                {
                    m_argSz = new CT_Integer2();
                }
                return m_argSz;
            
        }
        const CT_Integer2& argSz(){

            if (m_argSz)
            {
                return *m_argSz;
            }
            return CT_Integer2::default_instance();
        
        }
        void clear(){

                m_has_argSz = false;
                
        if (m_argSz)
        {
            delete m_argSz;
            m_argSz = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_argSz)
                {
                    m_argSz->toXml(argSz, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_OMathArgPr& default_instance(){

    if (!CT_OMathArgPr::default_instance_)
    {
        CT_OMathArgPr::default_instance_ = new CT_OMathArgPr();
    }
    return *CT_OMathArgPr::default_instance_;

        }

    private:
        bool m_has_argSz ;
        CT_Integer2* m_argSz ;
        static CT_OMathArgPr* default_instance_ ;

    }

    class CT_OMathArg : public XSD::ComplexType{
    public:
        bool has_argPr(){

            return m_has_argPr;
        
        }
        CT_OMathArgPr* mutable_argPr(){

                m_has_argPr = true;
                if (!m_argPr)
                {
                    m_argPr = new CT_OMathArgPr();
                }
                return m_argPr;
            
        }
        const CT_OMathArgPr& argPr(){

            if (m_argPr)
            {
                return *m_argPr;
            }
            return CT_OMathArgPr::default_instance();
        
        }
        CT_Acc* add_acc(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Acc* pNewChild = pChildGroup->mutable_acc();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Bar* add_bar(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Bar* pNewChild = pChildGroup->mutable_bar();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Box* add_box(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Box* pNewChild = pChildGroup->mutable_box();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_BorderBox* add_borderBox(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_BorderBox* pNewChild = pChildGroup->mutable_borderBox();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_D* add_d(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_D* pNewChild = pChildGroup->mutable_d();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_EqArr* add_eqArr(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_EqArr* pNewChild = pChildGroup->mutable_eqArr();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_F* add_f(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_F* pNewChild = pChildGroup->mutable_f();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Func* add_func(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Func* pNewChild = pChildGroup->mutable_func();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_GroupChr* add_groupChr(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_GroupChr* pNewChild = pChildGroup->mutable_groupChr();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_LimLow* add_limLow(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_LimLow* pNewChild = pChildGroup->mutable_limLow();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_LimUpp* add_limUpp(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_LimUpp* pNewChild = pChildGroup->mutable_limUpp();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_M* add_m(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_M* pNewChild = pChildGroup->mutable_m();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Nary* add_nary(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Nary* pNewChild = pChildGroup->mutable_nary();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Phant* add_phant(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Phant* pNewChild = pChildGroup->mutable_phant();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Rad* add_rad(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Rad* pNewChild = pChildGroup->mutable_rad();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SPre* add_sPre(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SPre* pNewChild = pChildGroup->mutable_sPre();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SSub* add_sSub(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SSub* pNewChild = pChildGroup->mutable_sSub();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SSubSup* add_sSubSup(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SSubSup* pNewChild = pChildGroup->mutable_sSubSup();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SSup* add_sSup(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SSup* pNewChild = pChildGroup->mutable_sSup();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_R* add_r(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_R* pNewChild = pChildGroup->mutable_r();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_CustomXmlRun* add_customXml(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_CustomXmlRun* pNewChild = pChildGroup->mutable_customXml();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SimpleField* add_fldSimple(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SimpleField* pNewChild = pChildGroup->mutable_fldSimple();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Hyperlink* add_hyperlink(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Hyperlink* pNewChild = pChildGroup->mutable_hyperlink();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SmartTagRun* add_smartTag(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SmartTagRun* pNewChild = pChildGroup->mutable_smartTag();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SdtRun* add_sdt(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SdtRun* pNewChild = pChildGroup->mutable_sdt();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ProofErr* add_proofErr(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ProofErr* pNewChild = pChildGroup->mutable_proofErr();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_PermStart* add_permStart(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_PermStart* pNewChild = pChildGroup->mutable_permStart();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Perm* add_permEnd(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Perm* pNewChild = pChildGroup->mutable_permEnd();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Bookmark* add_bookmarkStart(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Bookmark* pNewChild = pChildGroup->mutable_bookmarkStart();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_MarkupRange* add_bookmarkEnd(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_MarkupRange* pNewChild = pChildGroup->mutable_bookmarkEnd();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_MoveBookmark* add_moveFromRangeStart(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_MoveBookmark* pNewChild = pChildGroup->mutable_moveFromRangeStart();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_MarkupRange* add_moveFromRangeEnd(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_MarkupRange* pNewChild = pChildGroup->mutable_moveFromRangeEnd();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_MoveBookmark* add_moveToRangeStart(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_MoveBookmark* pNewChild = pChildGroup->mutable_moveToRangeStart();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_MarkupRange* add_moveToRangeEnd(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_MarkupRange* pNewChild = pChildGroup->mutable_moveToRangeEnd();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_MarkupRange* add_commentRangeStart(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_MarkupRange* pNewChild = pChildGroup->mutable_commentRangeStart();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_MarkupRange* add_commentRangeEnd(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_MarkupRange* pNewChild = pChildGroup->mutable_commentRangeEnd();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_TrackChange* add_customXmlInsRangeStart(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_TrackChange* pNewChild = pChildGroup->mutable_customXmlInsRangeStart();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Markup* add_customXmlInsRangeEnd(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Markup* pNewChild = pChildGroup->mutable_customXmlInsRangeEnd();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_TrackChange* add_customXmlDelRangeStart(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_TrackChange* pNewChild = pChildGroup->mutable_customXmlDelRangeStart();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Markup* add_customXmlDelRangeEnd(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Markup* pNewChild = pChildGroup->mutable_customXmlDelRangeEnd();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_TrackChange* add_customXmlMoveFromRangeStart(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_TrackChange* pNewChild = pChildGroup->mutable_customXmlMoveFromRangeStart();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Markup* add_customXmlMoveFromRangeEnd(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Markup* pNewChild = pChildGroup->mutable_customXmlMoveFromRangeEnd();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_TrackChange* add_customXmlMoveToRangeStart(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_TrackChange* pNewChild = pChildGroup->mutable_customXmlMoveToRangeStart();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Markup* add_customXmlMoveToRangeEnd(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Markup* pNewChild = pChildGroup->mutable_customXmlMoveToRangeEnd();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_RunTrackChange* add_ins(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_RunTrackChange* pNewChild = pChildGroup->mutable_ins();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_RunTrackChange* add_del(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_RunTrackChange* pNewChild = pChildGroup->mutable_del();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_RunTrackChange* add_moveFrom(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_RunTrackChange* pNewChild = pChildGroup->mutable_moveFrom();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_RunTrackChange* add_moveTo(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_RunTrackChange* pNewChild = pChildGroup->mutable_moveTo();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_OMathPara* add_oMathPara(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_OMathPara* pNewChild = pChildGroup->mutable_oMathPara();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_OMath* add_oMath(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_OMath* pNewChild = pChildGroup->mutable_oMath();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        bool has_ctrlPr(){

            return m_has_ctrlPr;
        
        }
        CT_CtrlPr* mutable_ctrlPr(){

                m_has_ctrlPr = true;
                if (!m_ctrlPr)
                {
                    m_ctrlPr = new CT_CtrlPr();
                }
                return m_ctrlPr;
            
        }
        const CT_CtrlPr& ctrlPr(){

            if (m_ctrlPr)
            {
                return *m_ctrlPr;
            }
            return CT_CtrlPr::default_instance();
        
        }
        void clear(){

                m_has_argPr = false;
                
        if (m_argPr)
        {
            delete m_argPr;
            m_argPr = NULL;
        }
    
             
            vector<ChildGroup_1*>::iterator iter;
            for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
            {
                delete *iter;
            }
            m_childGroupList_1.clear();
         
                m_has_ctrlPr = false;
                
        if (m_ctrlPr)
        {
            delete m_ctrlPr;
            m_ctrlPr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_argPr)
                {
                    m_argPr->toXml(argPr, _outStream);;
                }
             
        vector<ChildGroup_1*>::const_iterator iter;
        for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
        {
            if ((*iter)->has_acc())
            {
                (*iter)->toXml(acc, _outStream);
            }
            else if ((*iter)->has_bar())
            {
                (*iter)->toXml(bar, _outStream);
            }
            else if ((*iter)->has_box())
            {
                (*iter)->toXml(box, _outStream);
            }
            else if ((*iter)->has_borderBox())
            {
                (*iter)->toXml(borderBox, _outStream);
            }
            else if ((*iter)->has_d())
            {
                (*iter)->toXml(d, _outStream);
            }
            else if ((*iter)->has_eqArr())
            {
                (*iter)->toXml(eqArr, _outStream);
            }
            else if ((*iter)->has_f())
            {
                (*iter)->toXml(f, _outStream);
            }
            else if ((*iter)->has_func())
            {
                (*iter)->toXml(func, _outStream);
            }
            else if ((*iter)->has_groupChr())
            {
                (*iter)->toXml(groupChr, _outStream);
            }
            else if ((*iter)->has_limLow())
            {
                (*iter)->toXml(limLow, _outStream);
            }
            else if ((*iter)->has_limUpp())
            {
                (*iter)->toXml(limUpp, _outStream);
            }
            else if ((*iter)->has_m())
            {
                (*iter)->toXml(m, _outStream);
            }
            else if ((*iter)->has_nary())
            {
                (*iter)->toXml(nary, _outStream);
            }
            else if ((*iter)->has_phant())
            {
                (*iter)->toXml(phant, _outStream);
            }
            else if ((*iter)->has_rad())
            {
                (*iter)->toXml(rad, _outStream);
            }
            else if ((*iter)->has_sPre())
            {
                (*iter)->toXml(sPre, _outStream);
            }
            else if ((*iter)->has_sSub())
            {
                (*iter)->toXml(sSub, _outStream);
            }
            else if ((*iter)->has_sSubSup())
            {
                (*iter)->toXml(sSubSup, _outStream);
            }
            else if ((*iter)->has_sSup())
            {
                (*iter)->toXml(sSup, _outStream);
            }
            else if ((*iter)->has_r())
            {
                (*iter)->toXml(r, _outStream);
            }
            else if ((*iter)->has_customXml())
            {
                (*iter)->toXml(customXml, _outStream);
            }
            else if ((*iter)->has_fldSimple())
            {
                (*iter)->toXml(fldSimple, _outStream);
            }
            else if ((*iter)->has_hyperlink())
            {
                (*iter)->toXml(hyperlink, _outStream);
            }
            else if ((*iter)->has_smartTag())
            {
                (*iter)->toXml(smartTag, _outStream);
            }
            else if ((*iter)->has_sdt())
            {
                (*iter)->toXml(sdt, _outStream);
            }
            else if ((*iter)->has_proofErr())
            {
                (*iter)->toXml(proofErr, _outStream);
            }
            else if ((*iter)->has_permStart())
            {
                (*iter)->toXml(permStart, _outStream);
            }
            else if ((*iter)->has_permEnd())
            {
                (*iter)->toXml(permEnd, _outStream);
            }
            else if ((*iter)->has_bookmarkStart())
            {
                (*iter)->toXml(bookmarkStart, _outStream);
            }
            else if ((*iter)->has_bookmarkEnd())
            {
                (*iter)->toXml(bookmarkEnd, _outStream);
            }
            else if ((*iter)->has_moveFromRangeStart())
            {
                (*iter)->toXml(moveFromRangeStart, _outStream);
            }
            else if ((*iter)->has_moveFromRangeEnd())
            {
                (*iter)->toXml(moveFromRangeEnd, _outStream);
            }
            else if ((*iter)->has_moveToRangeStart())
            {
                (*iter)->toXml(moveToRangeStart, _outStream);
            }
            else if ((*iter)->has_moveToRangeEnd())
            {
                (*iter)->toXml(moveToRangeEnd, _outStream);
            }
            else if ((*iter)->has_commentRangeStart())
            {
                (*iter)->toXml(commentRangeStart, _outStream);
            }
            else if ((*iter)->has_commentRangeEnd())
            {
                (*iter)->toXml(commentRangeEnd, _outStream);
            }
            else if ((*iter)->has_customXmlInsRangeStart())
            {
                (*iter)->toXml(customXmlInsRangeStart, _outStream);
            }
            else if ((*iter)->has_customXmlInsRangeEnd())
            {
                (*iter)->toXml(customXmlInsRangeEnd, _outStream);
            }
            else if ((*iter)->has_customXmlDelRangeStart())
            {
                (*iter)->toXml(customXmlDelRangeStart, _outStream);
            }
            else if ((*iter)->has_customXmlDelRangeEnd())
            {
                (*iter)->toXml(customXmlDelRangeEnd, _outStream);
            }
            else if ((*iter)->has_customXmlMoveFromRangeStart())
            {
                (*iter)->toXml(customXmlMoveFromRangeStart, _outStream);
            }
            else if ((*iter)->has_customXmlMoveFromRangeEnd())
            {
                (*iter)->toXml(customXmlMoveFromRangeEnd, _outStream);
            }
            else if ((*iter)->has_customXmlMoveToRangeStart())
            {
                (*iter)->toXml(customXmlMoveToRangeStart, _outStream);
            }
            else if ((*iter)->has_customXmlMoveToRangeEnd())
            {
                (*iter)->toXml(customXmlMoveToRangeEnd, _outStream);
            }
            else if ((*iter)->has_ins())
            {
                (*iter)->toXml(ins, _outStream);
            }
            else if ((*iter)->has_del())
            {
                (*iter)->toXml(del, _outStream);
            }
            else if ((*iter)->has_moveFrom())
            {
                (*iter)->toXml(moveFrom, _outStream);
            }
            else if ((*iter)->has_moveTo())
            {
                (*iter)->toXml(moveTo, _outStream);
            }
            else if ((*iter)->has_oMathPara())
            {
                (*iter)->toXml(oMathPara, _outStream);
            }
            else if ((*iter)->has_oMath())
            {
                (*iter)->toXml(oMath, _outStream);
            }
        } 
                if (m_has_ctrlPr)
                {
                    m_ctrlPr->toXml(ctrlPr, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_OMathArg& default_instance(){

    if (!CT_OMathArg::default_instance_)
    {
        CT_OMathArg::default_instance_ = new CT_OMathArg();
    }
    return *CT_OMathArg::default_instance_;

        }

    private:
        bool m_has_argPr ;
        CT_OMathArgPr* m_argPr ;
        vector<ChildGroup_1*> m_childGroupList_1 ;
        bool m_has_ctrlPr ;
        CT_CtrlPr* m_ctrlPr ;
        static CT_OMathArg* default_instance_ ;
        class ChildGroup_1{
        public:
            bool has_acc(){

            return m_has_acc;
        
            }
            CT_Acc* mutable_acc(){

                
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_acc = true;
                if (!m_acc)
                {
                    m_acc = new CT_Acc();
                }
                return m_acc;
            
            }
            const CT_Acc& acc(){

            if (m_acc)
            {
                return *m_acc;
            }
            return CT_Acc::default_instance();
        
            }
            bool has_bar(){

            return m_has_bar;
        
            }
            CT_Bar* mutable_bar(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_bar = true;
                if (!m_bar)
                {
                    m_bar = new CT_Bar();
                }
                return m_bar;
            
            }
            const CT_Bar& bar(){

            if (m_bar)
            {
                return *m_bar;
            }
            return CT_Bar::default_instance();
        
            }
            bool has_box(){

            return m_has_box;
        
            }
            CT_Box* mutable_box(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_box = true;
                if (!m_box)
                {
                    m_box = new CT_Box();
                }
                return m_box;
            
            }
            const CT_Box& box(){

            if (m_box)
            {
                return *m_box;
            }
            return CT_Box::default_instance();
        
            }
            bool has_borderBox(){

            return m_has_borderBox;
        
            }
            CT_BorderBox* mutable_borderBox(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_borderBox = true;
                if (!m_borderBox)
                {
                    m_borderBox = new CT_BorderBox();
                }
                return m_borderBox;
            
            }
            const CT_BorderBox& borderBox(){

            if (m_borderBox)
            {
                return *m_borderBox;
            }
            return CT_BorderBox::default_instance();
        
            }
            bool has_d(){

            return m_has_d;
        
            }
            CT_D* mutable_d(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_d = true;
                if (!m_d)
                {
                    m_d = new CT_D();
                }
                return m_d;
            
            }
            const CT_D& d(){

            if (m_d)
            {
                return *m_d;
            }
            return CT_D::default_instance();
        
            }
            bool has_eqArr(){

            return m_has_eqArr;
        
            }
            CT_EqArr* mutable_eqArr(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_eqArr = true;
                if (!m_eqArr)
                {
                    m_eqArr = new CT_EqArr();
                }
                return m_eqArr;
            
            }
            const CT_EqArr& eqArr(){

            if (m_eqArr)
            {
                return *m_eqArr;
            }
            return CT_EqArr::default_instance();
        
            }
            bool has_f(){

            return m_has_f;
        
            }
            CT_F* mutable_f(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_f = true;
                if (!m_f)
                {
                    m_f = new CT_F();
                }
                return m_f;
            
            }
            const CT_F& f(){

            if (m_f)
            {
                return *m_f;
            }
            return CT_F::default_instance();
        
            }
            bool has_func(){

            return m_has_func;
        
            }
            CT_Func* mutable_func(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_func = true;
                if (!m_func)
                {
                    m_func = new CT_Func();
                }
                return m_func;
            
            }
            const CT_Func& func(){

            if (m_func)
            {
                return *m_func;
            }
            return CT_Func::default_instance();
        
            }
            bool has_groupChr(){

            return m_has_groupChr;
        
            }
            CT_GroupChr* mutable_groupChr(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_groupChr = true;
                if (!m_groupChr)
                {
                    m_groupChr = new CT_GroupChr();
                }
                return m_groupChr;
            
            }
            const CT_GroupChr& groupChr(){

            if (m_groupChr)
            {
                return *m_groupChr;
            }
            return CT_GroupChr::default_instance();
        
            }
            bool has_limLow(){

            return m_has_limLow;
        
            }
            CT_LimLow* mutable_limLow(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_limLow = true;
                if (!m_limLow)
                {
                    m_limLow = new CT_LimLow();
                }
                return m_limLow;
            
            }
            const CT_LimLow& limLow(){

            if (m_limLow)
            {
                return *m_limLow;
            }
            return CT_LimLow::default_instance();
        
            }
            bool has_limUpp(){

            return m_has_limUpp;
        
            }
            CT_LimUpp* mutable_limUpp(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_limUpp = true;
                if (!m_limUpp)
                {
                    m_limUpp = new CT_LimUpp();
                }
                return m_limUpp;
            
            }
            const CT_LimUpp& limUpp(){

            if (m_limUpp)
            {
                return *m_limUpp;
            }
            return CT_LimUpp::default_instance();
        
            }
            bool has_m(){

            return m_has_m;
        
            }
            CT_M* mutable_m(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_m = true;
                if (!m_m)
                {
                    m_m = new CT_M();
                }
                return m_m;
            
            }
            const CT_M& m(){

            if (m_m)
            {
                return *m_m;
            }
            return CT_M::default_instance();
        
            }
            bool has_nary(){

            return m_has_nary;
        
            }
            CT_Nary* mutable_nary(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_nary = true;
                if (!m_nary)
                {
                    m_nary = new CT_Nary();
                }
                return m_nary;
            
            }
            const CT_Nary& nary(){

            if (m_nary)
            {
                return *m_nary;
            }
            return CT_Nary::default_instance();
        
            }
            bool has_phant(){

            return m_has_phant;
        
            }
            CT_Phant* mutable_phant(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_phant = true;
                if (!m_phant)
                {
                    m_phant = new CT_Phant();
                }
                return m_phant;
            
            }
            const CT_Phant& phant(){

            if (m_phant)
            {
                return *m_phant;
            }
            return CT_Phant::default_instance();
        
            }
            bool has_rad(){

            return m_has_rad;
        
            }
            CT_Rad* mutable_rad(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_rad = true;
                if (!m_rad)
                {
                    m_rad = new CT_Rad();
                }
                return m_rad;
            
            }
            const CT_Rad& rad(){

            if (m_rad)
            {
                return *m_rad;
            }
            return CT_Rad::default_instance();
        
            }
            bool has_sPre(){

            return m_has_sPre;
        
            }
            CT_SPre* mutable_sPre(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_sPre = true;
                if (!m_sPre)
                {
                    m_sPre = new CT_SPre();
                }
                return m_sPre;
            
            }
            const CT_SPre& sPre(){

            if (m_sPre)
            {
                return *m_sPre;
            }
            return CT_SPre::default_instance();
        
            }
            bool has_sSub(){

            return m_has_sSub;
        
            }
            CT_SSub* mutable_sSub(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_sSub = true;
                if (!m_sSub)
                {
                    m_sSub = new CT_SSub();
                }
                return m_sSub;
            
            }
            const CT_SSub& sSub(){

            if (m_sSub)
            {
                return *m_sSub;
            }
            return CT_SSub::default_instance();
        
            }
            bool has_sSubSup(){

            return m_has_sSubSup;
        
            }
            CT_SSubSup* mutable_sSubSup(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_sSubSup = true;
                if (!m_sSubSup)
                {
                    m_sSubSup = new CT_SSubSup();
                }
                return m_sSubSup;
            
            }
            const CT_SSubSup& sSubSup(){

            if (m_sSubSup)
            {
                return *m_sSubSup;
            }
            return CT_SSubSup::default_instance();
        
            }
            bool has_sSup(){

            return m_has_sSup;
        
            }
            CT_SSup* mutable_sSup(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_sSup = true;
                if (!m_sSup)
                {
                    m_sSup = new CT_SSup();
                }
                return m_sSup;
            
            }
            const CT_SSup& sSup(){

            if (m_sSup)
            {
                return *m_sSup;
            }
            return CT_SSup::default_instance();
        
            }
            bool has_r(){

            return m_has_r;
        
            }
            CT_R* mutable_r(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_r = true;
                if (!m_r)
                {
                    m_r = new CT_R();
                }
                return m_r;
            
            }
            const CT_R& r(){

            if (m_r)
            {
                return *m_r;
            }
            return CT_R::default_instance();
        
            }
            bool has_customXml(){

            return m_has_customXml;
        
            }
            CT_CustomXmlRun* mutable_customXml(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_customXml = true;
                if (!m_customXml)
                {
                    m_customXml = new CT_CustomXmlRun();
                }
                return m_customXml;
            
            }
            const CT_CustomXmlRun& customXml(){

            if (m_customXml)
            {
                return *m_customXml;
            }
            return CT_CustomXmlRun::default_instance();
        
            }
            bool has_fldSimple(){

            return m_has_fldSimple;
        
            }
            CT_SimpleField* mutable_fldSimple(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_fldSimple = true;
                if (!m_fldSimple)
                {
                    m_fldSimple = new CT_SimpleField();
                }
                return m_fldSimple;
            
            }
            const CT_SimpleField& fldSimple(){

            if (m_fldSimple)
            {
                return *m_fldSimple;
            }
            return CT_SimpleField::default_instance();
        
            }
            bool has_hyperlink(){

            return m_has_hyperlink;
        
            }
            CT_Hyperlink* mutable_hyperlink(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_hyperlink = true;
                if (!m_hyperlink)
                {
                    m_hyperlink = new CT_Hyperlink();
                }
                return m_hyperlink;
            
            }
            const CT_Hyperlink& hyperlink(){

            if (m_hyperlink)
            {
                return *m_hyperlink;
            }
            return CT_Hyperlink::default_instance();
        
            }
            bool has_smartTag(){

            return m_has_smartTag;
        
            }
            CT_SmartTagRun* mutable_smartTag(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_smartTag = true;
                if (!m_smartTag)
                {
                    m_smartTag = new CT_SmartTagRun();
                }
                return m_smartTag;
            
            }
            const CT_SmartTagRun& smartTag(){

            if (m_smartTag)
            {
                return *m_smartTag;
            }
            return CT_SmartTagRun::default_instance();
        
            }
            bool has_sdt(){

            return m_has_sdt;
        
            }
            CT_SdtRun* mutable_sdt(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_sdt = true;
                if (!m_sdt)
                {
                    m_sdt = new CT_SdtRun();
                }
                return m_sdt;
            
            }
            const CT_SdtRun& sdt(){

            if (m_sdt)
            {
                return *m_sdt;
            }
            return CT_SdtRun::default_instance();
        
            }
            bool has_proofErr(){

            return m_has_proofErr;
        
            }
            CT_ProofErr* mutable_proofErr(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_proofErr = true;
                if (!m_proofErr)
                {
                    m_proofErr = new CT_ProofErr();
                }
                return m_proofErr;
            
            }
            const CT_ProofErr& proofErr(){

            if (m_proofErr)
            {
                return *m_proofErr;
            }
            return CT_ProofErr::default_instance();
        
            }
            bool has_permStart(){

            return m_has_permStart;
        
            }
            CT_PermStart* mutable_permStart(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_permStart = true;
                if (!m_permStart)
                {
                    m_permStart = new CT_PermStart();
                }
                return m_permStart;
            
            }
            const CT_PermStart& permStart(){

            if (m_permStart)
            {
                return *m_permStart;
            }
            return CT_PermStart::default_instance();
        
            }
            bool has_permEnd(){

            return m_has_permEnd;
        
            }
            CT_Perm* mutable_permEnd(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_permEnd = true;
                if (!m_permEnd)
                {
                    m_permEnd = new CT_Perm();
                }
                return m_permEnd;
            
            }
            const CT_Perm& permEnd(){

            if (m_permEnd)
            {
                return *m_permEnd;
            }
            return CT_Perm::default_instance();
        
            }
            bool has_bookmarkStart(){

            return m_has_bookmarkStart;
        
            }
            CT_Bookmark* mutable_bookmarkStart(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_bookmarkStart = true;
                if (!m_bookmarkStart)
                {
                    m_bookmarkStart = new CT_Bookmark();
                }
                return m_bookmarkStart;
            
            }
            const CT_Bookmark& bookmarkStart(){

            if (m_bookmarkStart)
            {
                return *m_bookmarkStart;
            }
            return CT_Bookmark::default_instance();
        
            }
            bool has_bookmarkEnd(){

            return m_has_bookmarkEnd;
        
            }
            CT_MarkupRange* mutable_bookmarkEnd(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_bookmarkEnd = true;
                if (!m_bookmarkEnd)
                {
                    m_bookmarkEnd = new CT_MarkupRange();
                }
                return m_bookmarkEnd;
            
            }
            const CT_MarkupRange& bookmarkEnd(){

            if (m_bookmarkEnd)
            {
                return *m_bookmarkEnd;
            }
            return CT_MarkupRange::default_instance();
        
            }
            bool has_moveFromRangeStart(){

            return m_has_moveFromRangeStart;
        
            }
            CT_MoveBookmark* mutable_moveFromRangeStart(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = true;
                if (!m_moveFromRangeStart)
                {
                    m_moveFromRangeStart = new CT_MoveBookmark();
                }
                return m_moveFromRangeStart;
            
            }
            const CT_MoveBookmark& moveFromRangeStart(){

            if (m_moveFromRangeStart)
            {
                return *m_moveFromRangeStart;
            }
            return CT_MoveBookmark::default_instance();
        
            }
            bool has_moveFromRangeEnd(){

            return m_has_moveFromRangeEnd;
        
            }
            CT_MarkupRange* mutable_moveFromRangeEnd(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = true;
                if (!m_moveFromRangeEnd)
                {
                    m_moveFromRangeEnd = new CT_MarkupRange();
                }
                return m_moveFromRangeEnd;
            
            }
            const CT_MarkupRange& moveFromRangeEnd(){

            if (m_moveFromRangeEnd)
            {
                return *m_moveFromRangeEnd;
            }
            return CT_MarkupRange::default_instance();
        
            }
            bool has_moveToRangeStart(){

            return m_has_moveToRangeStart;
        
            }
            CT_MoveBookmark* mutable_moveToRangeStart(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_moveToRangeStart = true;
                if (!m_moveToRangeStart)
                {
                    m_moveToRangeStart = new CT_MoveBookmark();
                }
                return m_moveToRangeStart;
            
            }
            const CT_MoveBookmark& moveToRangeStart(){

            if (m_moveToRangeStart)
            {
                return *m_moveToRangeStart;
            }
            return CT_MoveBookmark::default_instance();
        
            }
            bool has_moveToRangeEnd(){

            return m_has_moveToRangeEnd;
        
            }
            CT_MarkupRange* mutable_moveToRangeEnd(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = true;
                if (!m_moveToRangeEnd)
                {
                    m_moveToRangeEnd = new CT_MarkupRange();
                }
                return m_moveToRangeEnd;
            
            }
            const CT_MarkupRange& moveToRangeEnd(){

            if (m_moveToRangeEnd)
            {
                return *m_moveToRangeEnd;
            }
            return CT_MarkupRange::default_instance();
        
            }
            bool has_commentRangeStart(){

            return m_has_commentRangeStart;
        
            }
            CT_MarkupRange* mutable_commentRangeStart(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_commentRangeStart = true;
                if (!m_commentRangeStart)
                {
                    m_commentRangeStart = new CT_MarkupRange();
                }
                return m_commentRangeStart;
            
            }
            const CT_MarkupRange& commentRangeStart(){

            if (m_commentRangeStart)
            {
                return *m_commentRangeStart;
            }
            return CT_MarkupRange::default_instance();
        
            }
            bool has_commentRangeEnd(){

            return m_has_commentRangeEnd;
        
            }
            CT_MarkupRange* mutable_commentRangeEnd(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_commentRangeEnd = true;
                if (!m_commentRangeEnd)
                {
                    m_commentRangeEnd = new CT_MarkupRange();
                }
                return m_commentRangeEnd;
            
            }
            const CT_MarkupRange& commentRangeEnd(){

            if (m_commentRangeEnd)
            {
                return *m_commentRangeEnd;
            }
            return CT_MarkupRange::default_instance();
        
            }
            bool has_customXmlInsRangeStart(){

            return m_has_customXmlInsRangeStart;
        
            }
            CT_TrackChange* mutable_customXmlInsRangeStart(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = true;
                if (!m_customXmlInsRangeStart)
                {
                    m_customXmlInsRangeStart = new CT_TrackChange();
                }
                return m_customXmlInsRangeStart;
            
            }
            const CT_TrackChange& customXmlInsRangeStart(){

            if (m_customXmlInsRangeStart)
            {
                return *m_customXmlInsRangeStart;
            }
            return CT_TrackChange::default_instance();
        
            }
            bool has_customXmlInsRangeEnd(){

            return m_has_customXmlInsRangeEnd;
        
            }
            CT_Markup* mutable_customXmlInsRangeEnd(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = true;
                if (!m_customXmlInsRangeEnd)
                {
                    m_customXmlInsRangeEnd = new CT_Markup();
                }
                return m_customXmlInsRangeEnd;
            
            }
            const CT_Markup& customXmlInsRangeEnd(){

            if (m_customXmlInsRangeEnd)
            {
                return *m_customXmlInsRangeEnd;
            }
            return CT_Markup::default_instance();
        
            }
            bool has_customXmlDelRangeStart(){

            return m_has_customXmlDelRangeStart;
        
            }
            CT_TrackChange* mutable_customXmlDelRangeStart(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = true;
                if (!m_customXmlDelRangeStart)
                {
                    m_customXmlDelRangeStart = new CT_TrackChange();
                }
                return m_customXmlDelRangeStart;
            
            }
            const CT_TrackChange& customXmlDelRangeStart(){

            if (m_customXmlDelRangeStart)
            {
                return *m_customXmlDelRangeStart;
            }
            return CT_TrackChange::default_instance();
        
            }
            bool has_customXmlDelRangeEnd(){

            return m_has_customXmlDelRangeEnd;
        
            }
            CT_Markup* mutable_customXmlDelRangeEnd(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = true;
                if (!m_customXmlDelRangeEnd)
                {
                    m_customXmlDelRangeEnd = new CT_Markup();
                }
                return m_customXmlDelRangeEnd;
            
            }
            const CT_Markup& customXmlDelRangeEnd(){

            if (m_customXmlDelRangeEnd)
            {
                return *m_customXmlDelRangeEnd;
            }
            return CT_Markup::default_instance();
        
            }
            bool has_customXmlMoveFromRangeStart(){

            return m_has_customXmlMoveFromRangeStart;
        
            }
            CT_TrackChange* mutable_customXmlMoveFromRangeStart(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = true;
                if (!m_customXmlMoveFromRangeStart)
                {
                    m_customXmlMoveFromRangeStart = new CT_TrackChange();
                }
                return m_customXmlMoveFromRangeStart;
            
            }
            const CT_TrackChange& customXmlMoveFromRangeStart(){

            if (m_customXmlMoveFromRangeStart)
            {
                return *m_customXmlMoveFromRangeStart;
            }
            return CT_TrackChange::default_instance();
        
            }
            bool has_customXmlMoveFromRangeEnd(){

            return m_has_customXmlMoveFromRangeEnd;
        
            }
            CT_Markup* mutable_customXmlMoveFromRangeEnd(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = true;
                if (!m_customXmlMoveFromRangeEnd)
                {
                    m_customXmlMoveFromRangeEnd = new CT_Markup();
                }
                return m_customXmlMoveFromRangeEnd;
            
            }
            const CT_Markup& customXmlMoveFromRangeEnd(){

            if (m_customXmlMoveFromRangeEnd)
            {
                return *m_customXmlMoveFromRangeEnd;
            }
            return CT_Markup::default_instance();
        
            }
            bool has_customXmlMoveToRangeStart(){

            return m_has_customXmlMoveToRangeStart;
        
            }
            CT_TrackChange* mutable_customXmlMoveToRangeStart(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = true;
                if (!m_customXmlMoveToRangeStart)
                {
                    m_customXmlMoveToRangeStart = new CT_TrackChange();
                }
                return m_customXmlMoveToRangeStart;
            
            }
            const CT_TrackChange& customXmlMoveToRangeStart(){

            if (m_customXmlMoveToRangeStart)
            {
                return *m_customXmlMoveToRangeStart;
            }
            return CT_TrackChange::default_instance();
        
            }
            bool has_customXmlMoveToRangeEnd(){

            return m_has_customXmlMoveToRangeEnd;
        
            }
            CT_Markup* mutable_customXmlMoveToRangeEnd(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = true;
                if (!m_customXmlMoveToRangeEnd)
                {
                    m_customXmlMoveToRangeEnd = new CT_Markup();
                }
                return m_customXmlMoveToRangeEnd;
            
            }
            const CT_Markup& customXmlMoveToRangeEnd(){

            if (m_customXmlMoveToRangeEnd)
            {
                return *m_customXmlMoveToRangeEnd;
            }
            return CT_Markup::default_instance();
        
            }
            bool has_ins(){

            return m_has_ins;
        
            }
            CT_RunTrackChange* mutable_ins(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_ins = true;
                if (!m_ins)
                {
                    m_ins = new CT_RunTrackChange();
                }
                return m_ins;
            
            }
            const CT_RunTrackChange& ins(){

            if (m_ins)
            {
                return *m_ins;
            }
            return CT_RunTrackChange::default_instance();
        
            }
            bool has_del(){

            return m_has_del;
        
            }
            CT_RunTrackChange* mutable_del(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_del = true;
                if (!m_del)
                {
                    m_del = new CT_RunTrackChange();
                }
                return m_del;
            
            }
            const CT_RunTrackChange& del(){

            if (m_del)
            {
                return *m_del;
            }
            return CT_RunTrackChange::default_instance();
        
            }
            bool has_moveFrom(){

            return m_has_moveFrom;
        
            }
            CT_RunTrackChange* mutable_moveFrom(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_moveFrom = true;
                if (!m_moveFrom)
                {
                    m_moveFrom = new CT_RunTrackChange();
                }
                return m_moveFrom;
            
            }
            const CT_RunTrackChange& moveFrom(){

            if (m_moveFrom)
            {
                return *m_moveFrom;
            }
            return CT_RunTrackChange::default_instance();
        
            }
            bool has_moveTo(){

            return m_has_moveTo;
        
            }
            CT_RunTrackChange* mutable_moveTo(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_moveTo = true;
                if (!m_moveTo)
                {
                    m_moveTo = new CT_RunTrackChange();
                }
                return m_moveTo;
            
            }
            const CT_RunTrackChange& moveTo(){

            if (m_moveTo)
            {
                return *m_moveTo;
            }
            return CT_RunTrackChange::default_instance();
        
            }
            bool has_oMathPara(){

            return m_has_oMathPara;
        
            }
            CT_OMathPara* mutable_oMathPara(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_oMathPara = true;
                if (!m_oMathPara)
                {
                    m_oMathPara = new CT_OMathPara();
                }
                return m_oMathPara;
            
            }
            const CT_OMathPara& oMathPara(){

            if (m_oMathPara)
            {
                return *m_oMathPara;
            }
            return CT_OMathPara::default_instance();
        
            }
            bool has_oMath(){

            return m_has_oMath;
        
            }
            CT_OMath* mutable_oMath(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = true;
                if (!m_oMath)
                {
                    m_oMath = new CT_OMath();
                }
                return m_oMath;
            
            }
            const CT_OMath& oMath(){

            if (m_oMath)
            {
                return *m_oMath;
            }
            return CT_OMath::default_instance();
        
            }

        private:
            bool m_has_acc ;
            CT_Acc* m_acc ;
            bool m_has_bar ;
            CT_Bar* m_bar ;
            bool m_has_box ;
            CT_Box* m_box ;
            bool m_has_borderBox ;
            CT_BorderBox* m_borderBox ;
            bool m_has_d ;
            CT_D* m_d ;
            bool m_has_eqArr ;
            CT_EqArr* m_eqArr ;
            bool m_has_f ;
            CT_F* m_f ;
            bool m_has_func ;
            CT_Func* m_func ;
            bool m_has_groupChr ;
            CT_GroupChr* m_groupChr ;
            bool m_has_limLow ;
            CT_LimLow* m_limLow ;
            bool m_has_limUpp ;
            CT_LimUpp* m_limUpp ;
            bool m_has_m ;
            CT_M* m_m ;
            bool m_has_nary ;
            CT_Nary* m_nary ;
            bool m_has_phant ;
            CT_Phant* m_phant ;
            bool m_has_rad ;
            CT_Rad* m_rad ;
            bool m_has_sPre ;
            CT_SPre* m_sPre ;
            bool m_has_sSub ;
            CT_SSub* m_sSub ;
            bool m_has_sSubSup ;
            CT_SSubSup* m_sSubSup ;
            bool m_has_sSup ;
            CT_SSup* m_sSup ;
            bool m_has_r ;
            CT_R* m_r ;
            bool m_has_customXml ;
            CT_CustomXmlRun* m_customXml ;
            bool m_has_fldSimple ;
            CT_SimpleField* m_fldSimple ;
            bool m_has_hyperlink ;
            CT_Hyperlink* m_hyperlink ;
            bool m_has_smartTag ;
            CT_SmartTagRun* m_smartTag ;
            bool m_has_sdt ;
            CT_SdtRun* m_sdt ;
            bool m_has_proofErr ;
            CT_ProofErr* m_proofErr ;
            bool m_has_permStart ;
            CT_PermStart* m_permStart ;
            bool m_has_permEnd ;
            CT_Perm* m_permEnd ;
            bool m_has_bookmarkStart ;
            CT_Bookmark* m_bookmarkStart ;
            bool m_has_bookmarkEnd ;
            CT_MarkupRange* m_bookmarkEnd ;
            bool m_has_moveFromRangeStart ;
            CT_MoveBookmark* m_moveFromRangeStart ;
            bool m_has_moveFromRangeEnd ;
            CT_MarkupRange* m_moveFromRangeEnd ;
            bool m_has_moveToRangeStart ;
            CT_MoveBookmark* m_moveToRangeStart ;
            bool m_has_moveToRangeEnd ;
            CT_MarkupRange* m_moveToRangeEnd ;
            bool m_has_commentRangeStart ;
            CT_MarkupRange* m_commentRangeStart ;
            bool m_has_commentRangeEnd ;
            CT_MarkupRange* m_commentRangeEnd ;
            bool m_has_customXmlInsRangeStart ;
            CT_TrackChange* m_customXmlInsRangeStart ;
            bool m_has_customXmlInsRangeEnd ;
            CT_Markup* m_customXmlInsRangeEnd ;
            bool m_has_customXmlDelRangeStart ;
            CT_TrackChange* m_customXmlDelRangeStart ;
            bool m_has_customXmlDelRangeEnd ;
            CT_Markup* m_customXmlDelRangeEnd ;
            bool m_has_customXmlMoveFromRangeStart ;
            CT_TrackChange* m_customXmlMoveFromRangeStart ;
            bool m_has_customXmlMoveFromRangeEnd ;
            CT_Markup* m_customXmlMoveFromRangeEnd ;
            bool m_has_customXmlMoveToRangeStart ;
            CT_TrackChange* m_customXmlMoveToRangeStart ;
            bool m_has_customXmlMoveToRangeEnd ;
            CT_Markup* m_customXmlMoveToRangeEnd ;
            bool m_has_ins ;
            CT_RunTrackChange* m_ins ;
            bool m_has_del ;
            CT_RunTrackChange* m_del ;
            bool m_has_moveFrom ;
            CT_RunTrackChange* m_moveFrom ;
            bool m_has_moveTo ;
            CT_RunTrackChange* m_moveTo ;
            bool m_has_oMathPara ;
            CT_OMathPara* m_oMathPara ;
            bool m_has_oMath ;
            CT_OMath* m_oMath ;

        }


    }

    class CT_OMathJc : public XSD::ComplexType{
    public:
        void clear(){

                m_has_val_attr = false;
                
        if (m_val_attr)
        {
            delete m_val_attr;
            m_val_attr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    m_val_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_OMathJc& default_instance(){

    if (!CT_OMathJc::default_instance_)
    {
        CT_OMathJc::default_instance_ = new CT_OMathJc();
    }
    return *CT_OMathJc::default_instance_;

        }
        bool has_val_attr(){

            return m_has_val_attr;
        
        }
        void set_val_attr(const ST_Jc& _val_attr ){

            m_has_val_attr = true;
            m_val_attr = new ST_Jc(_val_attr);
        
        }
        const ST_Jc& val_attr(){

            if (m_val_attr)
            {
                return *m_val_attr;
            }
            return ST_Jc::default_instance();
        
        }

    private:
        static CT_OMathJc* default_instance_ ;
        bool m_has_val_attr ;
        ST_Jc* m_val_attr ;

    }

    class CT_OMathParaPr : public XSD::ComplexType{
    public:
        bool has_jc(){

            return m_has_jc;
        
        }
        CT_OMathJc* mutable_jc(){

                m_has_jc = true;
                if (!m_jc)
                {
                    m_jc = new CT_OMathJc();
                }
                return m_jc;
            
        }
        const CT_OMathJc& jc(){

            if (m_jc)
            {
                return *m_jc;
            }
            return CT_OMathJc::default_instance();
        
        }
        void clear(){

                m_has_jc = false;
                
        if (m_jc)
        {
            delete m_jc;
            m_jc = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_jc)
                {
                    m_jc->toXml(jc, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_OMathParaPr& default_instance(){

    if (!CT_OMathParaPr::default_instance_)
    {
        CT_OMathParaPr::default_instance_ = new CT_OMathParaPr();
    }
    return *CT_OMathParaPr::default_instance_;

        }

    private:
        bool m_has_jc ;
        CT_OMathJc* m_jc ;
        static CT_OMathParaPr* default_instance_ ;

    }

    class CT_TwipsMeasure : public XSD::ComplexType{
    public:
        void clear(){

                m_has_val_attr = false;
                
        if (m_val_attr)
        {
            delete m_val_attr;
            m_val_attr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    m_val_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_TwipsMeasure& default_instance(){

    if (!CT_TwipsMeasure::default_instance_)
    {
        CT_TwipsMeasure::default_instance_ = new CT_TwipsMeasure();
    }
    return *CT_TwipsMeasure::default_instance_;

        }
        bool has_val_attr(){

            return m_has_val_attr;
        
        }
        void set_val_attr(const ns_s::ST_TwipsMeasure& _val_attr ){

            m_has_val_attr = true;
            m_val_attr = new ns_s::ST_TwipsMeasure(_val_attr);
        
        }
        const ns_s::ST_TwipsMeasure& val_attr(){

            if (m_val_attr)
            {
                return *m_val_attr;
            }
            return ns_s::ST_TwipsMeasure::default_instance();
        
        }

    private:
        static CT_TwipsMeasure* default_instance_ ;
        bool m_has_val_attr ;
        ns_s::ST_TwipsMeasure* m_val_attr ;

    }

    class CT_BreakBin : public XSD::ComplexType{
    public:
        void clear(){

                m_has_val_attr = false;
                
        if (m_val_attr)
        {
            delete m_val_attr;
            m_val_attr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    m_val_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_BreakBin& default_instance(){

    if (!CT_BreakBin::default_instance_)
    {
        CT_BreakBin::default_instance_ = new CT_BreakBin();
    }
    return *CT_BreakBin::default_instance_;

        }
        bool has_val_attr(){

            return m_has_val_attr;
        
        }
        void set_val_attr(const ST_BreakBin& _val_attr ){

            m_has_val_attr = true;
            m_val_attr = new ST_BreakBin(_val_attr);
        
        }
        const ST_BreakBin& val_attr(){

            if (m_val_attr)
            {
                return *m_val_attr;
            }
            return ST_BreakBin::default_instance();
        
        }

    private:
        static CT_BreakBin* default_instance_ ;
        bool m_has_val_attr ;
        ST_BreakBin* m_val_attr ;

    }

    class CT_BreakBinSub : public XSD::ComplexType{
    public:
        void clear(){

                m_has_val_attr = false;
                
        if (m_val_attr)
        {
            delete m_val_attr;
            m_val_attr = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    m_val_attr->toXml(_attrName, _outStream);
        _outStream << \>\;
    
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_BreakBinSub& default_instance(){

    if (!CT_BreakBinSub::default_instance_)
    {
        CT_BreakBinSub::default_instance_ = new CT_BreakBinSub();
    }
    return *CT_BreakBinSub::default_instance_;

        }
        bool has_val_attr(){

            return m_has_val_attr;
        
        }
        void set_val_attr(const ST_BreakBinSub& _val_attr ){

            m_has_val_attr = true;
            m_val_attr = new ST_BreakBinSub(_val_attr);
        
        }
        const ST_BreakBinSub& val_attr(){

            if (m_val_attr)
            {
                return *m_val_attr;
            }
            return ST_BreakBinSub::default_instance();
        
        }

    private:
        static CT_BreakBinSub* default_instance_ ;
        bool m_has_val_attr ;
        ST_BreakBinSub* m_val_attr ;

    }

    class CT_MathPr : public XSD::ComplexType{
    public:
        bool has_mathFont(){

            return m_has_mathFont;
        
        }
        CT_String* mutable_mathFont(){

                m_has_mathFont = true;
                if (!m_mathFont)
                {
                    m_mathFont = new CT_String();
                }
                return m_mathFont;
            
        }
        const CT_String& mathFont(){

            if (m_mathFont)
            {
                return *m_mathFont;
            }
            return CT_String::default_instance();
        
        }
        bool has_brkBin(){

            return m_has_brkBin;
        
        }
        CT_BreakBin* mutable_brkBin(){

                m_has_brkBin = true;
                if (!m_brkBin)
                {
                    m_brkBin = new CT_BreakBin();
                }
                return m_brkBin;
            
        }
        const CT_BreakBin& brkBin(){

            if (m_brkBin)
            {
                return *m_brkBin;
            }
            return CT_BreakBin::default_instance();
        
        }
        bool has_brkBinSub(){

            return m_has_brkBinSub;
        
        }
        CT_BreakBinSub* mutable_brkBinSub(){

                m_has_brkBinSub = true;
                if (!m_brkBinSub)
                {
                    m_brkBinSub = new CT_BreakBinSub();
                }
                return m_brkBinSub;
            
        }
        const CT_BreakBinSub& brkBinSub(){

            if (m_brkBinSub)
            {
                return *m_brkBinSub;
            }
            return CT_BreakBinSub::default_instance();
        
        }
        bool has_smallFrac(){

            return m_has_smallFrac;
        
        }
        CT_OnOff* mutable_smallFrac(){

                m_has_smallFrac = true;
                if (!m_smallFrac)
                {
                    m_smallFrac = new CT_OnOff();
                }
                return m_smallFrac;
            
        }
        const CT_OnOff& smallFrac(){

            if (m_smallFrac)
            {
                return *m_smallFrac;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_dispDef(){

            return m_has_dispDef;
        
        }
        CT_OnOff* mutable_dispDef(){

                m_has_dispDef = true;
                if (!m_dispDef)
                {
                    m_dispDef = new CT_OnOff();
                }
                return m_dispDef;
            
        }
        const CT_OnOff& dispDef(){

            if (m_dispDef)
            {
                return *m_dispDef;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_lMargin(){

            return m_has_lMargin;
        
        }
        CT_TwipsMeasure* mutable_lMargin(){

                m_has_lMargin = true;
                if (!m_lMargin)
                {
                    m_lMargin = new CT_TwipsMeasure();
                }
                return m_lMargin;
            
        }
        const CT_TwipsMeasure& lMargin(){

            if (m_lMargin)
            {
                return *m_lMargin;
            }
            return CT_TwipsMeasure::default_instance();
        
        }
        bool has_rMargin(){

            return m_has_rMargin;
        
        }
        CT_TwipsMeasure* mutable_rMargin(){

                m_has_rMargin = true;
                if (!m_rMargin)
                {
                    m_rMargin = new CT_TwipsMeasure();
                }
                return m_rMargin;
            
        }
        const CT_TwipsMeasure& rMargin(){

            if (m_rMargin)
            {
                return *m_rMargin;
            }
            return CT_TwipsMeasure::default_instance();
        
        }
        bool has_defJc(){

            return m_has_defJc;
        
        }
        CT_OMathJc* mutable_defJc(){

                m_has_defJc = true;
                if (!m_defJc)
                {
                    m_defJc = new CT_OMathJc();
                }
                return m_defJc;
            
        }
        const CT_OMathJc& defJc(){

            if (m_defJc)
            {
                return *m_defJc;
            }
            return CT_OMathJc::default_instance();
        
        }
        bool has_preSp(){

            return m_has_preSp;
        
        }
        CT_TwipsMeasure* mutable_preSp(){

                m_has_preSp = true;
                if (!m_preSp)
                {
                    m_preSp = new CT_TwipsMeasure();
                }
                return m_preSp;
            
        }
        const CT_TwipsMeasure& preSp(){

            if (m_preSp)
            {
                return *m_preSp;
            }
            return CT_TwipsMeasure::default_instance();
        
        }
        bool has_postSp(){

            return m_has_postSp;
        
        }
        CT_TwipsMeasure* mutable_postSp(){

                m_has_postSp = true;
                if (!m_postSp)
                {
                    m_postSp = new CT_TwipsMeasure();
                }
                return m_postSp;
            
        }
        const CT_TwipsMeasure& postSp(){

            if (m_postSp)
            {
                return *m_postSp;
            }
            return CT_TwipsMeasure::default_instance();
        
        }
        bool has_interSp(){

            return m_has_interSp;
        
        }
        CT_TwipsMeasure* mutable_interSp(){

                m_has_interSp = true;
                if (!m_interSp)
                {
                    m_interSp = new CT_TwipsMeasure();
                }
                return m_interSp;
            
        }
        const CT_TwipsMeasure& interSp(){

            if (m_interSp)
            {
                return *m_interSp;
            }
            return CT_TwipsMeasure::default_instance();
        
        }
        bool has_intraSp(){

            return m_has_intraSp;
        
        }
        CT_TwipsMeasure* mutable_intraSp(){

                m_has_intraSp = true;
                if (!m_intraSp)
                {
                    m_intraSp = new CT_TwipsMeasure();
                }
                return m_intraSp;
            
        }
        const CT_TwipsMeasure& intraSp(){

            if (m_intraSp)
            {
                return *m_intraSp;
            }
            return CT_TwipsMeasure::default_instance();
        
        }
        bool has_wrapIndent(){

            return m_has_wrapIndent;
        
        }
        CT_TwipsMeasure* mutable_wrapIndent(){

                
                m_has_wrapRight = false;
                
        if (m_wrapRight)
        {
            delete m_wrapRight;
            m_wrapRight = NULL;
        }
    ;
            
                m_has_wrapIndent = true;
                if (!m_wrapIndent)
                {
                    m_wrapIndent = new CT_TwipsMeasure();
                }
                return m_wrapIndent;
            
        }
        const CT_TwipsMeasure& wrapIndent(){

            if (m_wrapIndent)
            {
                return *m_wrapIndent;
            }
            return CT_TwipsMeasure::default_instance();
        
        }
        bool has_wrapRight(){

            return m_has_wrapRight;
        
        }
        CT_OnOff* mutable_wrapRight(){

                
                m_has_wrapIndent = false;
                
        if (m_wrapIndent)
        {
            delete m_wrapIndent;
            m_wrapIndent = NULL;
        }
    ;
            
                m_has_wrapRight = true;
                if (!m_wrapRight)
                {
                    m_wrapRight = new CT_OnOff();
                }
                return m_wrapRight;
            
        }
        const CT_OnOff& wrapRight(){

            if (m_wrapRight)
            {
                return *m_wrapRight;
            }
            return CT_OnOff::default_instance();
        
        }
        bool has_intLim(){

            return m_has_intLim;
        
        }
        CT_LimLoc* mutable_intLim(){

                m_has_intLim = true;
                if (!m_intLim)
                {
                    m_intLim = new CT_LimLoc();
                }
                return m_intLim;
            
        }
        const CT_LimLoc& intLim(){

            if (m_intLim)
            {
                return *m_intLim;
            }
            return CT_LimLoc::default_instance();
        
        }
        bool has_naryLim(){

            return m_has_naryLim;
        
        }
        CT_LimLoc* mutable_naryLim(){

                m_has_naryLim = true;
                if (!m_naryLim)
                {
                    m_naryLim = new CT_LimLoc();
                }
                return m_naryLim;
            
        }
        const CT_LimLoc& naryLim(){

            if (m_naryLim)
            {
                return *m_naryLim;
            }
            return CT_LimLoc::default_instance();
        
        }
        void clear(){

                m_has_mathFont = false;
                
        if (m_mathFont)
        {
            delete m_mathFont;
            m_mathFont = NULL;
        }
    
            
                m_has_brkBin = false;
                
        if (m_brkBin)
        {
            delete m_brkBin;
            m_brkBin = NULL;
        }
    
            
                m_has_brkBinSub = false;
                
        if (m_brkBinSub)
        {
            delete m_brkBinSub;
            m_brkBinSub = NULL;
        }
    
            
                m_has_smallFrac = false;
                
        if (m_smallFrac)
        {
            delete m_smallFrac;
            m_smallFrac = NULL;
        }
    
            
                m_has_dispDef = false;
                
        if (m_dispDef)
        {
            delete m_dispDef;
            m_dispDef = NULL;
        }
    
            
                m_has_lMargin = false;
                
        if (m_lMargin)
        {
            delete m_lMargin;
            m_lMargin = NULL;
        }
    
            
                m_has_rMargin = false;
                
        if (m_rMargin)
        {
            delete m_rMargin;
            m_rMargin = NULL;
        }
    
            
                m_has_defJc = false;
                
        if (m_defJc)
        {
            delete m_defJc;
            m_defJc = NULL;
        }
    
            
                m_has_preSp = false;
                
        if (m_preSp)
        {
            delete m_preSp;
            m_preSp = NULL;
        }
    
            
                m_has_postSp = false;
                
        if (m_postSp)
        {
            delete m_postSp;
            m_postSp = NULL;
        }
    
            
                m_has_interSp = false;
                
        if (m_interSp)
        {
            delete m_interSp;
            m_interSp = NULL;
        }
    
            
                m_has_intraSp = false;
                
        if (m_intraSp)
        {
            delete m_intraSp;
            m_intraSp = NULL;
        }
    
             
                m_has_wrapIndent = false;
                
        if (m_wrapIndent)
        {
            delete m_wrapIndent;
            m_wrapIndent = NULL;
        }
    
            
                m_has_wrapRight = false;
                
        if (m_wrapRight)
        {
            delete m_wrapRight;
            m_wrapRight = NULL;
        }
    
             
                m_has_intLim = false;
                
        if (m_intLim)
        {
            delete m_intLim;
            m_intLim = NULL;
        }
    
            
                m_has_naryLim = false;
                
        if (m_naryLim)
        {
            delete m_naryLim;
            m_naryLim = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_mathFont)
                {
                    m_mathFont->toXml(mathFont, _outStream);;
                }
            
                if (m_has_brkBin)
                {
                    m_mathFont->toXml(brkBin, _outStream);;
                }
            
                if (m_has_brkBinSub)
                {
                    m_mathFont->toXml(brkBinSub, _outStream);;
                }
            
                if (m_has_smallFrac)
                {
                    m_mathFont->toXml(smallFrac, _outStream);;
                }
            
                if (m_has_dispDef)
                {
                    m_mathFont->toXml(dispDef, _outStream);;
                }
            
                if (m_has_lMargin)
                {
                    m_mathFont->toXml(lMargin, _outStream);;
                }
            
                if (m_has_rMargin)
                {
                    m_mathFont->toXml(rMargin, _outStream);;
                }
            
                if (m_has_defJc)
                {
                    m_mathFont->toXml(defJc, _outStream);;
                }
            
                if (m_has_preSp)
                {
                    m_mathFont->toXml(preSp, _outStream);;
                }
            
                if (m_has_postSp)
                {
                    m_mathFont->toXml(postSp, _outStream);;
                }
            
                if (m_has_interSp)
                {
                    m_mathFont->toXml(interSp, _outStream);;
                }
            
                if (m_has_intraSp)
                {
                    m_mathFont->toXml(intraSp, _outStream);;
                }
             
                if (m_has_wrapIndent)
                {
                    m_wrapIndent->toXml(wrapIndent, _outStream);;
                }
            
                if (m_has_wrapRight)
                {
                    m_wrapIndent->toXml(wrapRight, _outStream);;
                }
             
                if (m_has_intLim)
                {
                    m_intLim->toXml(intLim, _outStream);;
                }
            
                if (m_has_naryLim)
                {
                    m_intLim->toXml(naryLim, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_MathPr& default_instance(){

    if (!CT_MathPr::default_instance_)
    {
        CT_MathPr::default_instance_ = new CT_MathPr();
    }
    return *CT_MathPr::default_instance_;

        }

    private:
        bool m_has_mathFont ;
        CT_String* m_mathFont ;
        bool m_has_brkBin ;
        CT_BreakBin* m_brkBin ;
        bool m_has_brkBinSub ;
        CT_BreakBinSub* m_brkBinSub ;
        bool m_has_smallFrac ;
        CT_OnOff* m_smallFrac ;
        bool m_has_dispDef ;
        CT_OnOff* m_dispDef ;
        bool m_has_lMargin ;
        CT_TwipsMeasure* m_lMargin ;
        bool m_has_rMargin ;
        CT_TwipsMeasure* m_rMargin ;
        bool m_has_defJc ;
        CT_OMathJc* m_defJc ;
        bool m_has_preSp ;
        CT_TwipsMeasure* m_preSp ;
        bool m_has_postSp ;
        CT_TwipsMeasure* m_postSp ;
        bool m_has_interSp ;
        CT_TwipsMeasure* m_interSp ;
        bool m_has_intraSp ;
        CT_TwipsMeasure* m_intraSp ;
        bool m_has_wrapIndent ;
        CT_TwipsMeasure* m_wrapIndent ;
        bool m_has_wrapRight ;
        CT_OnOff* m_wrapRight ;
        bool m_has_intLim ;
        CT_LimLoc* m_intLim ;
        bool m_has_naryLim ;
        CT_LimLoc* m_naryLim ;
        static CT_MathPr* default_instance_ ;

    }

    class CT_OMathPara : public XSD::ComplexType{
    public:
        bool has_oMathParaPr(){

            return m_has_oMathParaPr;
        
        }
        CT_OMathParaPr* mutable_oMathParaPr(){

                m_has_oMathParaPr = true;
                if (!m_oMathParaPr)
                {
                    m_oMathParaPr = new CT_OMathParaPr();
                }
                return m_oMathParaPr;
            
        }
        const CT_OMathParaPr& oMathParaPr(){

            if (m_oMathParaPr)
            {
                return *m_oMathParaPr;
            }
            return CT_OMathParaPr::default_instance();
        
        }
        bool has_oMath(){

            return m_has_oMath;
        
        }
        CT_OMath* mutable_oMath(){

                m_has_oMath = true;
                if (!m_oMath)
                {
                    m_oMath = new CT_OMath();
                }
                return m_oMath;
            
        }
        const CT_OMath& oMath(){

            if (m_oMath)
            {
                return *m_oMath;
            }
            return CT_OMath::default_instance();
        
        }
        void clear(){

                m_has_oMathParaPr = false;
                
        if (m_oMathParaPr)
        {
            delete m_oMathParaPr;
            m_oMathParaPr = NULL;
        }
    
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    
            
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
                if (m_has_oMathParaPr)
                {
                    m_oMathParaPr->toXml(oMathParaPr, _outStream);;
                }
            
                if (m_has_oMath)
                {
                    m_oMathParaPr->toXml(oMath, _outStream);;
                }
            
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_OMathPara& default_instance(){

    if (!CT_OMathPara::default_instance_)
    {
        CT_OMathPara::default_instance_ = new CT_OMathPara();
    }
    return *CT_OMathPara::default_instance_;

        }

    private:
        bool m_has_oMathParaPr ;
        CT_OMathParaPr* m_oMathParaPr ;
        bool m_has_oMath ;
        CT_OMath* m_oMath ;
        static CT_OMathPara* default_instance_ ;

    }

    class CT_OMath : public XSD::ComplexType{
    public:
        CT_Acc* add_acc(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Acc* pNewChild = pChildGroup->mutable_acc();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Bar* add_bar(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Bar* pNewChild = pChildGroup->mutable_bar();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Box* add_box(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Box* pNewChild = pChildGroup->mutable_box();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_BorderBox* add_borderBox(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_BorderBox* pNewChild = pChildGroup->mutable_borderBox();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_D* add_d(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_D* pNewChild = pChildGroup->mutable_d();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_EqArr* add_eqArr(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_EqArr* pNewChild = pChildGroup->mutable_eqArr();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_F* add_f(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_F* pNewChild = pChildGroup->mutable_f();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Func* add_func(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Func* pNewChild = pChildGroup->mutable_func();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_GroupChr* add_groupChr(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_GroupChr* pNewChild = pChildGroup->mutable_groupChr();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_LimLow* add_limLow(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_LimLow* pNewChild = pChildGroup->mutable_limLow();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_LimUpp* add_limUpp(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_LimUpp* pNewChild = pChildGroup->mutable_limUpp();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_M* add_m(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_M* pNewChild = pChildGroup->mutable_m();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Nary* add_nary(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Nary* pNewChild = pChildGroup->mutable_nary();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Phant* add_phant(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Phant* pNewChild = pChildGroup->mutable_phant();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Rad* add_rad(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Rad* pNewChild = pChildGroup->mutable_rad();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SPre* add_sPre(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SPre* pNewChild = pChildGroup->mutable_sPre();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SSub* add_sSub(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SSub* pNewChild = pChildGroup->mutable_sSub();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SSubSup* add_sSubSup(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SSubSup* pNewChild = pChildGroup->mutable_sSubSup();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SSup* add_sSup(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SSup* pNewChild = pChildGroup->mutable_sSup();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_R* add_r(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_R* pNewChild = pChildGroup->mutable_r();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_CustomXmlRun* add_customXml(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_CustomXmlRun* pNewChild = pChildGroup->mutable_customXml();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SimpleField* add_fldSimple(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SimpleField* pNewChild = pChildGroup->mutable_fldSimple();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Hyperlink* add_hyperlink(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Hyperlink* pNewChild = pChildGroup->mutable_hyperlink();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SmartTagRun* add_smartTag(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SmartTagRun* pNewChild = pChildGroup->mutable_smartTag();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_SdtRun* add_sdt(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_SdtRun* pNewChild = pChildGroup->mutable_sdt();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_ProofErr* add_proofErr(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_ProofErr* pNewChild = pChildGroup->mutable_proofErr();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_PermStart* add_permStart(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_PermStart* pNewChild = pChildGroup->mutable_permStart();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Perm* add_permEnd(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Perm* pNewChild = pChildGroup->mutable_permEnd();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Bookmark* add_bookmarkStart(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Bookmark* pNewChild = pChildGroup->mutable_bookmarkStart();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_MarkupRange* add_bookmarkEnd(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_MarkupRange* pNewChild = pChildGroup->mutable_bookmarkEnd();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_MoveBookmark* add_moveFromRangeStart(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_MoveBookmark* pNewChild = pChildGroup->mutable_moveFromRangeStart();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_MarkupRange* add_moveFromRangeEnd(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_MarkupRange* pNewChild = pChildGroup->mutable_moveFromRangeEnd();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_MoveBookmark* add_moveToRangeStart(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_MoveBookmark* pNewChild = pChildGroup->mutable_moveToRangeStart();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_MarkupRange* add_moveToRangeEnd(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_MarkupRange* pNewChild = pChildGroup->mutable_moveToRangeEnd();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_MarkupRange* add_commentRangeStart(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_MarkupRange* pNewChild = pChildGroup->mutable_commentRangeStart();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_MarkupRange* add_commentRangeEnd(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_MarkupRange* pNewChild = pChildGroup->mutable_commentRangeEnd();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_TrackChange* add_customXmlInsRangeStart(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_TrackChange* pNewChild = pChildGroup->mutable_customXmlInsRangeStart();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Markup* add_customXmlInsRangeEnd(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Markup* pNewChild = pChildGroup->mutable_customXmlInsRangeEnd();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_TrackChange* add_customXmlDelRangeStart(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_TrackChange* pNewChild = pChildGroup->mutable_customXmlDelRangeStart();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Markup* add_customXmlDelRangeEnd(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Markup* pNewChild = pChildGroup->mutable_customXmlDelRangeEnd();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_TrackChange* add_customXmlMoveFromRangeStart(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_TrackChange* pNewChild = pChildGroup->mutable_customXmlMoveFromRangeStart();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Markup* add_customXmlMoveFromRangeEnd(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Markup* pNewChild = pChildGroup->mutable_customXmlMoveFromRangeEnd();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_TrackChange* add_customXmlMoveToRangeStart(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_TrackChange* pNewChild = pChildGroup->mutable_customXmlMoveToRangeStart();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_Markup* add_customXmlMoveToRangeEnd(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_Markup* pNewChild = pChildGroup->mutable_customXmlMoveToRangeEnd();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_RunTrackChange* add_ins(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_RunTrackChange* pNewChild = pChildGroup->mutable_ins();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_RunTrackChange* add_del(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_RunTrackChange* pNewChild = pChildGroup->mutable_del();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_RunTrackChange* add_moveFrom(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_RunTrackChange* pNewChild = pChildGroup->mutable_moveFrom();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_RunTrackChange* add_moveTo(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_RunTrackChange* pNewChild = pChildGroup->mutable_moveTo();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_OMathPara* add_oMathPara(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_OMathPara* pNewChild = pChildGroup->mutable_oMathPara();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        CT_OMath* add_oMath(){

            vector<ChildGroup_1*> *pChildGroup = new ChildGroup_1();
            CT_OMath* pNewChild = pChildGroup->mutable_oMath();
            m_childGroupList_1.push_back(pChildGroup);
            return pNewChild;
        
        }
        void clear(){

            vector<ChildGroup_1*>::iterator iter;
            for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
            {
                delete *iter;
            }
            m_childGroupList_1.clear();
        
        }
        void toXml(const string _elemName , ostream _outStream ){

        _outStream << \<\ << _elementName;
    
        _outStream << \>\;
    
        vector<ChildGroup_1*>::const_iterator iter;
        for (iter = m_childGroupList_1.begin(); iter != m_childGroupList_1.end(); ++iter)
        {
            if ((*iter)->has_acc())
            {
                (*iter)->toXml(acc, _outStream);
            }
            else if ((*iter)->has_bar())
            {
                (*iter)->toXml(bar, _outStream);
            }
            else if ((*iter)->has_box())
            {
                (*iter)->toXml(box, _outStream);
            }
            else if ((*iter)->has_borderBox())
            {
                (*iter)->toXml(borderBox, _outStream);
            }
            else if ((*iter)->has_d())
            {
                (*iter)->toXml(d, _outStream);
            }
            else if ((*iter)->has_eqArr())
            {
                (*iter)->toXml(eqArr, _outStream);
            }
            else if ((*iter)->has_f())
            {
                (*iter)->toXml(f, _outStream);
            }
            else if ((*iter)->has_func())
            {
                (*iter)->toXml(func, _outStream);
            }
            else if ((*iter)->has_groupChr())
            {
                (*iter)->toXml(groupChr, _outStream);
            }
            else if ((*iter)->has_limLow())
            {
                (*iter)->toXml(limLow, _outStream);
            }
            else if ((*iter)->has_limUpp())
            {
                (*iter)->toXml(limUpp, _outStream);
            }
            else if ((*iter)->has_m())
            {
                (*iter)->toXml(m, _outStream);
            }
            else if ((*iter)->has_nary())
            {
                (*iter)->toXml(nary, _outStream);
            }
            else if ((*iter)->has_phant())
            {
                (*iter)->toXml(phant, _outStream);
            }
            else if ((*iter)->has_rad())
            {
                (*iter)->toXml(rad, _outStream);
            }
            else if ((*iter)->has_sPre())
            {
                (*iter)->toXml(sPre, _outStream);
            }
            else if ((*iter)->has_sSub())
            {
                (*iter)->toXml(sSub, _outStream);
            }
            else if ((*iter)->has_sSubSup())
            {
                (*iter)->toXml(sSubSup, _outStream);
            }
            else if ((*iter)->has_sSup())
            {
                (*iter)->toXml(sSup, _outStream);
            }
            else if ((*iter)->has_r())
            {
                (*iter)->toXml(r, _outStream);
            }
            else if ((*iter)->has_customXml())
            {
                (*iter)->toXml(customXml, _outStream);
            }
            else if ((*iter)->has_fldSimple())
            {
                (*iter)->toXml(fldSimple, _outStream);
            }
            else if ((*iter)->has_hyperlink())
            {
                (*iter)->toXml(hyperlink, _outStream);
            }
            else if ((*iter)->has_smartTag())
            {
                (*iter)->toXml(smartTag, _outStream);
            }
            else if ((*iter)->has_sdt())
            {
                (*iter)->toXml(sdt, _outStream);
            }
            else if ((*iter)->has_proofErr())
            {
                (*iter)->toXml(proofErr, _outStream);
            }
            else if ((*iter)->has_permStart())
            {
                (*iter)->toXml(permStart, _outStream);
            }
            else if ((*iter)->has_permEnd())
            {
                (*iter)->toXml(permEnd, _outStream);
            }
            else if ((*iter)->has_bookmarkStart())
            {
                (*iter)->toXml(bookmarkStart, _outStream);
            }
            else if ((*iter)->has_bookmarkEnd())
            {
                (*iter)->toXml(bookmarkEnd, _outStream);
            }
            else if ((*iter)->has_moveFromRangeStart())
            {
                (*iter)->toXml(moveFromRangeStart, _outStream);
            }
            else if ((*iter)->has_moveFromRangeEnd())
            {
                (*iter)->toXml(moveFromRangeEnd, _outStream);
            }
            else if ((*iter)->has_moveToRangeStart())
            {
                (*iter)->toXml(moveToRangeStart, _outStream);
            }
            else if ((*iter)->has_moveToRangeEnd())
            {
                (*iter)->toXml(moveToRangeEnd, _outStream);
            }
            else if ((*iter)->has_commentRangeStart())
            {
                (*iter)->toXml(commentRangeStart, _outStream);
            }
            else if ((*iter)->has_commentRangeEnd())
            {
                (*iter)->toXml(commentRangeEnd, _outStream);
            }
            else if ((*iter)->has_customXmlInsRangeStart())
            {
                (*iter)->toXml(customXmlInsRangeStart, _outStream);
            }
            else if ((*iter)->has_customXmlInsRangeEnd())
            {
                (*iter)->toXml(customXmlInsRangeEnd, _outStream);
            }
            else if ((*iter)->has_customXmlDelRangeStart())
            {
                (*iter)->toXml(customXmlDelRangeStart, _outStream);
            }
            else if ((*iter)->has_customXmlDelRangeEnd())
            {
                (*iter)->toXml(customXmlDelRangeEnd, _outStream);
            }
            else if ((*iter)->has_customXmlMoveFromRangeStart())
            {
                (*iter)->toXml(customXmlMoveFromRangeStart, _outStream);
            }
            else if ((*iter)->has_customXmlMoveFromRangeEnd())
            {
                (*iter)->toXml(customXmlMoveFromRangeEnd, _outStream);
            }
            else if ((*iter)->has_customXmlMoveToRangeStart())
            {
                (*iter)->toXml(customXmlMoveToRangeStart, _outStream);
            }
            else if ((*iter)->has_customXmlMoveToRangeEnd())
            {
                (*iter)->toXml(customXmlMoveToRangeEnd, _outStream);
            }
            else if ((*iter)->has_ins())
            {
                (*iter)->toXml(ins, _outStream);
            }
            else if ((*iter)->has_del())
            {
                (*iter)->toXml(del, _outStream);
            }
            else if ((*iter)->has_moveFrom())
            {
                (*iter)->toXml(moveFrom, _outStream);
            }
            else if ((*iter)->has_moveTo())
            {
                (*iter)->toXml(moveTo, _outStream);
            }
            else if ((*iter)->has_oMathPara())
            {
                (*iter)->toXml(oMathPara, _outStream);
            }
            else if ((*iter)->has_oMath())
            {
                (*iter)->toXml(oMath, _outStream);
            }
        }
        _outStream << \</\ << _elementName << \>\;
    
        }
        const CT_OMath& default_instance(){

    if (!CT_OMath::default_instance_)
    {
        CT_OMath::default_instance_ = new CT_OMath();
    }
    return *CT_OMath::default_instance_;

        }

    private:
        vector<ChildGroup_1*> m_childGroupList_1 ;
        static CT_OMath* default_instance_ ;
        class ChildGroup_1{
        public:
            bool has_acc(){

            return m_has_acc;
        
            }
            CT_Acc* mutable_acc(){

                
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_acc = true;
                if (!m_acc)
                {
                    m_acc = new CT_Acc();
                }
                return m_acc;
            
            }
            const CT_Acc& acc(){

            if (m_acc)
            {
                return *m_acc;
            }
            return CT_Acc::default_instance();
        
            }
            bool has_bar(){

            return m_has_bar;
        
            }
            CT_Bar* mutable_bar(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_bar = true;
                if (!m_bar)
                {
                    m_bar = new CT_Bar();
                }
                return m_bar;
            
            }
            const CT_Bar& bar(){

            if (m_bar)
            {
                return *m_bar;
            }
            return CT_Bar::default_instance();
        
            }
            bool has_box(){

            return m_has_box;
        
            }
            CT_Box* mutable_box(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_box = true;
                if (!m_box)
                {
                    m_box = new CT_Box();
                }
                return m_box;
            
            }
            const CT_Box& box(){

            if (m_box)
            {
                return *m_box;
            }
            return CT_Box::default_instance();
        
            }
            bool has_borderBox(){

            return m_has_borderBox;
        
            }
            CT_BorderBox* mutable_borderBox(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_borderBox = true;
                if (!m_borderBox)
                {
                    m_borderBox = new CT_BorderBox();
                }
                return m_borderBox;
            
            }
            const CT_BorderBox& borderBox(){

            if (m_borderBox)
            {
                return *m_borderBox;
            }
            return CT_BorderBox::default_instance();
        
            }
            bool has_d(){

            return m_has_d;
        
            }
            CT_D* mutable_d(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_d = true;
                if (!m_d)
                {
                    m_d = new CT_D();
                }
                return m_d;
            
            }
            const CT_D& d(){

            if (m_d)
            {
                return *m_d;
            }
            return CT_D::default_instance();
        
            }
            bool has_eqArr(){

            return m_has_eqArr;
        
            }
            CT_EqArr* mutable_eqArr(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_eqArr = true;
                if (!m_eqArr)
                {
                    m_eqArr = new CT_EqArr();
                }
                return m_eqArr;
            
            }
            const CT_EqArr& eqArr(){

            if (m_eqArr)
            {
                return *m_eqArr;
            }
            return CT_EqArr::default_instance();
        
            }
            bool has_f(){

            return m_has_f;
        
            }
            CT_F* mutable_f(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_f = true;
                if (!m_f)
                {
                    m_f = new CT_F();
                }
                return m_f;
            
            }
            const CT_F& f(){

            if (m_f)
            {
                return *m_f;
            }
            return CT_F::default_instance();
        
            }
            bool has_func(){

            return m_has_func;
        
            }
            CT_Func* mutable_func(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_func = true;
                if (!m_func)
                {
                    m_func = new CT_Func();
                }
                return m_func;
            
            }
            const CT_Func& func(){

            if (m_func)
            {
                return *m_func;
            }
            return CT_Func::default_instance();
        
            }
            bool has_groupChr(){

            return m_has_groupChr;
        
            }
            CT_GroupChr* mutable_groupChr(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_groupChr = true;
                if (!m_groupChr)
                {
                    m_groupChr = new CT_GroupChr();
                }
                return m_groupChr;
            
            }
            const CT_GroupChr& groupChr(){

            if (m_groupChr)
            {
                return *m_groupChr;
            }
            return CT_GroupChr::default_instance();
        
            }
            bool has_limLow(){

            return m_has_limLow;
        
            }
            CT_LimLow* mutable_limLow(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_limLow = true;
                if (!m_limLow)
                {
                    m_limLow = new CT_LimLow();
                }
                return m_limLow;
            
            }
            const CT_LimLow& limLow(){

            if (m_limLow)
            {
                return *m_limLow;
            }
            return CT_LimLow::default_instance();
        
            }
            bool has_limUpp(){

            return m_has_limUpp;
        
            }
            CT_LimUpp* mutable_limUpp(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_limUpp = true;
                if (!m_limUpp)
                {
                    m_limUpp = new CT_LimUpp();
                }
                return m_limUpp;
            
            }
            const CT_LimUpp& limUpp(){

            if (m_limUpp)
            {
                return *m_limUpp;
            }
            return CT_LimUpp::default_instance();
        
            }
            bool has_m(){

            return m_has_m;
        
            }
            CT_M* mutable_m(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_m = true;
                if (!m_m)
                {
                    m_m = new CT_M();
                }
                return m_m;
            
            }
            const CT_M& m(){

            if (m_m)
            {
                return *m_m;
            }
            return CT_M::default_instance();
        
            }
            bool has_nary(){

            return m_has_nary;
        
            }
            CT_Nary* mutable_nary(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_nary = true;
                if (!m_nary)
                {
                    m_nary = new CT_Nary();
                }
                return m_nary;
            
            }
            const CT_Nary& nary(){

            if (m_nary)
            {
                return *m_nary;
            }
            return CT_Nary::default_instance();
        
            }
            bool has_phant(){

            return m_has_phant;
        
            }
            CT_Phant* mutable_phant(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_phant = true;
                if (!m_phant)
                {
                    m_phant = new CT_Phant();
                }
                return m_phant;
            
            }
            const CT_Phant& phant(){

            if (m_phant)
            {
                return *m_phant;
            }
            return CT_Phant::default_instance();
        
            }
            bool has_rad(){

            return m_has_rad;
        
            }
            CT_Rad* mutable_rad(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_rad = true;
                if (!m_rad)
                {
                    m_rad = new CT_Rad();
                }
                return m_rad;
            
            }
            const CT_Rad& rad(){

            if (m_rad)
            {
                return *m_rad;
            }
            return CT_Rad::default_instance();
        
            }
            bool has_sPre(){

            return m_has_sPre;
        
            }
            CT_SPre* mutable_sPre(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_sPre = true;
                if (!m_sPre)
                {
                    m_sPre = new CT_SPre();
                }
                return m_sPre;
            
            }
            const CT_SPre& sPre(){

            if (m_sPre)
            {
                return *m_sPre;
            }
            return CT_SPre::default_instance();
        
            }
            bool has_sSub(){

            return m_has_sSub;
        
            }
            CT_SSub* mutable_sSub(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_sSub = true;
                if (!m_sSub)
                {
                    m_sSub = new CT_SSub();
                }
                return m_sSub;
            
            }
            const CT_SSub& sSub(){

            if (m_sSub)
            {
                return *m_sSub;
            }
            return CT_SSub::default_instance();
        
            }
            bool has_sSubSup(){

            return m_has_sSubSup;
        
            }
            CT_SSubSup* mutable_sSubSup(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_sSubSup = true;
                if (!m_sSubSup)
                {
                    m_sSubSup = new CT_SSubSup();
                }
                return m_sSubSup;
            
            }
            const CT_SSubSup& sSubSup(){

            if (m_sSubSup)
            {
                return *m_sSubSup;
            }
            return CT_SSubSup::default_instance();
        
            }
            bool has_sSup(){

            return m_has_sSup;
        
            }
            CT_SSup* mutable_sSup(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_sSup = true;
                if (!m_sSup)
                {
                    m_sSup = new CT_SSup();
                }
                return m_sSup;
            
            }
            const CT_SSup& sSup(){

            if (m_sSup)
            {
                return *m_sSup;
            }
            return CT_SSup::default_instance();
        
            }
            bool has_r(){

            return m_has_r;
        
            }
            CT_R* mutable_r(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_r = true;
                if (!m_r)
                {
                    m_r = new CT_R();
                }
                return m_r;
            
            }
            const CT_R& r(){

            if (m_r)
            {
                return *m_r;
            }
            return CT_R::default_instance();
        
            }
            bool has_customXml(){

            return m_has_customXml;
        
            }
            CT_CustomXmlRun* mutable_customXml(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_customXml = true;
                if (!m_customXml)
                {
                    m_customXml = new CT_CustomXmlRun();
                }
                return m_customXml;
            
            }
            const CT_CustomXmlRun& customXml(){

            if (m_customXml)
            {
                return *m_customXml;
            }
            return CT_CustomXmlRun::default_instance();
        
            }
            bool has_fldSimple(){

            return m_has_fldSimple;
        
            }
            CT_SimpleField* mutable_fldSimple(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_fldSimple = true;
                if (!m_fldSimple)
                {
                    m_fldSimple = new CT_SimpleField();
                }
                return m_fldSimple;
            
            }
            const CT_SimpleField& fldSimple(){

            if (m_fldSimple)
            {
                return *m_fldSimple;
            }
            return CT_SimpleField::default_instance();
        
            }
            bool has_hyperlink(){

            return m_has_hyperlink;
        
            }
            CT_Hyperlink* mutable_hyperlink(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_hyperlink = true;
                if (!m_hyperlink)
                {
                    m_hyperlink = new CT_Hyperlink();
                }
                return m_hyperlink;
            
            }
            const CT_Hyperlink& hyperlink(){

            if (m_hyperlink)
            {
                return *m_hyperlink;
            }
            return CT_Hyperlink::default_instance();
        
            }
            bool has_smartTag(){

            return m_has_smartTag;
        
            }
            CT_SmartTagRun* mutable_smartTag(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_smartTag = true;
                if (!m_smartTag)
                {
                    m_smartTag = new CT_SmartTagRun();
                }
                return m_smartTag;
            
            }
            const CT_SmartTagRun& smartTag(){

            if (m_smartTag)
            {
                return *m_smartTag;
            }
            return CT_SmartTagRun::default_instance();
        
            }
            bool has_sdt(){

            return m_has_sdt;
        
            }
            CT_SdtRun* mutable_sdt(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_sdt = true;
                if (!m_sdt)
                {
                    m_sdt = new CT_SdtRun();
                }
                return m_sdt;
            
            }
            const CT_SdtRun& sdt(){

            if (m_sdt)
            {
                return *m_sdt;
            }
            return CT_SdtRun::default_instance();
        
            }
            bool has_proofErr(){

            return m_has_proofErr;
        
            }
            CT_ProofErr* mutable_proofErr(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_proofErr = true;
                if (!m_proofErr)
                {
                    m_proofErr = new CT_ProofErr();
                }
                return m_proofErr;
            
            }
            const CT_ProofErr& proofErr(){

            if (m_proofErr)
            {
                return *m_proofErr;
            }
            return CT_ProofErr::default_instance();
        
            }
            bool has_permStart(){

            return m_has_permStart;
        
            }
            CT_PermStart* mutable_permStart(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_permStart = true;
                if (!m_permStart)
                {
                    m_permStart = new CT_PermStart();
                }
                return m_permStart;
            
            }
            const CT_PermStart& permStart(){

            if (m_permStart)
            {
                return *m_permStart;
            }
            return CT_PermStart::default_instance();
        
            }
            bool has_permEnd(){

            return m_has_permEnd;
        
            }
            CT_Perm* mutable_permEnd(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_permEnd = true;
                if (!m_permEnd)
                {
                    m_permEnd = new CT_Perm();
                }
                return m_permEnd;
            
            }
            const CT_Perm& permEnd(){

            if (m_permEnd)
            {
                return *m_permEnd;
            }
            return CT_Perm::default_instance();
        
            }
            bool has_bookmarkStart(){

            return m_has_bookmarkStart;
        
            }
            CT_Bookmark* mutable_bookmarkStart(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_bookmarkStart = true;
                if (!m_bookmarkStart)
                {
                    m_bookmarkStart = new CT_Bookmark();
                }
                return m_bookmarkStart;
            
            }
            const CT_Bookmark& bookmarkStart(){

            if (m_bookmarkStart)
            {
                return *m_bookmarkStart;
            }
            return CT_Bookmark::default_instance();
        
            }
            bool has_bookmarkEnd(){

            return m_has_bookmarkEnd;
        
            }
            CT_MarkupRange* mutable_bookmarkEnd(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_bookmarkEnd = true;
                if (!m_bookmarkEnd)
                {
                    m_bookmarkEnd = new CT_MarkupRange();
                }
                return m_bookmarkEnd;
            
            }
            const CT_MarkupRange& bookmarkEnd(){

            if (m_bookmarkEnd)
            {
                return *m_bookmarkEnd;
            }
            return CT_MarkupRange::default_instance();
        
            }
            bool has_moveFromRangeStart(){

            return m_has_moveFromRangeStart;
        
            }
            CT_MoveBookmark* mutable_moveFromRangeStart(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = true;
                if (!m_moveFromRangeStart)
                {
                    m_moveFromRangeStart = new CT_MoveBookmark();
                }
                return m_moveFromRangeStart;
            
            }
            const CT_MoveBookmark& moveFromRangeStart(){

            if (m_moveFromRangeStart)
            {
                return *m_moveFromRangeStart;
            }
            return CT_MoveBookmark::default_instance();
        
            }
            bool has_moveFromRangeEnd(){

            return m_has_moveFromRangeEnd;
        
            }
            CT_MarkupRange* mutable_moveFromRangeEnd(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = true;
                if (!m_moveFromRangeEnd)
                {
                    m_moveFromRangeEnd = new CT_MarkupRange();
                }
                return m_moveFromRangeEnd;
            
            }
            const CT_MarkupRange& moveFromRangeEnd(){

            if (m_moveFromRangeEnd)
            {
                return *m_moveFromRangeEnd;
            }
            return CT_MarkupRange::default_instance();
        
            }
            bool has_moveToRangeStart(){

            return m_has_moveToRangeStart;
        
            }
            CT_MoveBookmark* mutable_moveToRangeStart(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_moveToRangeStart = true;
                if (!m_moveToRangeStart)
                {
                    m_moveToRangeStart = new CT_MoveBookmark();
                }
                return m_moveToRangeStart;
            
            }
            const CT_MoveBookmark& moveToRangeStart(){

            if (m_moveToRangeStart)
            {
                return *m_moveToRangeStart;
            }
            return CT_MoveBookmark::default_instance();
        
            }
            bool has_moveToRangeEnd(){

            return m_has_moveToRangeEnd;
        
            }
            CT_MarkupRange* mutable_moveToRangeEnd(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = true;
                if (!m_moveToRangeEnd)
                {
                    m_moveToRangeEnd = new CT_MarkupRange();
                }
                return m_moveToRangeEnd;
            
            }
            const CT_MarkupRange& moveToRangeEnd(){

            if (m_moveToRangeEnd)
            {
                return *m_moveToRangeEnd;
            }
            return CT_MarkupRange::default_instance();
        
            }
            bool has_commentRangeStart(){

            return m_has_commentRangeStart;
        
            }
            CT_MarkupRange* mutable_commentRangeStart(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_commentRangeStart = true;
                if (!m_commentRangeStart)
                {
                    m_commentRangeStart = new CT_MarkupRange();
                }
                return m_commentRangeStart;
            
            }
            const CT_MarkupRange& commentRangeStart(){

            if (m_commentRangeStart)
            {
                return *m_commentRangeStart;
            }
            return CT_MarkupRange::default_instance();
        
            }
            bool has_commentRangeEnd(){

            return m_has_commentRangeEnd;
        
            }
            CT_MarkupRange* mutable_commentRangeEnd(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_commentRangeEnd = true;
                if (!m_commentRangeEnd)
                {
                    m_commentRangeEnd = new CT_MarkupRange();
                }
                return m_commentRangeEnd;
            
            }
            const CT_MarkupRange& commentRangeEnd(){

            if (m_commentRangeEnd)
            {
                return *m_commentRangeEnd;
            }
            return CT_MarkupRange::default_instance();
        
            }
            bool has_customXmlInsRangeStart(){

            return m_has_customXmlInsRangeStart;
        
            }
            CT_TrackChange* mutable_customXmlInsRangeStart(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = true;
                if (!m_customXmlInsRangeStart)
                {
                    m_customXmlInsRangeStart = new CT_TrackChange();
                }
                return m_customXmlInsRangeStart;
            
            }
            const CT_TrackChange& customXmlInsRangeStart(){

            if (m_customXmlInsRangeStart)
            {
                return *m_customXmlInsRangeStart;
            }
            return CT_TrackChange::default_instance();
        
            }
            bool has_customXmlInsRangeEnd(){

            return m_has_customXmlInsRangeEnd;
        
            }
            CT_Markup* mutable_customXmlInsRangeEnd(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = true;
                if (!m_customXmlInsRangeEnd)
                {
                    m_customXmlInsRangeEnd = new CT_Markup();
                }
                return m_customXmlInsRangeEnd;
            
            }
            const CT_Markup& customXmlInsRangeEnd(){

            if (m_customXmlInsRangeEnd)
            {
                return *m_customXmlInsRangeEnd;
            }
            return CT_Markup::default_instance();
        
            }
            bool has_customXmlDelRangeStart(){

            return m_has_customXmlDelRangeStart;
        
            }
            CT_TrackChange* mutable_customXmlDelRangeStart(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = true;
                if (!m_customXmlDelRangeStart)
                {
                    m_customXmlDelRangeStart = new CT_TrackChange();
                }
                return m_customXmlDelRangeStart;
            
            }
            const CT_TrackChange& customXmlDelRangeStart(){

            if (m_customXmlDelRangeStart)
            {
                return *m_customXmlDelRangeStart;
            }
            return CT_TrackChange::default_instance();
        
            }
            bool has_customXmlDelRangeEnd(){

            return m_has_customXmlDelRangeEnd;
        
            }
            CT_Markup* mutable_customXmlDelRangeEnd(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = true;
                if (!m_customXmlDelRangeEnd)
                {
                    m_customXmlDelRangeEnd = new CT_Markup();
                }
                return m_customXmlDelRangeEnd;
            
            }
            const CT_Markup& customXmlDelRangeEnd(){

            if (m_customXmlDelRangeEnd)
            {
                return *m_customXmlDelRangeEnd;
            }
            return CT_Markup::default_instance();
        
            }
            bool has_customXmlMoveFromRangeStart(){

            return m_has_customXmlMoveFromRangeStart;
        
            }
            CT_TrackChange* mutable_customXmlMoveFromRangeStart(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = true;
                if (!m_customXmlMoveFromRangeStart)
                {
                    m_customXmlMoveFromRangeStart = new CT_TrackChange();
                }
                return m_customXmlMoveFromRangeStart;
            
            }
            const CT_TrackChange& customXmlMoveFromRangeStart(){

            if (m_customXmlMoveFromRangeStart)
            {
                return *m_customXmlMoveFromRangeStart;
            }
            return CT_TrackChange::default_instance();
        
            }
            bool has_customXmlMoveFromRangeEnd(){

            return m_has_customXmlMoveFromRangeEnd;
        
            }
            CT_Markup* mutable_customXmlMoveFromRangeEnd(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = true;
                if (!m_customXmlMoveFromRangeEnd)
                {
                    m_customXmlMoveFromRangeEnd = new CT_Markup();
                }
                return m_customXmlMoveFromRangeEnd;
            
            }
            const CT_Markup& customXmlMoveFromRangeEnd(){

            if (m_customXmlMoveFromRangeEnd)
            {
                return *m_customXmlMoveFromRangeEnd;
            }
            return CT_Markup::default_instance();
        
            }
            bool has_customXmlMoveToRangeStart(){

            return m_has_customXmlMoveToRangeStart;
        
            }
            CT_TrackChange* mutable_customXmlMoveToRangeStart(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = true;
                if (!m_customXmlMoveToRangeStart)
                {
                    m_customXmlMoveToRangeStart = new CT_TrackChange();
                }
                return m_customXmlMoveToRangeStart;
            
            }
            const CT_TrackChange& customXmlMoveToRangeStart(){

            if (m_customXmlMoveToRangeStart)
            {
                return *m_customXmlMoveToRangeStart;
            }
            return CT_TrackChange::default_instance();
        
            }
            bool has_customXmlMoveToRangeEnd(){

            return m_has_customXmlMoveToRangeEnd;
        
            }
            CT_Markup* mutable_customXmlMoveToRangeEnd(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = true;
                if (!m_customXmlMoveToRangeEnd)
                {
                    m_customXmlMoveToRangeEnd = new CT_Markup();
                }
                return m_customXmlMoveToRangeEnd;
            
            }
            const CT_Markup& customXmlMoveToRangeEnd(){

            if (m_customXmlMoveToRangeEnd)
            {
                return *m_customXmlMoveToRangeEnd;
            }
            return CT_Markup::default_instance();
        
            }
            bool has_ins(){

            return m_has_ins;
        
            }
            CT_RunTrackChange* mutable_ins(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_ins = true;
                if (!m_ins)
                {
                    m_ins = new CT_RunTrackChange();
                }
                return m_ins;
            
            }
            const CT_RunTrackChange& ins(){

            if (m_ins)
            {
                return *m_ins;
            }
            return CT_RunTrackChange::default_instance();
        
            }
            bool has_del(){

            return m_has_del;
        
            }
            CT_RunTrackChange* mutable_del(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_del = true;
                if (!m_del)
                {
                    m_del = new CT_RunTrackChange();
                }
                return m_del;
            
            }
            const CT_RunTrackChange& del(){

            if (m_del)
            {
                return *m_del;
            }
            return CT_RunTrackChange::default_instance();
        
            }
            bool has_moveFrom(){

            return m_has_moveFrom;
        
            }
            CT_RunTrackChange* mutable_moveFrom(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_moveFrom = true;
                if (!m_moveFrom)
                {
                    m_moveFrom = new CT_RunTrackChange();
                }
                return m_moveFrom;
            
            }
            const CT_RunTrackChange& moveFrom(){

            if (m_moveFrom)
            {
                return *m_moveFrom;
            }
            return CT_RunTrackChange::default_instance();
        
            }
            bool has_moveTo(){

            return m_has_moveTo;
        
            }
            CT_RunTrackChange* mutable_moveTo(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_moveTo = true;
                if (!m_moveTo)
                {
                    m_moveTo = new CT_RunTrackChange();
                }
                return m_moveTo;
            
            }
            const CT_RunTrackChange& moveTo(){

            if (m_moveTo)
            {
                return *m_moveTo;
            }
            return CT_RunTrackChange::default_instance();
        
            }
            bool has_oMathPara(){

            return m_has_oMathPara;
        
            }
            CT_OMathPara* mutable_oMathPara(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMath = false;
                
        if (m_oMath)
        {
            delete m_oMath;
            m_oMath = NULL;
        }
    ;
            
                m_has_oMathPara = true;
                if (!m_oMathPara)
                {
                    m_oMathPara = new CT_OMathPara();
                }
                return m_oMathPara;
            
            }
            const CT_OMathPara& oMathPara(){

            if (m_oMathPara)
            {
                return *m_oMathPara;
            }
            return CT_OMathPara::default_instance();
        
            }
            bool has_oMath(){

            return m_has_oMath;
        
            }
            CT_OMath* mutable_oMath(){

                
                m_has_acc = false;
                
        if (m_acc)
        {
            delete m_acc;
            m_acc = NULL;
        }
    ;
            
                m_has_bar = false;
                
        if (m_bar)
        {
            delete m_bar;
            m_bar = NULL;
        }
    ;
            
                m_has_box = false;
                
        if (m_box)
        {
            delete m_box;
            m_box = NULL;
        }
    ;
            
                m_has_borderBox = false;
                
        if (m_borderBox)
        {
            delete m_borderBox;
            m_borderBox = NULL;
        }
    ;
            
                m_has_d = false;
                
        if (m_d)
        {
            delete m_d;
            m_d = NULL;
        }
    ;
            
                m_has_eqArr = false;
                
        if (m_eqArr)
        {
            delete m_eqArr;
            m_eqArr = NULL;
        }
    ;
            
                m_has_f = false;
                
        if (m_f)
        {
            delete m_f;
            m_f = NULL;
        }
    ;
            
                m_has_func = false;
                
        if (m_func)
        {
            delete m_func;
            m_func = NULL;
        }
    ;
            
                m_has_groupChr = false;
                
        if (m_groupChr)
        {
            delete m_groupChr;
            m_groupChr = NULL;
        }
    ;
            
                m_has_limLow = false;
                
        if (m_limLow)
        {
            delete m_limLow;
            m_limLow = NULL;
        }
    ;
            
                m_has_limUpp = false;
                
        if (m_limUpp)
        {
            delete m_limUpp;
            m_limUpp = NULL;
        }
    ;
            
                m_has_m = false;
                
        if (m_m)
        {
            delete m_m;
            m_m = NULL;
        }
    ;
            
                m_has_nary = false;
                
        if (m_nary)
        {
            delete m_nary;
            m_nary = NULL;
        }
    ;
            
                m_has_phant = false;
                
        if (m_phant)
        {
            delete m_phant;
            m_phant = NULL;
        }
    ;
            
                m_has_rad = false;
                
        if (m_rad)
        {
            delete m_rad;
            m_rad = NULL;
        }
    ;
            
                m_has_sPre = false;
                
        if (m_sPre)
        {
            delete m_sPre;
            m_sPre = NULL;
        }
    ;
            
                m_has_sSub = false;
                
        if (m_sSub)
        {
            delete m_sSub;
            m_sSub = NULL;
        }
    ;
            
                m_has_sSubSup = false;
                
        if (m_sSubSup)
        {
            delete m_sSubSup;
            m_sSubSup = NULL;
        }
    ;
            
                m_has_sSup = false;
                
        if (m_sSup)
        {
            delete m_sSup;
            m_sSup = NULL;
        }
    ;
            
                m_has_r = false;
                
        if (m_r)
        {
            delete m_r;
            m_r = NULL;
        }
    ;
            
                m_has_customXml = false;
                
        if (m_customXml)
        {
            delete m_customXml;
            m_customXml = NULL;
        }
    ;
            
                m_has_fldSimple = false;
                
        if (m_fldSimple)
        {
            delete m_fldSimple;
            m_fldSimple = NULL;
        }
    ;
            
                m_has_hyperlink = false;
                
        if (m_hyperlink)
        {
            delete m_hyperlink;
            m_hyperlink = NULL;
        }
    ;
            
                m_has_smartTag = false;
                
        if (m_smartTag)
        {
            delete m_smartTag;
            m_smartTag = NULL;
        }
    ;
            
                m_has_sdt = false;
                
        if (m_sdt)
        {
            delete m_sdt;
            m_sdt = NULL;
        }
    ;
            
                m_has_proofErr = false;
                
        if (m_proofErr)
        {
            delete m_proofErr;
            m_proofErr = NULL;
        }
    ;
            
                m_has_permStart = false;
                
        if (m_permStart)
        {
            delete m_permStart;
            m_permStart = NULL;
        }
    ;
            
                m_has_permEnd = false;
                
        if (m_permEnd)
        {
            delete m_permEnd;
            m_permEnd = NULL;
        }
    ;
            
                m_has_bookmarkStart = false;
                
        if (m_bookmarkStart)
        {
            delete m_bookmarkStart;
            m_bookmarkStart = NULL;
        }
    ;
            
                m_has_bookmarkEnd = false;
                
        if (m_bookmarkEnd)
        {
            delete m_bookmarkEnd;
            m_bookmarkEnd = NULL;
        }
    ;
            
                m_has_moveFromRangeStart = false;
                
        if (m_moveFromRangeStart)
        {
            delete m_moveFromRangeStart;
            m_moveFromRangeStart = NULL;
        }
    ;
            
                m_has_moveFromRangeEnd = false;
                
        if (m_moveFromRangeEnd)
        {
            delete m_moveFromRangeEnd;
            m_moveFromRangeEnd = NULL;
        }
    ;
            
                m_has_moveToRangeStart = false;
                
        if (m_moveToRangeStart)
        {
            delete m_moveToRangeStart;
            m_moveToRangeStart = NULL;
        }
    ;
            
                m_has_moveToRangeEnd = false;
                
        if (m_moveToRangeEnd)
        {
            delete m_moveToRangeEnd;
            m_moveToRangeEnd = NULL;
        }
    ;
            
                m_has_commentRangeStart = false;
                
        if (m_commentRangeStart)
        {
            delete m_commentRangeStart;
            m_commentRangeStart = NULL;
        }
    ;
            
                m_has_commentRangeEnd = false;
                
        if (m_commentRangeEnd)
        {
            delete m_commentRangeEnd;
            m_commentRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlInsRangeStart = false;
                
        if (m_customXmlInsRangeStart)
        {
            delete m_customXmlInsRangeStart;
            m_customXmlInsRangeStart = NULL;
        }
    ;
            
                m_has_customXmlInsRangeEnd = false;
                
        if (m_customXmlInsRangeEnd)
        {
            delete m_customXmlInsRangeEnd;
            m_customXmlInsRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlDelRangeStart = false;
                
        if (m_customXmlDelRangeStart)
        {
            delete m_customXmlDelRangeStart;
            m_customXmlDelRangeStart = NULL;
        }
    ;
            
                m_has_customXmlDelRangeEnd = false;
                
        if (m_customXmlDelRangeEnd)
        {
            delete m_customXmlDelRangeEnd;
            m_customXmlDelRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeStart = false;
                
        if (m_customXmlMoveFromRangeStart)
        {
            delete m_customXmlMoveFromRangeStart;
            m_customXmlMoveFromRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveFromRangeEnd = false;
                
        if (m_customXmlMoveFromRangeEnd)
        {
            delete m_customXmlMoveFromRangeEnd;
            m_customXmlMoveFromRangeEnd = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeStart = false;
                
        if (m_customXmlMoveToRangeStart)
        {
            delete m_customXmlMoveToRangeStart;
            m_customXmlMoveToRangeStart = NULL;
        }
    ;
            
                m_has_customXmlMoveToRangeEnd = false;
                
        if (m_customXmlMoveToRangeEnd)
        {
            delete m_customXmlMoveToRangeEnd;
            m_customXmlMoveToRangeEnd = NULL;
        }
    ;
            
                m_has_ins = false;
                
        if (m_ins)
        {
            delete m_ins;
            m_ins = NULL;
        }
    ;
            
                m_has_del = false;
                
        if (m_del)
        {
            delete m_del;
            m_del = NULL;
        }
    ;
            
                m_has_moveFrom = false;
                
        if (m_moveFrom)
        {
            delete m_moveFrom;
            m_moveFrom = NULL;
        }
    ;
            
                m_has_moveTo = false;
                
        if (m_moveTo)
        {
            delete m_moveTo;
            m_moveTo = NULL;
        }
    ;
            
                m_has_oMathPara = false;
                
        if (m_oMathPara)
        {
            delete m_oMathPara;
            m_oMathPara = NULL;
        }
    ;
            
                m_has_oMath = true;
                if (!m_oMath)
                {
                    m_oMath = new CT_OMath();
                }
                return m_oMath;
            
            }
            const CT_OMath& oMath(){

            if (m_oMath)
            {
                return *m_oMath;
            }
            return CT_OMath::default_instance();
        
            }

        private:
            bool m_has_acc ;
            CT_Acc* m_acc ;
            bool m_has_bar ;
            CT_Bar* m_bar ;
            bool m_has_box ;
            CT_Box* m_box ;
            bool m_has_borderBox ;
            CT_BorderBox* m_borderBox ;
            bool m_has_d ;
            CT_D* m_d ;
            bool m_has_eqArr ;
            CT_EqArr* m_eqArr ;
            bool m_has_f ;
            CT_F* m_f ;
            bool m_has_func ;
            CT_Func* m_func ;
            bool m_has_groupChr ;
            CT_GroupChr* m_groupChr ;
            bool m_has_limLow ;
            CT_LimLow* m_limLow ;
            bool m_has_limUpp ;
            CT_LimUpp* m_limUpp ;
            bool m_has_m ;
            CT_M* m_m ;
            bool m_has_nary ;
            CT_Nary* m_nary ;
            bool m_has_phant ;
            CT_Phant* m_phant ;
            bool m_has_rad ;
            CT_Rad* m_rad ;
            bool m_has_sPre ;
            CT_SPre* m_sPre ;
            bool m_has_sSub ;
            CT_SSub* m_sSub ;
            bool m_has_sSubSup ;
            CT_SSubSup* m_sSubSup ;
            bool m_has_sSup ;
            CT_SSup* m_sSup ;
            bool m_has_r ;
            CT_R* m_r ;
            bool m_has_customXml ;
            CT_CustomXmlRun* m_customXml ;
            bool m_has_fldSimple ;
            CT_SimpleField* m_fldSimple ;
            bool m_has_hyperlink ;
            CT_Hyperlink* m_hyperlink ;
            bool m_has_smartTag ;
            CT_SmartTagRun* m_smartTag ;
            bool m_has_sdt ;
            CT_SdtRun* m_sdt ;
            bool m_has_proofErr ;
            CT_ProofErr* m_proofErr ;
            bool m_has_permStart ;
            CT_PermStart* m_permStart ;
            bool m_has_permEnd ;
            CT_Perm* m_permEnd ;
            bool m_has_bookmarkStart ;
            CT_Bookmark* m_bookmarkStart ;
            bool m_has_bookmarkEnd ;
            CT_MarkupRange* m_bookmarkEnd ;
            bool m_has_moveFromRangeStart ;
            CT_MoveBookmark* m_moveFromRangeStart ;
            bool m_has_moveFromRangeEnd ;
            CT_MarkupRange* m_moveFromRangeEnd ;
            bool m_has_moveToRangeStart ;
            CT_MoveBookmark* m_moveToRangeStart ;
            bool m_has_moveToRangeEnd ;
            CT_MarkupRange* m_moveToRangeEnd ;
            bool m_has_commentRangeStart ;
            CT_MarkupRange* m_commentRangeStart ;
            bool m_has_commentRangeEnd ;
            CT_MarkupRange* m_commentRangeEnd ;
            bool m_has_customXmlInsRangeStart ;
            CT_TrackChange* m_customXmlInsRangeStart ;
            bool m_has_customXmlInsRangeEnd ;
            CT_Markup* m_customXmlInsRangeEnd ;
            bool m_has_customXmlDelRangeStart ;
            CT_TrackChange* m_customXmlDelRangeStart ;
            bool m_has_customXmlDelRangeEnd ;
            CT_Markup* m_customXmlDelRangeEnd ;
            bool m_has_customXmlMoveFromRangeStart ;
            CT_TrackChange* m_customXmlMoveFromRangeStart ;
            bool m_has_customXmlMoveFromRangeEnd ;
            CT_Markup* m_customXmlMoveFromRangeEnd ;
            bool m_has_customXmlMoveToRangeStart ;
            CT_TrackChange* m_customXmlMoveToRangeStart ;
            bool m_has_customXmlMoveToRangeEnd ;
            CT_Markup* m_customXmlMoveToRangeEnd ;
            bool m_has_ins ;
            CT_RunTrackChange* m_ins ;
            bool m_has_del ;
            CT_RunTrackChange* m_del ;
            bool m_has_moveFrom ;
            CT_RunTrackChange* m_moveFrom ;
            bool m_has_moveTo ;
            CT_RunTrackChange* m_moveTo ;
            bool m_has_oMathPara ;
            CT_OMathPara* m_oMathPara ;
            bool m_has_oMath ;
            CT_OMath* m_oMath ;

        }


    }

    class mathPr : public CT_MathPr : public Element{
    public:
        void toXml(ostream& _outStream ){

        CT_MathPr::toXml(\mathPr\, _outStream);
    
        }

    private:

    }

    class oMathPara : public CT_OMathPara : public Element{
    public:
        void toXml(ostream& _outStream ){

        CT_OMathPara::toXml(\oMathPara\, _outStream);
    
        }

    private:

    }

    class oMath : public CT_OMath : public Element{
    public:
        void toXml(ostream& _outStream ){

        CT_OMath::toXml(\oMath\, _outStream);
    
        }

    private:

    }

}